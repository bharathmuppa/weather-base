var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.382,1,0.912]],["body/components/AppComponent.html",[0,0.621,1,1.58,2,1.493,3,0.28,4,0.21,5,1.27,6,1.27,7,1.27,8,1.27,9,0.15,10,0.15,11,3.118,12,1.118,13,2.388,14,1.168,15,2.241,16,2.876,17,1.695,18,5.527,19,1.695,20,4.91,21,0.451,22,0.024,23,0.573,24,3.118,25,2.764,26,2.474,27,0.241,28,0.616,29,3.678,30,1.93,31,2.876,32,3.678,33,1.545,34,1.914,35,3.118,36,2.474,37,3.118,38,2.474,39,3.118,40,1.05,41,1.695,42,1.695,43,1.27,44,2.036,45,1.27,46,0.823,47,1.27,48,0.867,49,1.157,50,0.948,51,1.908,52,0.985,53,1.27,54,0.985,55,1.118,56,1.27,57,0.985,58,1.234,59,0.985,60,1.118,61,0.924,62,1.27,63,0.924,64,0.924,65,1.27,66,0.985,67,1.27,68,0.985,69,1.695,70,0.985,71,0.861,72,0.985,73,0.924,74,1.27,75,0.985,76,1.191,77,1.27,78,1.27,79,1.27,80,0.013,81,0.017,82,0.013]],["title/modules/AppModule.html",[83,1.771,84,2.289]],["body/modules/AppModule.html",[1,1.739,3,0.159,4,0.159,9,0.114,10,0.114,16,1.451,21,0.833,22,0.025,23,0.63,24,2.364,27,0.183,28,0.467,40,0.796,48,1.365,49,0.954,50,0.781,52,1.552,61,1.456,63,1.568,64,0.701,66,1.552,80,0.01,81,0.014,82,0.01,83,2.107,84,4.73,85,1.451,86,1.57,87,2.921,88,3.562,89,3.562,90,1.876,91,2.364,92,2.364,93,2.364,94,2.364,95,2.364,96,3.55,97,3.55,98,3.55,99,2.798,100,3.261,101,2.606,102,3.298,103,3.026,104,2.085,105,2.085,106,2.789,107,2.723,108,1.876,109,1.709,110,1.876,111,2.723,112,4.048,113,4.048,114,3.026,115,1.876,116,4.048,117,2.789,118,4.048,119,1.876,120,4.048,121,4.048,122,2.085,123,2.789,124,2.789,125,2.723,126,2.789,127,2.364,128,2.789,129,2.789,130,2.085,131,1.876,132,1.57,133,1.876,134,2.085,135,2.789,136,1.876,137,1.57,138,1.876,139,2.364,140,1.876,141,2.364,142,1.876,143,2.085,144,1.876,145,2.364,146,2.364,147,2.789,148,1.701,149,1.36,150,0.963,151,1.096,152,2.364,153,0.796,154,2.789,155,2.789,156,0.963,157,2.789,158,2.789,159,2.789,160,1.709,161,2.789,162,2.085,163,2.364,164,1.57,165,2.364,166,2.364]],["title/modules/AppRoutingModule.html",[83,1.771,96,2.086]],["body/modules/AppRoutingModule.html",[0,0.688,3,0.232,4,0.232,9,0.165,10,0.165,21,0.81,22,0.025,23,0.631,27,0.266,28,0.68,48,1.234,49,0.956,50,1.01,61,1.316,63,1.316,64,1.019,71,0.631,80,0.014,81,0.018,82,0.014,85,2.11,87,2.485,90,2.727,96,3.208,107,2.727,108,2.727,109,2.485,110,2.727,111,3.521,127,3.438,142,2.727,143,3.031,144,2.727,145,3.438,149,1.157,167,4.055,168,4.055,169,3.913,170,2.727,171,5.235,172,3.899,173,2.11,174,3.521,175,4.055,176,3.031,177,4.055,178,1.959,179,5.376,180,5.797,181,2.727,182,4.055,183,3.438,184,5.235,185,4.055,186,4.055,187,4.055,188,2.727,189,3.031,190,4.055,191,4.055,192,3.031,193,3.031,194,3.031,195,4.055]],["title/interfaces/Chainable.html",[196,0.613,197,2.544]],["body/interfaces/Chainable.html",[3,0.265,4,0.265,9,0.189,10,0.232,14,0.956,22,0.025,46,0.778,80,0.016,81,0.02,82,0.016,153,1.325,196,0.836,197,4.261,198,1.709,199,3.936,200,0.569,201,1.847,202,5.701,203,5.701,204,2.13,205,1.094,206,4.643,207,1.412,208,0.475,209,1.412,210,6.169,211,2.565,212,4.643,213,4.643,214,3.936,215,3.123,216,3.471,217,3.471,218,2.614,219,3.471,220,4.643,221,4.643,222,4.643,223,4.643,224,4.643,225,4.643,226,4.643,227,1.603,228,3.936]],["title/components/CityDetailsContainerComponent.html",[0,0.382,48,0.802]],["body/components/CityDetailsContainerComponent.html",[0,0.563,1,0.589,2,1.03,3,0.193,4,0.126,5,0.759,6,0.759,7,0.759,8,0.759,9,0.09,10,0.216,12,0.668,13,2.202,14,1.113,15,2.067,17,1.169,19,1.169,21,0.717,22,0.025,23,0.342,25,2.615,27,0.144,28,0.693,30,0.864,31,1.144,34,1.144,37,1.863,38,1.478,39,1.863,40,0.627,41,1.169,42,1.169,43,0.759,44,1.603,45,0.759,46,0.778,47,0.759,48,1.249,49,1.408,50,1.306,51,1.427,52,0.589,53,0.759,54,0.589,55,0.668,56,0.759,57,0.589,58,0.851,59,0.589,60,0.668,61,0.552,62,0.759,63,0.552,64,1.261,65,0.759,66,0.589,67,0.759,68,0.589,69,1.169,70,0.589,71,0.973,72,0.589,73,0.552,74,0.759,75,0.589,76,1.097,77,0.759,78,0.759,79,0.759,80,0.008,81,0.012,82,0.008,99,2.754,100,3.21,101,2.565,102,2.967,130,1.643,131,1.478,132,1.238,133,1.478,136,1.478,137,1.238,138,1.478,139,1.863,140,1.478,141,1.863,142,3.564,148,1.951,149,0.967,150,1.83,151,2.348,153,0.967,173,1.144,178,1.636,193,2.532,200,0.269,201,1.097,205,1.182,207,1.03,208,0.475,209,1.03,211,2.09,229,3.961,230,1.478,231,1.524,232,3.089,233,3.089,234,2.532,235,0.7,236,2.154,237,3.75,238,3.471,239,2.872,240,0.923,241,2.198,242,5.522,243,3.388,244,1.907,245,0.654,246,3.471,247,3.374,248,3.388,249,2.532,250,2.984,251,2.846,252,1.636,253,2.076,254,2.198,255,2.872,256,1.717,257,2.198,258,2.279,259,3.124,260,2.532,261,2.198,262,1.736,263,3.388,264,0.923,265,1.643,266,1.144,267,1.863,268,1.144,269,1.478,270,1.144,271,2.244,272,1.062,273,2.198,274,1.643,275,2.198,276,2.198,277,3.388,278,2.198,279,2.198,280,2.198,281,2.198,282,2.198,283,2.198,284,1.863,285,2.198]],["title/components/CitySearchComponent.html",[0,0.382,52,0.912]],["body/components/CitySearchComponent.html",[0,0.407,1,0.481,2,0.878,3,0.165,4,0.103,5,0.62,6,0.62,7,0.62,8,0.62,9,0.073,10,0.23,12,0.546,13,2.111,14,1.063,15,1.98,17,0.997,19,0.997,21,0.672,22,0.025,23,0.279,27,0.118,28,0.607,30,0.705,34,1.503,36,3.689,40,0.512,41,0.997,42,0.997,43,0.62,44,1.433,45,0.62,46,0.965,47,0.62,48,0.423,49,1.56,50,0.801,51,1.251,52,1.112,53,0.62,54,0.481,55,0.546,56,0.62,57,0.481,58,0.726,59,0.481,60,0.546,61,0.91,62,0.62,63,0.451,64,0.451,65,0.62,66,0.481,67,0.62,68,0.481,69,0.997,70,0.481,71,0.708,72,0.481,73,0.451,74,0.62,75,0.481,76,0.581,77,0.62,78,0.62,79,0.62,80,0.006,81,0.01,82,0.006,99,2.567,102,2.659,122,1.341,130,1.341,134,4.208,136,1.207,137,1.01,138,1.207,148,1.213,149,0.824,150,1.571,151,1.91,153,1.299,156,0.997,164,1.626,173,0.934,178,0.867,188,1.207,200,0.22,201,0.935,204,1.764,205,1.293,207,1.262,208,0.544,209,1.262,211,1.868,227,1.251,229,4.208,231,1.299,232,2.708,235,0.596,236,2.317,238,3.103,240,1.213,244,1.626,245,0.699,246,2.158,247,1.942,249,2.158,250,1.626,256,1.864,264,0.754,266,0.934,268,1.885,271,2.468,272,0.867,286,1.521,287,4.86,288,3.623,289,2.887,290,3.623,291,3.623,292,3.623,293,3.623,294,2.887,295,3.401,296,2.887,297,1.795,298,3.787,299,2.887,300,1.626,301,2.887,302,1.795,303,1.626,304,2.158,305,2.448,306,2.448,307,2.708,308,2.887,309,1.795,310,2.887,311,1.795,312,1.503,313,1.942,314,2.16,315,1.795,316,1.063,317,1.185,318,1.795,319,2.448,320,1.626,321,3.103,322,1.795,323,1.942,324,4.151,325,2.887,326,1.75,327,1.795,328,1.626,329,1.942,330,2.887,331,1.795,332,2.887,333,1.341,334,1.795,335,1.795,336,1.521,337,1.795,338,1.795,339,1.795,340,1.01,341,1.795,342,1.795,343,1.341,344,1.795,345,1.795,346,1.795,347,1.795,348,1.795,349,1.795,350,1.795,351,2.887,352,1.795,353,1.521,354,1.521,355,1.341,356,1.795,357,1.795,358,1.795,359,1.795,360,1.795,361,2.887,362,1.341,363,3.519,364,2.158,365,1.341,366,1.341,367,1.1,368,1.521,369,1.795,370,3.071,371,1.795,372,1.795,373,2.448,374,1.521,375,1.521,376,1.521,377,3.623,378,1.942,379,1.207,380,1.795,381,1.795,382,1.1,383,1.207,384,1.341,385,1.521,386,1.795,387,1.795,388,1.795,389,1.521,390,4.151,391,1.795,392,2.887,393,1.521,394,1.795,395,1.795,396,1.207,397,1.795,398,1.521,399,1.341,400,1.795,401,1.341]],["title/modules/CoreModule.html",[83,1.771,97,2.086]],["body/modules/CoreModule.html",[3,0.284,4,0.284,9,0.203,10,0.203,21,0.728,22,0.025,23,0.773,27,0.326,28,0.832,80,0.017,81,0.021,82,0.017,85,2.584,87,3.043,97,3.639,107,3.34,108,3.34,109,3.043,110,3.34,111,3.994,169,4.438,170,3.34,192,3.712,402,4.965,403,4.965,404,4.965,405,4.21]],["title/components/CountryFlagComponent.html",[0,0.382,54,0.912]],["body/components/CountryFlagComponent.html",[0,0.545,1,0.773,2,1.261,3,0.237,4,0.165,5,0.996,6,0.996,7,0.996,8,0.996,9,0.118,10,0.239,12,0.877,13,2.309,14,1.134,15,2.166,17,1.432,19,1.432,21,0.353,22,0.025,23,0.449,27,0.189,28,0.483,30,1.133,33,1.212,40,0.823,41,1.432,42,1.432,43,0.996,44,1.834,45,0.996,46,0.89,47,0.996,48,0.68,49,0.977,50,0.801,51,1.677,52,0.773,53,0.996,54,1.423,55,2.09,56,0.996,57,0.773,58,1.042,59,0.773,60,0.877,61,0.725,62,0.996,63,0.725,64,0.725,65,0.996,66,0.773,67,0.996,68,0.773,69,1.432,70,0.773,71,0.756,72,0.773,73,0.725,74,0.996,75,0.773,76,0.934,77,0.996,78,0.996,79,0.996,80,0.01,81,0.014,82,0.01,146,2.445,153,1.386,156,0.996,162,2.156,200,0.353,204,2.133,205,1.326,207,0.877,208,0.544,209,0.877,211,1.298,215,1.94,216,2.156,217,2.156,218,1.624,219,2.156,235,0.857,236,1.788,271,2.346,316,1.527,317,1.516,329,3.573,406,4.967,407,4.38,408,2.445,409,4.513,410,4.857,411,4.148,412,4.857,413,4.857,414,2.158,415,4.148,416,4.148,417,3.267,418,3.267,419,2.884,420,2.884,421,2.884,422,2.884,423,2.884,424,2.158,425,1.501,426,2.445,427,4.148,428,2.884,429,2.884,430,2.884,431,4.148]],["title/components/CurrentWeatherDetailsContainerComponent.html",[0,0.382,57,0.912]],["body/components/CurrentWeatherDetailsContainerComponent.html",[0,0.587,1,0.885,2,1.388,3,0.261,4,0.189,5,1.141,6,1.141,7,1.141,8,1.141,9,0.135,10,0.186,12,1.005,13,2.355,14,1.193,15,2.21,17,1.576,19,1.576,21,0.56,22,0.024,23,0.515,25,2.945,27,0.217,28,0.554,33,1.388,34,1.72,40,0.943,41,1.576,42,1.576,43,1.141,44,1.948,45,1.141,46,0.765,47,1.141,48,0.779,49,1.076,50,1.309,51,1.806,52,0.885,53,1.141,54,0.885,55,1.005,56,1.141,57,1.512,58,1.652,59,0.885,60,1.388,61,0.831,62,1.141,63,0.831,64,0.831,65,1.141,66,0.885,67,1.141,68,0.885,69,1.576,70,0.885,71,0.879,72,0.885,73,0.831,74,1.141,75,0.885,76,1.071,77,1.141,78,1.141,79,1.141,80,0.012,81,0.016,82,0.012,200,0.405,205,0.779,208,0.338,230,2.223,233,3.91,234,3.413,304,2.47,414,2.376,417,2.223,424,2.376,425,1.72,432,3.413,433,3.071,434,3.071,435,3.071,436,2.722,437,3.305,438,2.223,439,2.47,440,2.025,441,2.802,442,2.47,443,3.305]],["title/components/CurrentWeatherSummaryContainerComponent.html",[0,0.382,59,0.912]],["body/components/CurrentWeatherSummaryContainerComponent.html",[0,0.532,1,0.739,2,1.222,3,0.229,4,0.158,5,0.953,6,0.953,7,0.953,8,0.953,9,0.113,10,0.193,12,0.839,13,2.293,14,1.179,15,2.151,17,1.387,19,1.387,21,0.581,22,0.025,23,0.43,25,2.667,27,0.181,28,0.463,30,1.579,33,1.159,34,1.436,40,0.788,41,1.387,42,1.387,43,0.953,44,1.796,45,0.953,46,0.673,47,0.953,48,0.65,49,0.947,50,0.775,51,1.636,52,0.739,53,0.953,54,0.739,55,0.839,56,0.953,57,0.739,58,1.628,59,1.394,60,2.019,61,0.694,62,0.953,63,0.694,64,0.694,65,0.953,66,0.739,67,0.953,68,0.739,69,1.387,70,0.739,71,0.738,72,0.739,73,0.694,74,0.953,75,0.739,76,0.894,77,1.387,78,0.953,79,0.953,80,0.01,81,0.014,82,0.01,200,0.338,205,0.947,208,0.282,218,1.554,227,1.387,228,3.406,230,1.856,233,3.541,234,3.003,235,0.83,236,1.744,268,1.436,304,2.063,316,1.016,317,0.788,328,2.262,362,2.063,364,2.063,365,2.063,366,2.063,367,1.691,370,2.34,373,2.34,374,3.406,378,2.702,379,1.856,382,1.691,414,2.091,417,1.856,424,2.091,425,1.436,432,3.541,433,3.186,434,2.702,435,2.702,436,2.465,438,1.856,439,2.063,440,1.691,441,2.34,442,2.063,444,4.134,445,2.76,446,3.003,447,2.76,448,2.462,449,4.018,450,4.411,451,4.411,452,4.018,453,4.018,454,4.018,455,4.018,456,4.737,457,5.203,458,3.003,459,2.76,460,2.76,461,2.76,462,2.76,463,2.76,464,2.76,465,2.063,466,2.34]],["title/components/DashboardComponent.html",[0,0.382,61,0.855]],["body/components/DashboardComponent.html",[0,0.632,1,1.022,2,1.529,3,0.287,4,0.218,5,1.317,6,1.317,7,1.736,8,1.317,9,0.156,10,0.156,12,1.16,13,2.399,14,1.173,15,2.251,17,1.736,19,1.736,21,0.467,22,0.024,23,0.594,27,0.25,28,0.639,40,1.089,41,1.736,42,1.736,43,1.317,44,2.065,45,1.317,46,0.843,47,1.317,48,0.899,49,1.185,50,0.971,51,1.943,52,1.022,53,1.317,54,1.022,55,1.16,56,1.317,57,1.022,58,1.264,59,1.022,60,1.16,61,1.504,62,1.317,63,0.958,64,0.958,65,1.317,66,1.022,67,1.317,68,1.022,69,1.736,70,1.022,71,0.876,72,1.022,73,0.958,74,1.317,75,1.022,76,1.235,77,1.317,78,1.317,79,1.317,80,0.013,81,0.018,82,0.013,189,2.851,467,3.233,468,5.627,469,5.627,470,5.029,471,3.814]],["title/injectables/DataStoreService.html",[99,1.644,472,1.43]],["body/injectables/DataStoreService.html",[3,0.146,4,0.146,9,0.104,10,0.253,16,1.328,21,0.555,22,0.025,23,0.397,27,0.167,28,0.759,36,1.716,46,0.84,50,0.732,64,0.953,71,1.058,80,0.009,81,0.013,82,0.009,99,2.421,125,1.716,137,3.495,148,2.25,149,1.292,150,1.562,151,1.49,153,1.704,156,1.73,178,1.232,181,3.37,200,0.313,201,1.228,205,1.437,207,1.524,208,0.574,209,1.524,211,2.525,227,1.562,235,0.783,236,2.413,240,1.901,245,0.874,246,1.907,247,3.37,249,1.907,256,2.194,258,2.551,260,2.835,264,1.072,266,1.328,271,2.999,300,2.135,305,3.215,312,2.607,316,0.939,317,0.728,319,4.757,326,2.186,329,2.551,355,2.835,472,1.593,473,1.563,474,5.262,475,2.163,476,3.837,477,4.526,478,3.792,479,5.011,480,5.011,481,3.792,482,3.792,483,3.792,484,3.792,485,3.792,486,2.551,487,2.551,488,2.551,489,3.792,490,3.792,491,3.792,492,2.551,493,2.835,494,3.792,495,2.551,496,3.792,497,3.792,498,3.792,499,2.551,500,3.792,501,5.011,502,2.551,503,1.563,504,1.716,505,2.551,506,2.551,507,3.215,508,2.551,509,2.551,510,2.551,511,3.792,512,3.792,513,2.551,514,3.792,515,2.551,516,2.551,517,2.551]],["title/components/FavoritePlacesComponent.html",[0,0.382,63,0.855]],["body/components/FavoritePlacesComponent.html",[0,0.514,1,0.696,2,1.169,3,0.22,4,0.148,5,0.897,6,0.897,7,0.897,8,0.897,9,0.106,10,0.23,12,0.79,13,2.27,14,1.123,15,2.13,17,1.327,19,1.327,21,0.692,22,0.025,23,0.404,25,2.575,27,0.17,28,0.767,34,1.352,35,2.202,40,0.741,41,1.327,42,1.327,43,0.897,44,1.745,45,0.897,46,0.847,47,0.897,48,0.612,49,0.906,50,0.742,51,1.579,52,0.696,53,0.897,54,0.696,55,0.79,56,0.897,57,0.696,58,0.966,59,0.696,60,0.79,61,0.653,62,0.897,63,1.42,64,1.625,65,0.897,66,0.696,67,0.897,68,0.696,69,1.327,70,0.696,71,0.954,72,0.696,73,0.653,74,0.897,75,0.696,76,1.245,77,0.897,78,0.897,79,0.897,80,0.009,81,0.013,82,0.009,99,2.823,101,1.169,131,1.747,132,1.463,133,1.747,136,1.747,137,1.463,138,1.747,144,3.799,148,1.922,149,1.097,150,1.327,151,1.987,153,1.097,181,1.747,200,0.318,201,1.245,205,1.271,207,1.169,208,0.552,209,1.169,211,2.274,231,1.729,232,3.419,235,0.794,236,2.256,238,3.779,239,3.258,240,1.091,244,2.164,245,0.742,250,2.164,255,3.258,256,1.893,258,2.585,259,3.4,260,2.873,262,1.615,264,1.091,265,1.942,266,1.352,270,1.352,272,1.255,284,2.202,316,1.415,317,1.097,326,1.255,389,2.202,442,1.942,476,3.878,507,2.202,518,4.789,519,2.202,520,4.574,521,3.843,522,4.574,523,2.598,524,3.843,525,2.585,526,2.598,527,2.598,528,2.598,529,2.202,530,2.598,531,2.598,532,2.598]],["title/injectables/GooglePlacesService.html",[100,1.916,472,1.43]],["body/injectables/GooglePlacesService.html",[3,0.206,4,0.206,9,0.147,10,0.223,16,1.873,21,0.787,22,0.025,23,0.56,27,0.236,28,0.916,46,0.811,49,1.14,50,0.934,71,0.754,80,0.013,81,0.017,82,0.013,100,2.725,101,2.177,119,2.421,140,3.677,148,2.033,150,1.671,151,1.902,153,1.381,156,1.671,178,1.739,188,2.421,200,0.441,201,1.568,205,1.14,207,1.471,208,0.495,209,1.471,227,1.671,236,2.013,240,1.512,245,0.934,251,2.206,252,1.739,256,1.894,264,1.512,266,1.873,270,1.873,300,2.725,312,2.518,314,3.042,323,3.255,326,2.641,333,2.69,418,3.255,440,2.966,472,2.033,473,2.206,503,2.206,504,3.677,533,4.635,534,3.051,535,4.839,536,3.051,537,4.798,538,3.599,539,3.617,540,3.255,541,4.103,542,4.103,543,4.839,544,3.599,545,4.103,546,2.206,547,3.051,548,2.966,549,3.599,550,3.599,551,3.599,552,3.599,553,3.599,554,3.599,555,3.599]],["title/components/HeaderComponent.html",[0,0.382,66,0.912]],["body/components/HeaderComponent.html",[0,0.559,1,0.806,2,1.3,3,0.244,4,0.172,5,1.039,6,1.039,7,1.039,8,1.039,9,0.123,10,0.174,12,0.915,13,2.324,14,1.154,15,2.213,17,1.476,19,1.476,21,0.664,22,0.025,23,0.469,26,2.025,27,0.198,28,0.834,30,1.183,31,1.566,33,1.265,40,0.859,41,1.476,42,1.476,43,1.039,44,1.87,45,1.039,46,0.834,47,1.039,48,0.709,49,1.008,50,0.825,51,1.717,52,0.806,53,1.039,54,0.806,55,0.915,56,1.039,57,0.806,58,1.075,59,0.806,60,0.915,61,0.757,62,1.039,63,0.757,64,1.25,65,1.039,66,1.592,67,1.039,68,0.806,69,1.476,70,0.806,71,0.775,72,0.806,73,0.757,74,1.039,75,0.806,76,0.975,77,1.039,78,1.039,79,1.039,80,0.01,81,0.015,82,0.01,114,2.25,115,2.025,150,1.717,151,2.129,164,2.408,173,1.566,181,2.877,205,0.709,207,0.915,208,0.308,209,0.915,227,1.476,240,1.265,245,0.581,267,2.552,268,2.226,270,1.566,271,2.066,298,4.336,300,2.408,375,2.552,376,2.552,418,2.877,425,1.566,556,2.552,557,5.416,558,4.974,559,4.277,560,3.01,561,6.114,562,6.248,563,3.01,564,3.626,565,4.277,566,4.277,567,4.277,568,2.552,569,3.01,570,3.01,571,4.277,572,4.277,573,4.277,574,2.025,575,3.01,576,3.01,577,3.197,578,2.25]],["title/interfaces/IChart.html",[196,0.613,579,2.086]],["body/interfaces/IChart.html",[3,0.253,4,0.253,9,0.181,10,0.181,22,0.025,27,0.364,38,2.981,46,1.13,73,1.114,80,0.015,81,0.019,82,0.015,149,1.897,196,1.14,198,1.632,200,0.543,204,2.185,208,0.567,235,1.144,245,0.855,259,3.726,269,3.726,317,1.265,579,3.394,580,2.716,581,3.313,582,4.516,583,4.87,584,4.696,585,3.879,586,4.696,587,4.696,588,3.758,589,1.862]],["title/interfaces/ICoordinate.html",[196,0.613,590,2.289]],["body/interfaces/ICoordinate.html",[3,0.275,4,0.275,9,0.196,10,0.196,22,0.025,27,0.316,71,1.014,80,0.017,81,0.02,82,0.017,196,1.049,198,1.771,200,0.59,204,2.34,208,0.596,231,2.165,235,1.203,245,0.929,590,3.918,591,4.079,592,4.079,593,4.811,594,4.079,595,5.521,596,5.521,597,4.939,598,4.939]],["title/interfaces/IGooglePlace.html",[196,0.613,548,2.086]],["body/interfaces/IGooglePlace.html",[3,0.267,4,0.267,9,0.19,10,0.19,22,0.025,27,0.306,30,1.834,33,1.96,71,0.727,80,0.016,81,0.02,82,0.016,148,1.96,196,1.16,198,1.718,200,0.572,204,2.283,208,0.66,235,1.181,245,0.901,251,3.504,252,2.762,303,3.22,328,2.627,529,4.848,548,3.504,589,2.402,599,3.488,600,5.464,601,4.817,602,3.956,603,3.846,604,3.956,605,3.956]],["title/interfaces/IOpenWeatherReport.html",[196,0.613,262,1.43]],["body/interfaces/IOpenWeatherReport.html",[3,0.243,4,0.243,9,0.173,10,0.173,14,1.045,21,0.521,22,0.025,27,0.279,58,1.653,73,1.653,80,0.015,81,0.019,82,0.015,149,1.877,196,1.067,198,1.565,200,0.521,208,0.638,235,1.114,245,0.82,252,2.606,262,2.266,303,3.037,314,3.244,436,3.518,589,2.762,595,5.285,596,5.285,597,4.573,598,4.573,606,3.603,607,4.573,608,4.573]],["title/interfaces/IPhoto.html",[196,0.613,603,2.289]],["body/interfaces/IPhoto.html",[3,0.258,4,0.258,9,0.184,10,0.184,22,0.025,27,0.297,30,2.505,33,2.677,80,0.016,81,0.02,82,0.016,148,2.355,196,1.147,198,1.664,200,0.554,204,2.337,208,0.652,235,1.158,245,0.872,251,3.435,252,2.708,303,3.156,328,3.156,548,2.769,589,2.805,599,3.378,600,3.831,601,3.378,602,3.831,603,4.1,604,5.403,605,5.403]],["title/interfaces/IPlace.html",[196,0.613,256,1.103]],["body/interfaces/IPlace.html",[3,0.217,4,0.217,9,0.155,10,0.155,21,0.465,22,0.025,27,0.249,46,1.069,49,1.613,55,1.94,58,1.261,64,1.261,80,0.013,81,0.017,82,0.013,196,1.011,198,1.398,200,0.465,204,2.363,208,0.666,235,1.036,245,0.733,256,1.625,312,2.61,314,2.61,493,4.198,525,4.442,545,4.252,589,2.359,590,4.177,592,4.252,594,4.252,609,3.22,610,5.016,611,5.973,612,4.465,613,5.973,614,5.973,615,5.973,616,3.749,617,5.016,618,5.016]],["title/interfaces/IPlaceCard.html",[196,0.613,619,2.544]],["body/interfaces/IPlaceCard.html",[3,0.273,4,0.273,9,0.195,10,0.195,14,0.974,21,0.712,22,0.025,27,0.314,71,1.054,80,0.017,81,0.02,82,0.017,196,1.126,198,1.762,200,0.587,208,0.594,235,1.2,237,4.86,245,0.924,256,2.157,262,2.798,619,4.341,620,4.058,621,5.808]],["title/interfaces/ISeries.html",[196,0.613,585,2.086]],["body/interfaces/ISeries.html",[3,0.252,4,0.252,9,0.18,10,0.18,22,0.025,27,0.362,38,3.715,46,1.113,73,1.109,80,0.015,81,0.019,82,0.015,149,1.922,196,1.138,198,1.624,200,0.541,204,2.181,208,0.565,235,1.141,245,0.851,259,2.967,269,2.967,317,1.804,579,2.703,580,2.703,581,3.297,582,3.297,583,4.507,584,3.74,585,3.695,586,5.357,587,5.357,588,4.682,589,2.533]],["title/interfaces/IWeatherDetail.html",[196,0.613,436,1.771]],["body/interfaces/IWeatherDetail.html",[3,0.192,4,0.192,9,0.137,10,0.137,14,1.125,21,0.412,22,0.025,27,0.22,58,1.16,71,0.719,80,0.012,81,0.016,82,0.012,149,1.622,162,3.451,196,0.95,198,1.236,200,0.412,208,0.667,215,3.105,216,3.451,217,3.451,218,2.599,219,3.451,235,0.954,245,0.648,269,3.105,312,3.341,313,3.105,314,2.403,426,3.914,436,2.403,448,2.829,458,3.451,589,2.954,622,2.847,623,5.681,624,5.681,625,5.681,626,5.681,627,5.681,628,6.154,629,5.681,630,6.154,631,4.617,632,5.681,633,4.617,634,4.617,635,4.617,636,4.617,637,4.617,638,4.617,639,4.617,640,4.617,641,4.617,642,4.617,643,4.617,644,4.617,645,4.006]],["title/interfaces/IWeatherSummary.html",[196,0.613,645,2.289]],["body/interfaces/IWeatherSummary.html",[3,0.261,4,0.261,9,0.186,10,0.186,14,1.122,22,0.025,27,0.299,80,0.016,81,0.02,82,0.016,196,1.015,198,1.68,200,0.559,204,2.311,208,0.627,235,1.165,245,1.309,252,2.204,253,2.796,268,2.935,425,3.483,589,2.572,612,4.78,616,4.216,645,3.794,646,3.868,647,4.563,648,5.64,649,4.781]],["title/components/InfoCardComponent.html",[0,0.382,68,0.912]],["body/components/InfoCardComponent.html",[0,0.58,1,0.864,2,1.365,3,0.369,4,0.184,5,1.113,6,1.113,7,1.113,8,1.113,9,0.132,10,0.228,12,0.98,13,2.347,14,1.15,15,2.202,17,1.55,19,1.55,21,0.55,22,0.025,23,0.502,27,0.212,28,0.541,40,0.92,41,1.55,42,1.55,43,1.113,44,1.927,45,1.113,46,0.752,47,1.113,48,0.76,49,1.058,50,0.866,51,1.782,52,0.864,53,1.113,54,0.864,55,0.98,56,1.113,57,0.864,58,1.128,59,0.864,60,0.98,61,0.81,62,1.113,63,0.81,64,0.81,65,1.113,66,0.864,67,1.113,68,1.496,69,1.55,70,0.864,71,0.804,72,0.864,73,0.81,74,1.113,75,0.864,76,1.045,77,1.927,78,1.113,79,1.113,80,0.011,81,0.016,82,0.011,200,0.395,205,1.217,244,1.815,247,2.169,316,1.901,317,1.843,362,2.41,363,3.805,364,2.41,365,2.41,366,2.41,382,1.976,393,4.377,414,2.336,424,2.905,434,3.019,435,3.019,438,2.169,650,4.733,651,4.173,652,2.169,653,3.859,654,3.355,655,6.234,656,4.488,657,2.734,658,3.224,659,3.224,660,3.224,661,3.224]],["title/injectables/OpenWeatherService.html",[101,1.532,472,1.43]],["body/injectables/OpenWeatherService.html",[3,0.185,4,0.185,9,0.132,10,0.24,14,0.986,16,1.687,21,0.746,22,0.025,23,0.505,27,0.213,28,0.868,46,0.755,49,1.319,50,1.08,58,0.815,80,0.011,81,0.016,82,0.011,101,2.518,119,2.18,132,3.311,149,1.286,150,1.555,151,1.77,153,1.286,156,1.119,178,1.566,200,0.397,201,1.459,205,1.319,207,1.37,208,0.461,209,1.37,227,1.555,235,0.93,236,1.906,240,1.362,245,0.869,252,2.703,256,1.813,262,1.362,264,1.362,265,2.423,266,1.687,270,1.687,271,2.94,300,2.536,312,2.344,313,3.764,314,2.912,316,1.659,317,1.286,323,3.03,326,2.501,343,3.367,472,1.893,473,1.986,503,1.986,504,2.18,536,2.748,537,4.667,539,3.367,540,3.03,541,3.819,542,3.819,546,1.986,547,2.748,607,2.748,662,4.985,663,2.748,664,5.178,665,5.178,666,4.505,667,4.505,668,4.505,669,4.505,670,3.241,671,3.819,672,5.595,673,4.505,674,3.241,675,4.505,676,3.241,677,3.241,678,2.748,679,3.241,680,2.423,681,4.505,682,3.241,683,3.241,684,3.241,685,3.241,686,3.241,687,3.241,688,3.241]],["title/components/PlaceCardComponent.html",[0,0.382,70,0.912]],["body/components/PlaceCardComponent.html",[0,0.523,1,0.718,2,1.196,3,0.225,4,0.153,5,0.925,6,0.925,7,0.925,8,0.925,9,0.109,10,0.233,12,0.815,13,2.282,14,1.138,15,2.141,17,1.358,19,1.358,21,0.571,22,0.025,23,0.417,27,0.176,28,0.449,30,1.831,31,2.046,33,1.652,40,0.765,41,1.358,42,1.608,43,0.925,44,1.772,45,0.925,46,0.659,47,0.925,48,0.632,49,0.927,50,0.759,51,1.608,52,0.718,53,0.925,54,0.718,55,0.815,56,0.925,57,0.718,58,1.29,59,0.718,60,0.815,61,0.674,62,0.925,63,0.674,64,1.374,65,0.925,66,0.718,67,0.925,68,0.718,69,1.358,70,1.375,71,1.052,72,0.718,73,0.674,74,0.925,75,0.718,76,0.868,77,1.887,78,0.925,79,0.925,80,0.009,81,0.014,82,0.009,153,0.765,156,0.925,200,0.328,201,1.274,205,1.288,208,0.477,211,1.769,218,1.509,227,1.608,235,0.812,236,1.715,256,1.509,262,1.957,268,1.395,274,2.003,295,2.003,303,1.509,307,2.003,316,0.987,317,0.765,320,1.509,328,2.214,367,2.41,378,1.803,379,1.803,382,1.642,383,1.803,384,2.003,396,1.803,399,2.003,401,2.003,414,2.046,424,2.424,425,1.395,434,2.645,435,2.645,438,1.803,440,2.41,444,3.482,446,2.94,448,2.41,465,2.003,525,2.645,574,1.803,577,2.003,578,2.003,580,3.501,652,1.803,653,3.482,654,2.94,657,2.272,689,4.27,690,4.35,691,3.334,692,3.949,693,2.272,694,2.272,695,4.35,696,2.68,697,2.68,698,3.334,699,3.334,700,2.003,701,2.003,702,2.272,703,2.003,704,2.272,705,3.334,706,3.334,707,2.272,708,2.272,709,3.949,710,1.803,711,2.272,712,2.272,713,2.272,714,2.272,715,2.272,716,2.272,717,2.68]],["title/components/PlaceHourlyForecastComponent.html",[0,0.382,72,0.912]],["body/components/PlaceHourlyForecastComponent.html",[0,0.473,1,0.608,2,1.055,3,0.198,4,0.13,5,0.783,6,0.783,7,0.783,8,0.783,9,0.092,10,0.241,12,0.69,13,2.216,14,1.127,15,2.079,17,1.198,19,1.198,21,0.624,22,0.025,23,0.353,25,1.277,27,0.149,28,0.38,30,1.364,31,1.806,33,1.771,34,1.18,40,0.647,41,1.198,42,1.198,43,0.783,44,1.63,45,0.783,46,0.899,47,0.783,48,0.534,49,0.818,50,0.67,51,1.455,52,0.608,53,0.783,54,0.608,55,0.69,56,0.783,57,0.608,58,0.872,59,0.608,60,0.69,61,0.57,62,0.783,63,0.57,64,0.57,65,0.783,66,0.608,67,0.783,68,0.608,69,1.198,70,0.608,71,0.999,72,1.265,73,1.73,74,0.783,75,0.608,76,0.735,77,0.783,78,0.783,79,0.783,80,0.008,81,0.012,82,0.008,149,1.347,150,0.783,153,1.203,156,1.198,178,1.096,194,2.594,200,0.278,201,1.124,204,1.198,205,1.357,207,1.055,208,0.589,209,1.055,211,1.561,227,0.783,231,1.561,235,0.717,236,1.552,237,2.594,245,0.438,256,1.365,262,2.254,272,1.096,306,2.942,316,1.738,317,1.452,367,1.39,368,1.923,414,1.806,424,2.193,436,1.806,439,1.695,448,2.126,451,2.942,458,2.594,574,1.525,579,3.288,580,3.618,582,3.529,583,3.15,585,2.126,608,4.549,649,3.573,700,1.695,701,1.695,718,4.413,719,1.923,720,3.573,721,4.214,722,3.47,723,4.214,724,4.214,725,4.214,726,4.214,727,3.47,728,2.942,729,2.268,730,2.268,731,3.47,732,2.268,733,2.594,734,2.942,735,3.15,736,2.942,737,4.002,738,2.268,739,1.923,740,1.923,741,3.47,742,3.47,743,2.268,744,2.268,745,2.268,746,2.268,747,1.923,748,2.942,749,2.268,750,2.268,751,2.268,752,2.268,753,2.268,754,2.268,755,2.268,756,2.268,757,2.268,758,2.268,759,2.268,760,3.47,761,2.268,762,2.268,763,2.268]],["title/injectables/PlacesService.html",[102,1.771,472,1.43]],["body/injectables/PlacesService.html",[3,0.164,4,0.164,9,0.117,10,0.246,16,1.498,21,0.689,22,0.025,23,0.448,27,0.189,28,0.813,46,1.012,49,1.144,50,0.556,71,0.962,80,0.01,81,0.014,82,0.01,102,2.762,119,1.937,148,2.79,149,1.183,150,2.083,151,1.628,153,1.763,156,1.941,160,1.765,178,1.391,188,1.937,200,0.353,201,1.342,204,1.675,205,1.38,207,1.476,208,0.543,209,1.476,227,1.43,235,0.856,236,2.405,240,1.21,245,0.937,250,2.333,256,2.116,264,1.21,266,1.498,270,1.498,271,2.344,300,2.333,316,1.06,317,0.822,320,1.621,321,2.152,326,1.391,333,2.152,472,1.741,473,1.765,503,1.765,504,1.937,537,3.967,539,3.097,540,2.787,589,2.039,612,4.204,680,2.152,764,2.441,765,5.308,766,5.308,767,4.143,768,4.143,769,2.88,770,4.143,771,5.624,772,2.88,773,5.856,774,2.88,775,4.5,776,4.143,777,4.143,778,2.88,779,5.308,780,5.308,781,4.143,782,2.88,783,4.143,784,4.143,785,2.88,786,2.88,787,2.88,788,2.88,789,2.88,790,2.88]],["title/pipes/RoundoffPipe.html",[340,1.916,791,2.086]],["body/pipes/RoundoffPipe.html",[3,0.265,4,0.265,9,0.189,10,0.232,12,1.412,21,0.569,22,0.025,23,0.723,27,0.305,28,0.778,46,1.034,80,0.016,81,0.02,82,0.016,153,1.325,156,1.968,201,1.504,205,1.094,207,1.412,208,0.475,209,1.412,231,2.089,272,2.243,317,1.627,340,3.21,450,4.833,540,3.123,589,2.774,791,3.493,792,3.471,793,3.936,794,3.936,795,4.833,796,4.643,797,4.833,798,4.643,799,4.643,800,4.643,801,4.643,802,4.643]],["title/modules/SharedModule.html",[83,1.771,98,2.086]],["body/modules/SharedModule.html",[2,0.852,3,0.232,4,0.16,9,0.114,10,0.114,14,0.878,21,0.842,22,0.025,23,0.436,26,1.884,27,0.184,28,0.47,40,0.8,50,0.784,54,1.741,55,0.852,57,1.554,58,1.021,59,1.554,60,1.235,68,1.554,70,1.741,71,0.816,72,1.741,73,1.021,75,1.741,76,0.907,80,0.01,81,0.014,82,0.01,83,1.458,85,2.486,86,1.577,87,2.928,88,2.094,89,2.094,90,3.214,98,4.256,103,3.036,104,2.094,105,2.094,107,1.884,108,1.884,109,1.717,110,1.884,111,2.732,125,1.884,143,3.036,169,3.036,170,1.884,192,2.094,194,3.036,336,2.375,407,2.094,433,2.732,568,2.375,651,2.094,689,2.094,703,2.094,718,2.094,735,2.094,791,3.555,803,2.375,804,2.375,805,2.375,806,3.555,807,2.801,808,4.778,809,2.801,810,4.778,811,2.801,812,4.778,813,4.778,814,2.375,815,2.375,816,4.778,817,2.801,818,4.778,819,2.801,820,2.801,821,4.778,822,2.801,823,4.778,824,2.801,825,4.778,826,2.801,827,2.801,828,4.062,829,2.801,830,2.801,831,2.801,832,2.375,833,4.062,834,2.375,835,4.778,836,2.801,837,2.801,838,2.801,839,2.801,840,2.801,841,2.094]],["title/components/SmartPlaceCardComponent.html",[0,0.382,75,0.912]],["body/components/SmartPlaceCardComponent.html",[0,0.407,1,0.482,2,0.879,3,0.165,4,0.103,5,0.621,6,0.621,7,0.621,8,0.621,9,0.073,10,0.235,12,0.547,13,2.112,14,1.137,15,1.981,17,0.998,19,0.998,21,0.596,22,0.025,23,0.28,27,0.118,28,0.608,30,1.426,31,1.888,33,1.524,40,0.513,41,0.998,42,1.252,43,0.621,44,1.435,45,0.621,46,0.815,47,0.621,48,0.424,49,0.979,50,1.166,51,1.252,52,0.482,53,0.621,54,0.482,55,0.547,56,0.621,57,0.482,58,1.045,59,0.482,60,0.547,61,0.452,62,0.621,63,0.912,64,1.145,65,0.621,66,0.482,67,0.621,68,0.482,69,0.998,70,0.482,71,1.077,72,0.482,73,0.452,74,0.621,75,1.113,76,1.723,77,1.572,78,0.621,79,0.621,80,0.006,81,0.01,82,0.006,101,2.301,131,1.209,132,1.012,133,1.209,150,1.435,151,1.912,152,2.452,153,1.3,156,0.998,160,1.102,164,1.628,173,0.936,189,2.162,200,0.22,201,0.937,205,1.327,207,1.264,208,0.523,209,1.264,211,2.189,218,1.012,227,1.252,231,1.301,235,0.597,236,2.252,240,1.215,244,1.628,245,0.7,250,1.628,253,1.772,256,1.778,262,1.746,264,0.755,268,0.936,271,1.397,272,0.869,274,1.344,295,1.344,298,3.789,303,1.012,307,1.344,312,1.505,313,2.795,314,2.163,316,1.335,317,1.035,320,1.012,323,2.795,326,1.752,328,1.628,353,1.524,354,1.524,355,1.344,367,1.772,378,1.209,379,1.209,382,1.102,383,1.209,384,1.344,396,1.209,399,1.344,401,1.344,409,2.162,414,1.505,424,1.505,440,1.772,444,2.711,446,2.162,448,1.772,465,1.344,525,1.945,574,1.209,577,2.162,578,1.344,601,2.162,652,1.209,653,2.711,654,2.162,671,2.452,690,3.523,691,2.452,692,3.075,693,1.524,694,1.524,695,3.523,698,2.452,699,2.452,700,1.344,701,1.344,702,1.524,703,1.344,704,1.524,705,2.452,706,2.452,707,1.524,708,1.524,709,3.075,710,1.209,711,1.524,712,1.524,713,1.524,714,1.524,715,1.524,716,1.524,720,3.075,728,2.452,733,2.162,736,2.452,737,3.523,739,1.524,841,4.303,842,4.881,843,3.627,844,2.892,845,2.892,846,1.798,847,2.892,848,2.892,849,1.798,850,2.892,851,1.798,852,3.523,853,1.798,854,1.798,855,1.798,856,2.892,857,3.106,858,1.798,859,2.452,860,4.156,861,4.554,862,1.798,863,1.798,864,1.798,865,3.627,866,1.798,867,2.892,868,1.798]],["title/guards/ValidateDataForPlaceNavigationGuard.html",[174,2.289,869,2.544]],["body/guards/ValidateDataForPlaceNavigationGuard.html",[3,0.22,4,0.22,9,0.157,10,0.231,16,2.005,21,0.693,22,0.025,23,0.6,27,0.253,28,0.948,46,0.849,48,1.193,50,0.744,71,0.935,80,0.013,81,0.018,82,0.013,149,1.614,150,1.33,151,2.361,153,1.1,156,1.748,160,2.361,164,2.851,173,2.005,174,3.406,176,4.228,179,3.267,183,5.29,193,3.785,200,0.472,201,1.64,205,1.193,207,1.54,208,0.518,209,1.54,231,1.734,240,1.619,244,2.851,245,0.744,264,1.619,270,2.005,272,1.861,298,4.507,326,2.732,472,2.127,493,3.785,503,2.361,710,2.592,775,4.293,857,2.88,870,3.853,871,4.795,872,3.267,873,3.853,874,3.853,875,3.853,876,6.007,877,3.853,878,5.656,879,3.853,880,3.853,881,3.853,882,3.853,883,3.853]],["title/pipes/WeatherIconPipe.html",[340,1.916,806,2.086]],["body/pipes/WeatherIconPipe.html",[3,0.259,4,0.259,9,0.185,10,0.229,12,1.381,14,0.761,21,0.557,22,0.025,23,0.707,27,0.298,28,0.761,46,1.024,80,0.016,81,0.02,82,0.016,150,1.568,153,1.296,156,1.568,201,1.471,204,1.568,205,1.07,207,1.381,208,0.465,209,1.381,231,2.043,245,0.876,253,2.783,272,2.194,317,1.822,340,3.166,418,3.054,425,2.926,792,3.394,794,3.849,795,4.767,797,4.767,806,3.446,884,4.767,885,3.849,886,5.623,887,6.561,888,4.541,889,5.623,890,4.541,891,4.541,892,4.541]],["title/coverage.html",[893,3.95]],["body/coverage.html",[0,0.743,1,0.789,9,0.12,10,0.288,11,2.495,14,0.989,22,0.025,31,3.161,36,4.315,48,0.694,50,1.035,52,0.789,54,0.789,57,0.789,59,0.789,60,1.28,61,0.74,63,0.74,66,0.789,68,0.789,70,0.789,71,0.765,72,0.789,73,1.347,75,0.789,80,0.01,81,0.015,82,0.01,99,1.422,100,1.657,101,1.324,102,1.532,132,1.657,134,2.2,137,1.657,140,1.98,142,1.98,144,1.98,149,0.84,174,1.98,176,2.2,196,1.169,197,2.2,199,2.495,208,0.301,227,1.016,229,3.146,230,3.304,256,0.953,262,1.237,286,2.495,340,2.37,406,2.495,407,2.2,408,2.495,432,3.146,433,2.831,436,1.532,466,2.495,467,2.495,472,2.252,474,2.495,475,2.495,518,2.495,519,2.495,533,2.495,534,2.495,546,2.579,548,1.804,556,2.495,579,1.804,580,3.285,581,3.146,585,1.804,590,1.98,591,2.495,599,3.146,603,1.98,606,2.495,609,2.495,616,2.2,619,2.2,620,2.495,622,2.495,645,1.98,646,2.495,650,2.495,651,2.2,652,3.304,662,2.495,663,2.495,689,2.2,718,2.2,719,2.495,764,2.495,791,1.804,793,2.495,806,1.804,841,2.2,842,2.495,869,2.2,871,2.495,872,2.495,884,2.495,885,2.495,893,2.495,894,2.495,895,2.943,896,2.495,897,4.913,898,2.495,899,6.074,900,4.209,901,6.074,902,4.913,903,2.943,904,2.943,905,2.943,906,2.943,907,2.943,908,2.943,909,2.943,910,2.943,911,2.943,912,2.943,913,5.361,914,2.943,915,2.943,916,2.943,917,2.943,918,4.913,919,2.943,920,2.943,921,2.943,922,2.943,923,2.943,924,2.943,925,2.495,926,2.943,927,2.943,928,2.943,929,2.495,930,2.495,931,2.943,932,2.943]],["title/dependencies.html",[86,2.307,933,2.836]],["body/dependencies.html",[22,0.025,23,0.745,80,0.017,81,0.02,82,0.017,86,2.695,114,4.341,115,3.906,122,3.578,170,3.219,173,2.491,264,2.011,735,3.578,814,4.058,815,4.058,834,4.058,934,4.786,935,6.914,936,4.786,937,5.808,938,4.786,939,4.786,940,4.786,941,4.786,942,4.786,943,4.058,944,4.786,945,4.786,946,4.786,947,4.786,948,4.786,949,4.786,950,4.786]],["title/index.html",[200,0.348,951,2.836,952,2.836]],["body/index.html",[0,0.616,9,0.148,14,0.982,15,0.776,22,0.018,26,3.267,64,0.602,71,0.756,80,0.008,81,0.013,82,0.008,86,2.037,109,1.469,125,3.828,148,2.04,149,1.244,163,2.032,164,2.734,165,3.068,166,2.032,214,2.032,215,1.612,227,1.8,250,1.349,251,2.672,252,2.952,253,2.976,258,3.941,320,1.349,321,1.791,329,1.612,383,1.612,385,5.263,396,1.612,398,2.032,405,4.117,409,1.791,417,1.612,546,2.217,564,2.032,678,2.032,710,1.612,733,1.791,734,4.117,747,4.647,748,2.032,832,2.032,852,2.032,859,4.42,894,4.647,943,2.032,953,3.618,954,4.359,955,5.859,956,4.359,957,3.618,958,3.618,959,2.397,960,2.397,961,2.397,962,2.397,963,2.397,964,2.397,965,4.857,966,3.618,967,3.618,968,2.397,969,2.397,970,2.397,971,6.208,972,3.618,973,3.618,974,2.397,975,2.397,976,2.397,977,2.397,978,6.717,979,5.482,980,2.397,981,2.397,982,2.397,983,4.359,984,2.397,985,2.397,986,2.397,987,2.397,988,4.857,989,3.618,990,3.618,991,3.618,992,4.857,993,2.397,994,2.397,995,2.397,996,2.397,997,2.397,998,2.397,999,2.397,1000,5.691,1001,2.397,1002,2.397,1003,2.397,1004,2.397,1005,2.397,1006,3.618,1007,3.618,1008,3.618,1009,2.397,1010,4.359,1011,2.397,1012,2.397,1013,2.397,1014,2.397,1015,2.397,1016,4.857,1017,2.397,1018,3.618,1019,2.397,1020,2.397,1021,2.397,1022,3.618,1023,4.857,1024,3.618,1025,2.397,1026,2.397,1027,2.397,1028,2.397,1029,2.397,1030,2.397,1031,2.397,1032,2.397,1033,2.397,1034,2.397,1035,2.397,1036,2.397,1037,4.857,1038,3.618,1039,5.996,1040,2.397,1041,2.397,1042,3.618,1043,3.068,1044,2.397,1045,4.359,1046,2.397,1047,3.618,1048,2.397,1049,2.397,1050,2.397,1051,4.359,1052,2.397,1053,2.397,1054,2.397,1055,2.397,1056,2.397,1057,2.397,1058,2.032,1059,3.618,1060,5.482,1061,4.857,1062,3.618,1063,2.397,1064,2.397,1065,3.618,1066,5.482,1067,2.397,1068,2.397,1069,4.359,1070,2.397,1071,2.397,1072,2.397,1073,2.397,1074,2.397,1075,2.397,1076,3.618,1077,2.397,1078,2.397,1079,2.397,1080,4.359,1081,2.397,1082,3.618,1083,5.213,1084,2.397,1085,3.618,1086,2.397,1087,2.397,1088,5.213,1089,2.397,1090,4.857,1091,2.397,1092,2.397,1093,2.397,1094,2.397,1095,2.397,1096,2.397,1097,2.397,1098,2.397,1099,2.397,1100,2.397,1101,2.397,1102,3.618,1103,2.397,1104,2.397,1105,3.618,1106,2.397,1107,2.397,1108,2.397,1109,2.397,1110,2.397,1111,2.397]],["title/modules.html",[85,2.425]],["body/modules.html",[22,0.021,80,0.018,81,0.021,82,0.018,84,3.549,85,2.745,96,3.233,97,3.233,98,3.233,115,4.139,320,3.465,1043,5.217,1112,6.154,1113,6.154,1114,6.712]],["title/overview.html",[1115,3.95]],["body/overview.html",[1,1.704,2,1.056,22,0.025,40,0.991,48,1.265,52,1.438,54,1.704,57,1.438,59,1.438,61,1.349,63,1.448,66,1.438,68,1.438,70,1.704,72,1.704,75,1.704,80,0.012,81,0.016,82,0.012,83,1.807,84,4.792,85,1.807,86,1.955,87,2.127,88,2.595,89,2.595,90,2.335,91,2.943,92,2.943,93,2.943,94,2.943,95,2.943,96,3.289,97,3.289,98,4.329,99,2.593,100,3.022,101,2.415,102,2.793,103,3.53,104,2.595,105,2.595,172,2.335,198,1.278,343,2.595,473,2.127,680,2.595,791,3.289,792,2.595,803,2.943,804,2.943,805,2.943,806,3.289,869,2.595,925,2.943,1115,2.943,1116,4.722,1117,3.471,1118,3.471]],["title/routes.html",[172,3.134]],["body/routes.html",[22,0.022,80,0.019,81,0.022,82,0.019,172,3.74]],["title/miscellaneous/variables.html",[1119,2.404,1120,3.474]],["body/miscellaneous/variables.html",[10,0.251,14,1.031,22,0.025,80,0.016,81,0.02,82,0.016,160,2.824,200,0.565,208,0.581,316,2.264,317,1.755,546,3.932,740,4.811,857,3.445,896,3.907,898,4.811,929,3.907,930,3.907,1058,4.811,1119,3.907,1120,3.907,1121,4.608,1122,4.608,1123,4.608,1124,5.674,1125,5.674,1126,5.674,1127,5.674,1128,5.674,1129,5.674,1130,5.674,1131,5.674,1132,5.674,1133,5.674,1134,5.674,1135,4.608,1136,4.608]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":285,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["0.5rem",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["0.9",{"_index":661,"title":{},"body":{"components/InfoCardComponent.html":{}}}],["0/1",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":680,"title":{},"body":{"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"overview.html":{}}}],["1/2",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/HeaderComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["1000).gethours()}:00",{"_index":757,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["11",{"_index":925,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["11.0.0",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["11.2.2",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["11.4.0",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1117,"title":{},"body":{"overview.html":{}}}],["16px",{"_index":390,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["17.0.1",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["1px",{"_index":371,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["1rem",{"_index":442,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["2",{"_index":343,"title":{},"body":{"components/CitySearchComponent.html":{},"injectables/OpenWeatherService.html":{},"overview.html":{}}}],["2.0.0",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":763,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["2021",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["230px",{"_index":709,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["24px",{"_index":431,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["25",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["25px",{"_index":377,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["2rem",{"_index":462,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["3/3",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":760,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["33",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1116,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["48px",{"_index":369,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["4px",{"_index":762,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["5",{"_index":1118,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":466,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{},"coverage.html":{}}}],["54",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["56px",{"_index":575,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5aa454",{"_index":742,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["5rem",{"_index":443,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{}}}],["6.6.3",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["6/11",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["7).map((weatherdetail",{"_index":755,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["7/10",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":374,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["_",{"_index":868,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["_country",{"_index":412,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["above",{"_index":1102,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":712,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["access",{"_index":246,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{}}}],["accessors",{"_index":415,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["accounts",{"_index":632,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["activatedroute",{"_index":242,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["activatedroutesnapshot",{"_index":876,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["acts",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["actual_component",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["add",{"_index":258,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"index.html":{}}}],["added",{"_index":260,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{}}}],["addfavoriteplace",{"_index":478,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["addfavoriteplace(place",{"_index":485,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["adding",{"_index":1079,"title":{},"body":{"index.html":{}}}],["addplacetofavorites",{"_index":692,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["affected",{"_index":1051,"title":{},"body":{"index.html":{}}}],["affected:apps",{"_index":1049,"title":{},"body":{"index.html":{}}}],["affected:e2e",{"_index":1067,"title":{},"body":{"index.html":{}}}],["affected:test",{"_index":1064,"title":{},"body":{"index.html":{}}}],["agnostic",{"_index":1004,"title":{},"body":{"index.html":{}}}],["air",{"_index":643,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["aizasyc1fenfhqqodb4abjhzxdr_ecl2itbsajo",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":399,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["allcities",{"_index":290,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["along",{"_index":441,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["angular",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"components/CitySearchComponent.html":{},"components/HeaderComponent.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"index.html":{}}}],["angular/animations",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{}}}],["angular/compiler",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":814,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/CitySearchComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":817,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/badge",{"_index":829,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":809,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":819,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":568,"title":{},"body":{"components/HeaderComponent.html":{},"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":822,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/menu",{"_index":824,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":826,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/theming",{"_index":362,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{}}}],["angular/material/toolbar",{"_index":811,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/HeaderComponent.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"dependencies.html":{}}}],["anomalies",{"_index":1025,"title":{},"body":{"index.html":{}}}],["api",{"_index":252,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"injectables/GooglePlacesService.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IWeatherSummary.html":{},"injectables/OpenWeatherService.html":{},"index.html":{}}}],["api?input=${city.name",{"_index":551,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["api](https://openweathermap.org",{"_index":677,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["api]{@link",{"_index":681,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["app",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataStoreService.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["app.component",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["applications",{"_index":1000,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":84,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":799,"title":{},"body":{"pipes/RoundoffPipe.html":{}}}],["approutingmodule",{"_index":96,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["apps/.../app.po.ts",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/live",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["architecture",{"_index":1005,"title":{},"body":{"index.html":{}}}],["artifacts",{"_index":1053,"title":{},"body":{"index.html":{}}}],["associated",{"_index":248,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["atmospheric",{"_index":644,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["auto",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{}}}],["autocomplete",{"_index":387,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["automatic",{"_index":1032,"title":{},"body":{"index.html":{}}}],["available",{"_index":320,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceCardComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{},"modules.html":{}}}],["axis",{"_index":587,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{}}}],["b38f8f",{"_index":714,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["background",{"_index":367,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["bar",{"_index":827,"title":{},"body":{"modules/SharedModule.html":{}}}],["base",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["base.git",{"_index":977,"title":{},"body":{"index.html":{}}}],["base/mylib",{"_index":1110,"title":{},"body":{"index.html":{}}}],["based",{"_index":748,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"index.html":{}}}],["before",{"_index":710,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"index.html":{}}}],["behaviorsubject",{"_index":501,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["below",{"_index":1092,"title":{},"body":{"index.html":{}}}],["beta.33",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":398,"title":{},"body":{"components/CitySearchComponent.html":{},"index.html":{}}}],["block",{"_index":465,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["bold",{"_index":461,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["boolean",{"_index":493,"title":{},"body":{"injectables/DataStoreService.html":{},"interfaces/IPlace.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["bootstrap",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["border",{"_index":370,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["bottom",{"_index":532,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["branch",{"_index":1030,"title":{},"body":{"index.html":{}}}],["brightness(80",{"_index":708,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["browse",{"_index":1114,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":747,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"index.html":{}}}],["built",{"_index":964,"title":{},"body":{"index.html":{}}}],["c",{"_index":451,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["call",{"_index":542,"title":{},"body":{"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{}}}],["calls",{"_index":668,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["canactivate",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["canactivate(route",{"_index":875,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["candidates",{"_index":600,"title":{},"body":{"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{}}}],["capabilities",{"_index":1080,"title":{},"body":{"index.html":{}}}],["card",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["card'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["card.component",{"_index":835,"title":{},"body":{"modules/SharedModule.html":{}}}],["card.component.html",{"_index":654,"title":{},"body":{"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["card.component.scss",{"_index":653,"title":{},"body":{"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts",{"_index":652,"title":{},"body":{"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:16",{"_index":658,"title":{},"body":{"components/InfoCardComponent.html":{}}}],["card.component.ts:18",{"_index":659,"title":{},"body":{"components/InfoCardComponent.html":{}}}],["card.component.ts:20",{"_index":657,"title":{},"body":{"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{}}}],["card.component.ts:22",{"_index":693,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts:24",{"_index":694,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts:26",{"_index":696,"title":{},"body":{"components/PlaceCardComponent.html":{}}}],["card.component.ts:27",{"_index":858,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts:30",{"_index":855,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts:31",{"_index":697,"title":{},"body":{"components/PlaceCardComponent.html":{}}}],["card.component.ts:32",{"_index":847,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts:47",{"_index":854,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts:62",{"_index":849,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts:71",{"_index":851,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts:78",{"_index":853,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["card/info",{"_index":651,"title":{},"body":{"components/InfoCardComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["card/place",{"_index":689,"title":{},"body":{"components/PlaceCardComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["card/smart",{"_index":841,"title":{},"body":{"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["card__fav",{"_index":717,"title":{},"body":{"components/PlaceCardComponent.html":{}}}],["card__image",{"_index":707,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["category",{"_index":584,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{}}}],["center",{"_index":401,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["chainable",{"_index":197,"title":{"interfaces/Chainable.html":{}},"body":{"interfaces/Chainable.html":{},"coverage.html":{}}}],["change",{"_index":1065,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":434,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{}}}],["changedetectionstrategy",{"_index":438,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":435,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{}}}],["changes",{"_index":739,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["changes.place",{"_index":863,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["changes.place.currentvalue",{"_index":864,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["changes.weather",{"_index":749,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["changes.weather.currentvalue",{"_index":750,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["chart",{"_index":582,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["charts",{"_index":735,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["check",{"_index":859,"title":{},"body":{"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["chrome",{"_index":985,"title":{},"body":{"index.html":{}}}],["ci",{"_index":980,"title":{},"body":{"index.html":{}}}],["cities",{"_index":321,"title":{},"body":{"components/CitySearchComponent.html":{},"injectables/PlacesService.html":{},"index.html":{}}}],["city",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IPlace.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["city.id",{"_index":786,"title":{},"body":{"injectables/PlacesService.html":{}}}],["city.name",{"_index":351,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["city.name.tolowercase().indexof(name",{"_index":785,"title":{},"body":{"injectables/PlacesService.html":{}}}],["city.tolowercase",{"_index":359,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["city/:name/:id",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["city[0",{"_index":787,"title":{},"body":{"injectables/PlacesService.html":{}}}],["citydetailscontainercomponent",{"_index":48,"title":{"components/CityDetailsContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{},"overview.html":{}}}],["citylowercase",{"_index":358,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["cityname",{"_index":291,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["citynamecontrol",{"_index":292,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["citysearchcomponent",{"_index":52,"title":{"components/CitySearchComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["class",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["classes",{"_index":592,"title":{},"body":{"interfaces/ICoordinate.html":{},"interfaces/IPlace.html":{}}}],["clean",{"_index":981,"title":{},"body":{"index.html":{}}}],["client",{"_index":539,"title":{},"body":{"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{}}}],["clone",{"_index":973,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":994,"title":{},"body":{"index.html":{}}}],["cloudiness",{"_index":631,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["clouds",{"_index":623,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["cluster_appmodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":803,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":805,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":804,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":1016,"title":{},"body":{"index.html":{}}}],["collection",{"_index":259,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/IChart.html":{},"interfaces/ISeries.html":{}}}],["color",{"_index":382,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["color(mat",{"_index":365,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{}}}],["colorscheme",{"_index":723,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["column",{"_index":656,"title":{},"body":{"components/InfoCardComponent.html":{}}}],["command",{"_index":224,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands",{"_index":957,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["community",{"_index":1100,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"overview.html":{}}}],["composition",{"_index":621,"title":{},"body":{"interfaces/IPlaceCard.html":{}}}],["concentration",{"_index":639,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["condition",{"_index":313,"title":{},"body":{"components/CitySearchComponent.html":{},"interfaces/IWeatherDetail.html":{},"injectables/OpenWeatherService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["configuration",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["configured",{"_index":1009,"title":{},"body":{"index.html":{}}}],["console",{"_index":995,"title":{},"body":{"index.html":{}}}],["console.log('logger",{"_index":226,"title":{},"body":{"interfaces/Chainable.html":{}}}],["console.log(this.weatherdata",{"_index":753,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["const",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{}}}],["construct",{"_index":334,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["constructor",{"_index":240,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["constructor(activatedroute",{"_index":241,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["constructor(datastoreservice",{"_index":523,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["constructor(domsanitizer",{"_index":560,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(http",{"_index":769,"title":{},"body":{"injectables/PlacesService.html":{}}}],["constructor(httpclient",{"_index":536,"title":{},"body":{"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{}}}],["constructor(openweatherservice",{"_index":846,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["constructor(placesservice",{"_index":297,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["constructor(private",{"_index":270,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["constructor(router",{"_index":873,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["contain",{"_index":713,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["container",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["container'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["container.component",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["container.component.html",{"_index":234,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["container.component.scss",{"_index":233,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["container.component.ts",{"_index":230,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:16",{"_index":437,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{}}}],["container.component.ts:17",{"_index":447,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["container.component.ts:19",{"_index":445,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["container.component.ts:24",{"_index":261,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["container.component.ts:26",{"_index":243,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["container.component.ts:52",{"_index":254,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["container.component.ts:76",{"_index":257,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["container/city",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"coverage.html":{}}}],["container/current",{"_index":433,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["container__chart",{"_index":761,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["content",{"_index":396,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["controller",{"_index":325,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["convention",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"components/CountryFlagComponent.html":{},"interfaces/IWeatherDetail.html":{}}}],["coord",{"_index":611,"title":{},"body":{"interfaces/IPlace.html":{}}}],["coordinates",{"_index":594,"title":{},"body":{"interfaces/ICoordinate.html":{},"interfaces/IPlace.html":{}}}],["copyright",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["core",{"_index":1093,"title":{},"body":{"index.html":{}}}],["core/core.module",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["core/data",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["core/google",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{}}}],["core/open",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["core/places/places.service",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{}}}],["core/router",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["coremodule",{"_index":97,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["corresponding",{"_index":991,"title":{},"body":{"index.html":{}}}],["country",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IPlace.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{}}}],["country(value",{"_index":428,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["countryflagcomponent",{"_index":54,"title":{"components/CountryFlagComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":893,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":417,"title":{},"body":{"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"index.html":{}}}],["creates",{"_index":244,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/InfoCardComponent.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["current",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPlace.html":{},"interfaces/IWeatherDetail.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{}}}],["currently",{"_index":489,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["currenttime",{"_index":444,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["currentweatherapi",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentweatherapiurl",{"_index":664,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["currentweatherdetailscontainercomponent",{"_index":57,"title":{"components/CurrentWeatherDetailsContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["currentweathersummarycontainercomponent",{"_index":59,"title":{"components/CurrentWeatherSummaryContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cursor",{"_index":578,"title":{},"body":{"components/HeaderComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["cy.get('#header",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cypress",{"_index":214,"title":{},"body":{"interfaces/Chainable.html":{},"index.html":{}}}],["cypress.commands.add('logger",{"_index":225,"title":{},"body":{"interfaces/Chainable.html":{}}}],["d5d148fa23f7958ae9ad9fa0b2aaf860",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashboard",{"_index":468,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["dashboard.component.html",{"_index":470,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":469,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.component",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboardcomponent",{"_index":61,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/IChart.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{},"index.html":{}}}],["datastoreservice",{"_index":99,"title":{"injectables/DataStoreService.html":{}},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":228,"title":{},"body":{"interfaces/Chainable.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["date().toisostring",{"_index":446,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["date(weatherdetail.dt",{"_index":756,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["debouncetime",{"_index":331,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["debouncetime(500",{"_index":344,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["declarations",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["declare",{"_index":212,"title":{},"body":{"interfaces/Chainable.html":{}}}],["deep.mat",{"_index":386,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["default",{"_index":316,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":205,"title":{},"body":{"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["dep",{"_index":1042,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":86,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":1033,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":956,"title":{},"body":{"index.html":{}}}],["deps",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":245,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["detailed",{"_index":269,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"interfaces/IChart.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{}}}],["details",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{}}}],["dev",{"_index":1075,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1019,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1084,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1091,"title":{},"body":{"index.html":{}}}],["dew",{"_index":633,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["dew_point",{"_index":624,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["diagram",{"_index":1071,"title":{},"body":{"index.html":{}}}],["different",{"_index":1085,"title":{},"body":{"index.html":{}}}],["direction",{"_index":393,"title":{},"body":{"components/CitySearchComponent.html":{},"components/InfoCardComponent.html":{}}}],["directive",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["directives",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["directory",{"_index":1056,"title":{},"body":{"index.html":{}}}],["disable",{"_index":216,"title":{},"body":{"interfaces/Chainable.html":{},"components/CountryFlagComponent.html":{},"interfaces/IWeatherDetail.html":{}}}],["display",{"_index":268,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IWeatherSummary.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["displayfn",{"_index":294,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["displayfn(city",{"_index":301,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["dist",{"_index":1055,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":332,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["docs",{"_index":1041,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":894,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documents",{"_index":1035,"title":{},"body":{"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["domain",{"_index":741,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["domsanitizer",{"_index":561,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dt",{"_index":625,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["duplicates",{"_index":515,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["duplicates.length",{"_index":517,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["dynamic",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1024,"title":{},"body":{"index.html":{}}}],["e2e/src/support/app.po.ts",{"_index":896,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["e2e/src/support/commands.ts",{"_index":199,"title":{},"body":{"interfaces/Chainable.html":{},"coverage.html":{}}}],["e2e/src/support/commands.ts:17",{"_index":206,"title":{},"body":{"interfaces/Chainable.html":{}}}],["ease",{"_index":1020,"title":{},"body":{"index.html":{}}}],["element",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["elements",{"_index":335,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["end",{"_index":1066,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["environment",{"_index":546,"title":{},"body":{"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.currentweatherapi",{"_index":673,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["environment.oncecallapi",{"_index":675,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["environment.openweatherurl",{"_index":672,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["environments/environment",{"_index":547,"title":{},"body":{"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{}}}],["equipped",{"_index":1015,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":215,"title":{},"body":{"interfaces/Chainable.html":{},"components/CountryFlagComponent.html":{},"interfaces/IWeatherDetail.html":{},"index.html":{}}}],["eslint/naming",{"_index":426,"title":{},"body":{"components/CountryFlagComponent.html":{},"interfaces/IWeatherDetail.html":{}}}],["eslint/no",{"_index":220,"title":{},"body":{"interfaces/Chainable.html":{}}}],["etc",{"_index":1089,"title":{},"body":{"index.html":{}}}],["eventemitter",{"_index":695,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["exclude=minutely,daily&units=metric&appid=${environment.openweatherapikey",{"_index":687,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["execute",{"_index":1061,"title":{},"body":{"index.html":{}}}],["export",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["exports",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["extendable",{"_index":961,"title":{},"body":{"index.html":{}}}],["extensible",{"_index":1074,"title":{},"body":{"index.html":{}}}],["face",{"_index":571,"title":{},"body":{"components/HeaderComponent.html":{}}}],["false",{"_index":857,"title":{},"body":{"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"miscellaneous/variables.html":{}}}],["favorite",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IPlace.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["favoriteplaces",{"_index":476,"title":{},"body":{"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{}}}],["favoriteplacesandweather",{"_index":522,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["favoriteplacescomponent",{"_index":63,"title":{"components/FavoritePlacesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["favorites",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{}}}],["feels",{"_index":452,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["feels_like",{"_index":626,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["fetch",{"_index":676,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["field",{"_index":820,"title":{},"body":{"modules/SharedModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1013,"title":{},"body":{"index.html":{}}}],["filter",{"_index":295,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["filter(city",{"_index":308,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["filter(res",{"_index":341,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["filteredcities",{"_index":293,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["finalurl",{"_index":685,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["flag",{"_index":409,"title":{},"body":{"components/CountryFlagComponent.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["flag'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["flag.component",{"_index":837,"title":{},"body":{"modules/SharedModule.html":{}}}],["flag.component.html",{"_index":411,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["flag.component.scss",{"_index":410,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["flag.component.ts",{"_index":408,"title":{},"body":{"components/CountryFlagComponent.html":{},"coverage.html":{}}}],["flag.component.ts:16",{"_index":419,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["flag.component.ts:18",{"_index":420,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["flag.component.ts:25",{"_index":422,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["flag.component.ts:33",{"_index":416,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["flag/country",{"_index":407,"title":{},"body":{"components/CountryFlagComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["flagurl",{"_index":413,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["flex",{"_index":392,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["flexlayoutmodule",{"_index":813,"title":{},"body":{"modules/SharedModule.html":{}}}],["font",{"_index":378,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["forecast",{"_index":608,"title":{},"body":{"interfaces/IOpenWeatherReport.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["forecast'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["forecast.component",{"_index":836,"title":{},"body":{"modules/SharedModule.html":{}}}],["forecast.component.html",{"_index":722,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.scss",{"_index":721,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.ts",{"_index":719,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"coverage.html":{}}}],["forecast.component.ts:19",{"_index":729,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.ts:21",{"_index":730,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.ts:23",{"_index":744,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.ts:25",{"_index":745,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.ts:27",{"_index":746,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.ts:29",{"_index":743,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.ts:36",{"_index":738,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.ts:50",{"_index":732,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast/ichart.ts",{"_index":581,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{},"coverage.html":{}}}],["forecast/place",{"_index":718,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["forkjoin",{"_index":263,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["format",{"_index":733,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["formatted",{"_index":306,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["formatweatherreportforhourlydata",{"_index":727,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["formatweatherreportforhourlydata(weatherreport",{"_index":731,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["formcontrol",{"_index":324,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["formsmodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["framework",{"_index":966,"title":{},"body":{"index.html":{}}}],["frontends",{"_index":1094,"title":{},"body":{"index.html":{}}}],["full",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":1072,"title":{},"body":{"index.html":{}}}],["g",{"_index":1037,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1039,"title":{},"body":{"index.html":{}}}],["generate:docs",{"_index":1040,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1073,"title":{},"body":{"index.html":{}}}],["generates",{"_index":471,"title":{},"body":{"components/DashboardComponent.html":{}}}],["generating",{"_index":1087,"title":{},"body":{"index.html":{}}}],["geological",{"_index":593,"title":{},"body":{"interfaces/ICoordinate.html":{}}}],["getallfavoriteplaces",{"_index":479,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["getallplaces",{"_index":765,"title":{},"body":{"injectables/PlacesService.html":{}}}],["getallplacesfromserver",{"_index":766,"title":{},"body":{"injectables/PlacesService.html":{}}}],["getcountry",{"_index":421,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["getcurrentweathercondition",{"_index":666,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["getcurrentweathercondition(city",{"_index":669,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["getgreeting",{"_index":898,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getplacebyid",{"_index":767,"title":{},"body":{"injectables/PlacesService.html":{}}}],["getplacebyid(id",{"_index":777,"title":{},"body":{"injectables/PlacesService.html":{}}}],["getplaceimage",{"_index":535,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["getplaceimage(city",{"_index":543,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["getplacesbyname",{"_index":768,"title":{},"body":{"injectables/PlacesService.html":{}}}],["getplacesbyname(name",{"_index":781,"title":{},"body":{"injectables/PlacesService.html":{}}}],["gets",{"_index":312,"title":{},"body":{"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"interfaces/IPlace.html":{},"interfaces/IWeatherDetail.html":{},"injectables/OpenWeatherService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["getselectedplace",{"_index":480,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["getting",{"_index":951,"title":{"index.html":{}},"body":{}}],["getweathercondition",{"_index":296,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["getweathercondition(place",{"_index":310,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["getweatherreport",{"_index":844,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["getweatherreport(place",{"_index":848,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["git",{"_index":975,"title":{},"body":{"index.html":{}}}],["github",{"_index":1031,"title":{},"body":{"index.html":{}}}],["go",{"_index":989,"title":{},"body":{"index.html":{}}}],["google",{"_index":251,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"injectables/GooglePlacesService.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"index.html":{}}}],["googlekey",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["googleplacesservice",{"_index":100,"title":{"injectables/GooglePlacesService.html":{}},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"injectables/GooglePlacesService.html":{},"coverage.html":{},"overview.html":{}}}],["gotoplacedetails",{"_index":845,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["gotoplacedetails(place",{"_index":850,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["graph",{"_index":1043,"title":{},"body":{"index.html":{},"modules.html":{}}}],["guard",{"_index":869,"title":{"guards/ValidateDataForPlaceNavigationGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":870,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["guards/validate",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{}}}],["h2",{"_index":576,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header",{"_index":557,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["header.component.html",{"_index":559,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":558,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":66,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["help",{"_index":1018,"title":{},"body":{"index.html":{}}}],["helps",{"_index":890,"title":{},"body":{"pipes/WeatherIconPipe.html":{}}}],["here",{"_index":1008,"title":{},"body":{"index.html":{}}}],["home",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["host",{"_index":574,"title":{},"body":{"components/HeaderComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["hourly",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IChart.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/ISeries.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["html",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["html_attributions",{"_index":604,"title":{},"body":{"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{}}}],["http",{"_index":771,"title":{},"body":{"injectables/PlacesService.html":{}}}],["http://localhost:4200",{"_index":986,"title":{},"body":{"index.html":{}}}],["http://openweathermap.org/img/w",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://openweathermap.org/img/w/${value}.png",{"_index":892,"title":{},"body":{"pipes/WeatherIconPipe.html":{}}}],["httpclient",{"_index":537,"title":{},"body":{"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{}}}],["httpclientmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["https://api.openweathermap.org/data/2.5",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/bharathmuppa/weather",{"_index":976,"title":{},"body":{"index.html":{}}}],["https://maps.googleapis.com/maps/api/place/photo?maxwidth=320&&key=${environment.googlekey",{"_index":554,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["https://openweathermap.org/api/one",{"_index":684,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["https://openweathermap.org/current",{"_index":682,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["https://www.countryflags.io/${value.tolowercase()}/shiny/24.png",{"_index":430,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["human",{"_index":637,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["humidity",{"_index":627,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["ichart",{"_index":579,"title":{"interfaces/IChart.html":{}},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{},"components/PlaceHourlyForecastComponent.html":{},"coverage.html":{}}}],["icon",{"_index":425,"title":{},"body":{"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IWeatherSummary.html":{},"components/PlaceCardComponent.html":{},"pipes/WeatherIconPipe.html":{}}}],["icon.pipe",{"_index":839,"title":{},"body":{"modules/SharedModule.html":{}}}],["icon.pipe.ts",{"_index":885,"title":{},"body":{"pipes/WeatherIconPipe.html":{},"coverage.html":{}}}],["icon.pipe.ts:17",{"_index":888,"title":{},"body":{"pipes/WeatherIconPipe.html":{}}}],["icons",{"_index":567,"title":{},"body":{"components/HeaderComponent.html":{}}}],["iconsapi",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icoordinate",{"_index":590,"title":{"interfaces/ICoordinate.html":{}},"body":{"interfaces/ICoordinate.html":{},"interfaces/IPlace.html":{},"coverage.html":{}}}],["id",{"_index":612,"title":{},"body":{"interfaces/IPlace.html":{},"interfaces/IWeatherSummary.html":{},"injectables/PlacesService.html":{}}}],["identifier",{"_index":616,"title":{},"body":{"interfaces/IPlace.html":{},"interfaces/IWeatherSummary.html":{},"coverage.html":{}}}],["igoogleplace",{"_index":548,"title":{"interfaces/IGooglePlace.html":{}},"body":{"injectables/GooglePlacesService.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"coverage.html":{}}}],["image",{"_index":440,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"injectables/GooglePlacesService.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["image.png",{"_index":716,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["images",{"_index":993,"title":{},"body":{"index.html":{}}}],["implements",{"_index":231,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/ICoordinate.html":{},"components/PlaceHourlyForecastComponent.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["import",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/IWeatherDetail.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["imported",{"_index":1109,"title":{},"body":{"index.html":{}}}],["imports",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["include",{"_index":1086,"title":{},"body":{"index.html":{}}}],["index",{"_index":200,"title":{"index.html":{}},"body":{"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"miscellaneous/variables.html":{}}}],["indigo",{"_index":363,"title":{},"body":{"components/CitySearchComponent.html":{},"components/InfoCardComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["infocardcomponent",{"_index":68,"title":{"components/InfoCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["information",{"_index":247,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/InfoCardComponent.html":{}}}],["initializes",{"_index":300,"title":{},"body":{"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{}}}],["injectable",{"_index":472,"title":{"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{}},"body":{"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{}}}],["injectables",{"_index":473,"title":{},"body":{"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"overview.html":{}}}],["inline",{"_index":464,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["input",{"_index":424,"title":{},"body":{"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["inputs",{"_index":414,"title":{},"body":{"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["inputtype=textquery&fields=photos&key=${environment.googlekey",{"_index":552,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["install",{"_index":982,"title":{},"body":{"index.html":{}}}],["installation",{"_index":954,"title":{},"body":{"index.html":{}}}],["instance",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["interface",{"_index":196,"title":{"interfaces/Chainable.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{}},"body":{"interfaces/Chainable.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"coverage.html":{}}}],["interfaces",{"_index":198,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"overview.html":{}}}],["internal",{"_index":272,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["introduction",{"_index":953,"title":{},"body":{"index.html":{}}}],["iopenweatherreport",{"_index":262,"title":{"interfaces/IOpenWeatherReport.html":{}},"body":{"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPlaceCard.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["iphoto",{"_index":603,"title":{"interfaces/IPhoto.html":{}},"body":{"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"coverage.html":{}}}],["iplace",{"_index":256,"title":{"interfaces/IPlace.html":{}},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["iplacecard",{"_index":619,"title":{"interfaces/IPlaceCard.html":{}},"body":{"interfaces/IPlaceCard.html":{},"coverage.html":{}}}],["isduplicate",{"_index":481,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["isduplicate(places",{"_index":491,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["iseries",{"_index":585,"title":{"interfaces/ISeries.html":{}},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{},"components/PlaceHourlyForecastComponent.html":{},"coverage.html":{}}}],["isfavorite",{"_index":613,"title":{},"body":{"interfaces/IPlace.html":{}}}],["isnan(value",{"_index":801,"title":{},"body":{"pipes/RoundoffPipe.html":{}}}],["iso",{"_index":856,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["italic",{"_index":384,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["items",{"_index":400,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["iweatherdetail",{"_index":436,"title":{"interfaces/IWeatherDetail.html":{}},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IWeatherDetail.html":{},"components/PlaceHourlyForecastComponent.html":{},"coverage.html":{}}}],["iweathersummary",{"_index":645,"title":{"interfaces/IWeatherSummary.html":{}},"body":{"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"coverage.html":{}}}],["jest",{"_index":1063,"title":{},"body":{"index.html":{}}}],["json",{"_index":773,"title":{},"body":{"injectables/PlacesService.html":{}}}],["json.parse(localstorage.getitem('favorites",{"_index":500,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["json.stringify(this.favoriteplaces",{"_index":512,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["justify",{"_index":395,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["key",{"_index":992,"title":{},"body":{"index.html":{}}}],["label",{"_index":655,"title":{},"body":{"components/InfoCardComponent.html":{}}}],["large",{"_index":380,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["larger",{"_index":459,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["lat",{"_index":595,"title":{},"body":{"interfaces/ICoordinate.html":{},"interfaces/IOpenWeatherReport.html":{}}}],["latest",{"_index":1010,"title":{},"body":{"index.html":{}}}],["latitude",{"_index":597,"title":{},"body":{"interfaces/ICoordinate.html":{},"interfaces/IOpenWeatherReport.html":{}}}],["layout",{"_index":815,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["learn",{"_index":1006,"title":{},"body":{"index.html":{}}}],["legend",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"overview.html":{}}}],["level",{"_index":999,"title":{},"body":{"index.html":{}}}],["lib",{"_index":1107,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1088,"title":{},"body":{"index.html":{}}}],["library",{"_index":1105,"title":{},"body":{"index.html":{}}}],["libs",{"_index":832,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["line",{"_index":218,"title":{},"body":{"interfaces/Chainable.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"interfaces/IWeatherDetail.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["list",{"_index":319,"title":{},"body":{"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{}}}],["literal",{"_index":529,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"interfaces/IGooglePlace.html":{}}}],["live",{"_index":456,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["load",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"components/SmartPlaceCardComponent.html":{}}}],["loading",{"_index":860,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["loadingweather",{"_index":843,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["loads",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":972,"title":{},"body":{"index.html":{}}}],["localstorage.setitem('favorites",{"_index":511,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["location",{"_index":314,"title":{},"body":{"components/CitySearchComponent.html":{},"injectables/GooglePlacesService.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPlace.html":{},"interfaces/IWeatherDetail.html":{},"injectables/OpenWeatherService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["locations",{"_index":618,"title":{},"body":{"interfaces/IPlace.html":{}}}],["logger",{"_index":202,"title":{},"body":{"interfaces/Chainable.html":{}}}],["logger(message",{"_index":203,"title":{},"body":{"interfaces/Chainable.html":{}}}],["lon",{"_index":596,"title":{},"body":{"interfaces/ICoordinate.html":{},"interfaces/IOpenWeatherReport.html":{}}}],["longitude",{"_index":598,"title":{},"body":{"interfaces/ICoordinate.html":{},"interfaces/IOpenWeatherReport.html":{}}}],["longtime",{"_index":455,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["machine",{"_index":984,"title":{},"body":{"index.html":{}}}],["main",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["makes",{"_index":987,"title":{},"body":{"index.html":{}}}],["many",{"_index":1082,"title":{},"body":{"index.html":{}}}],["map",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CitySearchComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/PlacesService.html":{}}}],["map(name",{"_index":348,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["map(value",{"_index":345,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["margin",{"_index":389,"title":{},"body":{"components/CitySearchComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["mat",{"_index":364,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{}}}],["matautocompletemodule",{"_index":816,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbadgemodule",{"_index":828,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":808,"title":{},"body":{"modules/SharedModule.html":{}}}],["matched",{"_index":779,"title":{},"body":{"injectables/PlacesService.html":{}}}],["matching",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":703,"title":{},"body":{"components/PlaceCardComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{}}}],["matformfieldmodule",{"_index":818,"title":{},"body":{"modules/SharedModule.html":{}}}],["math.round(value",{"_index":802,"title":{},"body":{"pipes/RoundoffPipe.html":{}}}],["maticonmodule",{"_index":812,"title":{},"body":{"modules/SharedModule.html":{}}}],["maticonregistry",{"_index":562,"title":{},"body":{"components/HeaderComponent.html":{}}}],["matinputmodule",{"_index":821,"title":{},"body":{"modules/SharedModule.html":{}}}],["matmenumodule",{"_index":823,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressbarmodule",{"_index":825,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":810,"title":{},"body":{"modules/SharedModule.html":{}}}],["meeting",{"_index":1026,"title":{},"body":{"index.html":{}}}],["message",{"_index":210,"title":{},"body":{"interfaces/Chainable.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"pipes/WeatherIconPipe.html":{}}}],["methods",{"_index":201,"title":{},"body":{"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["min",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":1119,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":303,"title":{},"body":{"components/CitySearchComponent.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["models",{"_index":679,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["models/iopenweatherreport",{"_index":700,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["models/iplace",{"_index":701,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["models/iweatherdetail",{"_index":439,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["module",{"_index":83,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":85,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["monitor",{"_index":959,"title":{},"body":{"index.html":{}}}],["monorepo",{"_index":970,"title":{},"body":{"index.html":{}}}],["monorepos",{"_index":1077,"title":{},"body":{"index.html":{}}}],["more",{"_index":1007,"title":{},"body":{"index.html":{}}}],["multi",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["multiple",{"_index":1103,"title":{},"body":{"index.html":{}}}],["name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IChart.html":{},"interfaces/IPlace.html":{},"interfaces/ISeries.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["namespace",{"_index":213,"title":{},"body":{"interfaces/Chainable.html":{}}}],["navigate",{"_index":852,"title":{},"body":{"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["navigating",{"_index":880,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["navigation.guard",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["navigation.guard.ts",{"_index":872,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{}}}],["navigation.guard.ts:13",{"_index":874,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["navigation.guard.ts:26",{"_index":877,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["nest",{"_index":1096,"title":{},"body":{"index.html":{}}}],["netherland",{"_index":960,"title":{},"body":{"index.html":{}}}],["netlify",{"_index":1034,"title":{},"body":{"index.html":{}}}],["new",{"_index":227,"title":{},"body":{"interfaces/Chainable.html":{},"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":217,"title":{},"body":{"interfaces/Chainable.html":{},"components/CountryFlagComponent.html":{},"interfaces/IWeatherDetail.html":{}}}],["ng",{"_index":385,"title":{},"body":{"components/CitySearchComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["ngonchanges",{"_index":728,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["ngonchanges(changes",{"_index":736,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["ngoninit",{"_index":238,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["ngxchartsmodule",{"_index":833,"title":{},"body":{"modules/SharedModule.html":{}}}],["node",{"_index":1098,"title":{},"body":{"index.html":{}}}],["none",{"_index":376,"title":{},"body":{"components/CitySearchComponent.html":{},"components/HeaderComponent.html":{}}}],["normal",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["npm",{"_index":979,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":943,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nrwl/angular:app",{"_index":1101,"title":{},"body":{"index.html":{}}}],["nrwl/angular:lib",{"_index":1106,"title":{},"body":{"index.html":{}}}],["nrwl/nest",{"_index":1097,"title":{},"body":{"index.html":{}}}],["nrwl/node",{"_index":1099,"title":{},"body":{"index.html":{}}}],["nrwl/web",{"_index":1095,"title":{},"body":{"index.html":{}}}],["null",{"_index":861,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["number",{"_index":589,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{}}}],["numbers",{"_index":800,"title":{},"body":{"pipes/RoundoffPipe.html":{}}}],["nx",{"_index":971,"title":{},"body":{"index.html":{}}}],["object",{"_index":740,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":326,"title":{},"body":{"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["observer",{"_index":671,"title":{},"body":{"injectables/OpenWeatherService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["obtained",{"_index":969,"title":{},"body":{"index.html":{}}}],["oncecallapi",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onchanges",{"_index":720,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["one",{"_index":683,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["onecall",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onecallapiurl",{"_index":665,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["onfavoriteadd",{"_index":239,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["onfavoriteadd(place",{"_index":255,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["oninit",{"_index":232,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["open",{"_index":253,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"interfaces/IWeatherSummary.html":{},"components/SmartPlaceCardComponent.html":{},"pipes/WeatherIconPipe.html":{},"index.html":{}}}],["openweather",{"_index":607,"title":{},"body":{"interfaces/IOpenWeatherReport.html":{},"injectables/OpenWeatherService.html":{}}}],["openweatherapikey",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["openweatherservice",{"_index":101,"title":{"injectables/OpenWeatherService.html":{}},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["openweatherurl",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option",{"_index":391,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["option.name",{"_index":361,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["optional",{"_index":209,"title":{},"body":{"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["others",{"_index":958,"title":{},"body":{"index.html":{}}}],["out",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["outline",{"_index":375,"title":{},"body":{"components/CitySearchComponent.html":{},"components/HeaderComponent.html":{}}}],["output",{"_index":699,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["outputs",{"_index":691,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["overflow",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{}}}],["overview",{"_index":1115,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.id",{"_index":514,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["package",{"_index":933,"title":{"dependencies.html":{}},"body":{}}],["packs",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["padding",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["page",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["palette($mat",{"_index":366,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{}}}],["panel",{"_index":388,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["param",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["parameters",{"_index":207,"title":{},"body":{"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["parent",{"_index":223,"title":{},"body":{"interfaces/Chainable.html":{}}}],["parts",{"_index":962,"title":{},"body":{"index.html":{}}}],["party",{"_index":831,"title":{},"body":{"modules/SharedModule.html":{}}}],["passed",{"_index":780,"title":{},"body":{"injectables/PlacesService.html":{}}}],["path",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["pathmatch",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["per",{"_index":647,"title":{},"body":{"interfaces/IWeatherSummary.html":{}}}],["perception",{"_index":638,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["perform",{"_index":540,"title":{},"body":{"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{}}}],["photo",{"_index":545,"title":{},"body":{"injectables/GooglePlacesService.html":{},"interfaces/IPlace.html":{}}}],["photo_reference",{"_index":605,"title":{},"body":{"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{}}}],["photoreference=${googleplace.candidates[0].photos[0].photo_reference",{"_index":555,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["photos",{"_index":602,"title":{},"body":{"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{}}}],["photourl",{"_index":614,"title":{},"body":{"interfaces/IPlace.html":{}}}],["pink",{"_index":457,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["pipe",{"_index":340,"title":{"pipes/RoundoffPipe.html":{},"pipes/WeatherIconPipe.html":{}},"body":{"components/CitySearchComponent.html":{},"pipes/RoundoffPipe.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{}}}],["pipes",{"_index":792,"title":{},"body":{"pipes/RoundoffPipe.html":{},"pipes/WeatherIconPipe.html":{},"overview.html":{}}}],["pipes/roundoff.pipe",{"_index":840,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/weather",{"_index":838,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":797,"title":{},"body":{"pipes/RoundoffPipe.html":{},"pipes/WeatherIconPipe.html":{}}}],["place",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/IWeatherDetail.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{},"index.html":{}}}],["place.id",{"_index":355,"title":{},"body":{"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["place.name",{"_index":354,"title":{},"body":{"components/CitySearchComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["place?.name",{"_index":706,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["placecardcomponent",{"_index":70,"title":{"components/PlaceCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["placedetails",{"_index":277,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["placeholder",{"_index":381,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["placehourlyforecastcomponent",{"_index":72,"title":{"components/PlaceHourlyForecastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["places",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"injectables/PlacesService.html":{},"index.html":{}}}],["places'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["places.component",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["places.component.html",{"_index":521,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.component.scss",{"_index":520,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.component.ts",{"_index":519,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["places.component.ts:21",{"_index":528,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:23",{"_index":524,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:35",{"_index":526,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:44",{"_index":527,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.filter((p",{"_index":516,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["places.places",{"_index":789,"title":{},"body":{"injectables/PlacesService.html":{}}}],["places.service",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{}}}],["places.service.ts",{"_index":534,"title":{},"body":{"injectables/GooglePlacesService.html":{},"coverage.html":{}}}],["places.service.ts:20",{"_index":538,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["places.service.ts:35",{"_index":544,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["places/favorite",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["places/google",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"injectables/GooglePlacesService.html":{},"coverage.html":{}}}],["placesapiurl",{"_index":550,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["placesservice",{"_index":102,"title":{"injectables/PlacesService.html":{}},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/PlacesService.html":{},"coverage.html":{},"overview.html":{}}}],["placesservice.getallplacesfromserver",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["platform",{"_index":1003,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":1083,"title":{},"body":{"index.html":{}}}],["point",{"_index":634,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["pointer",{"_index":577,"title":{},"body":{"components/HeaderComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["points",{"_index":617,"title":{},"body":{"interfaces/IPlace.html":{}}}],["position",{"_index":711,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["preference",{"_index":573,"title":{},"body":{"components/HeaderComponent.html":{}}}],["present",{"_index":642,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["pressure",{"_index":628,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["prettier",{"_index":1012,"title":{},"body":{"index.html":{}}}],["private",{"_index":271,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"injectables/DataStoreService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["process",{"_index":1021,"title":{},"body":{"index.html":{}}}],["prod",{"_index":1057,"title":{},"body":{"index.html":{}}}],["production",{"_index":1058,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":955,"title":{},"body":{"index.html":{}}}],["project=my",{"_index":1038,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1045,"title":{},"body":{"index.html":{}}}],["promise",{"_index":775,"title":{},"body":{"injectables/PlacesService.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["properties",{"_index":235,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["provide",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"components/CountryFlagComponent.html":{}}}],["providedin",{"_index":503,"title":{},"body":{"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["providers",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["provides",{"_index":267,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["public",{"_index":236,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["published",{"_index":586,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{}}}],["push",{"_index":1028,"title":{},"body":{"index.html":{}}}],["pushed",{"_index":1029,"title":{},"body":{"index.html":{}}}],["quick",{"_index":1078,"title":{},"body":{"index.html":{}}}],["radius",{"_index":373,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["reactiveformsmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["red",{"_index":463,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["redirectto",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register",{"_index":566,"title":{},"body":{"components/HeaderComponent.html":{}}}],["related",{"_index":967,"title":{},"body":{"index.html":{}}}],["remote",{"_index":541,"title":{},"body":{"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{}}}],["remove",{"_index":496,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["removed",{"_index":497,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["removefavoriteplace",{"_index":482,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["removefavoriteplace(place",{"_index":494,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["reo",{"_index":974,"title":{},"body":{"index.html":{}}}],["repo",{"_index":1046,"title":{},"body":{"index.html":{}}}],["report",{"_index":649,"title":{},"body":{"interfaces/IWeatherSummary.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["represents",{"_index":328,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["request",{"_index":250,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/FavoritePlacesComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["requested",{"_index":323,"title":{},"body":{"components/CitySearchComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["required",{"_index":336,"title":{},"body":{"components/CitySearchComponent.html":{},"modules/SharedModule.html":{}}}],["res.length",{"_index":342,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["reset",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resides",{"_index":615,"title":{},"body":{"interfaces/IPlace.html":{}}}],["resolvable",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["resolver",{"_index":776,"title":{},"body":{"injectables/PlacesService.html":{}}}],["result",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.placedetails",{"_index":281,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["results.weatherreport",{"_index":283,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["retrieved",{"_index":968,"title":{},"body":{"index.html":{}}}],["return",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["returns",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["rgba($indigo",{"_index":660,"title":{},"body":{"components/InfoCardComponent.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["root'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["round",{"_index":798,"title":{},"body":{"pipes/RoundoffPipe.html":{}}}],["roundoff",{"_index":450,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{},"pipes/RoundoffPipe.html":{}}}],["roundoffpipe",{"_index":791,"title":{"pipes/RoundoffPipe.html":{}},"body":{"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["route",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["route.params.id",{"_index":882,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["route.params.name",{"_index":881,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["router",{"_index":298,"title":{},"body":{"components/CitySearchComponent.html":{},"components/HeaderComponent.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["routermodule",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":172,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":394,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["rules",{"_index":1011,"title":{},"body":{"index.html":{}}}],["run",{"_index":978,"title":{},"body":{"index.html":{}}}],["running",{"_index":1059,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":264,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":333,"title":{},"body":{"components/CitySearchComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/PlacesService.html":{}}}],["same",{"_index":1104,"title":{},"body":{"index.html":{}}}],["sanitize",{"_index":565,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sanity",{"_index":1050,"title":{},"body":{"index.html":{}}}],["save",{"_index":1014,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":1052,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1002,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":1022,"title":{},"body":{"index.html":{}}}],["search",{"_index":287,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["search.component",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["search.component.html",{"_index":289,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.scss",{"_index":288,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.ts",{"_index":286,"title":{},"body":{"components/CitySearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:102",{"_index":309,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.ts:28",{"_index":322,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.ts:33",{"_index":318,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.ts:38",{"_index":327,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.ts:43",{"_index":299,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.ts:75",{"_index":302,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.ts:84",{"_index":311,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.ts:95",{"_index":315,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search/city",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/CitySearchComponent.html":{},"coverage.html":{}}}],["see",{"_index":1070,"title":{},"body":{"index.html":{}}}],["select",{"_index":996,"title":{},"body":{"index.html":{}}}],["selected",{"_index":305,"title":{},"body":{"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{}}}],["selectedplace",{"_index":477,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["series",{"_index":583,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["service",{"_index":504,"title":{},"body":{"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{}}}],["services",{"_index":403,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":329,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"injectables/DataStoreService.html":{},"index.html":{}}}],["setcountry(value",{"_index":423,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["setcurrentlyselectedplace",{"_index":483,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setcurrentlyselectedplace(place",{"_index":498,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["settings",{"_index":572,"title":{},"body":{"components/HeaderComponent.html":{}}}],["shareable",{"_index":1108,"title":{},"body":{"index.html":{}}}],["shared/models/igoogleplace",{"_index":549,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["shared/models/iopenweatherreport",{"_index":265,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{},"injectables/OpenWeatherService.html":{}}}],["shared/models/iplace",{"_index":266,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{}}}],["shared/shared.module",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":98,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":530,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["simplechanges",{"_index":737,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["single",{"_index":404,"title":{},"body":{"modules/CoreModule.html":{}}}],["size",{"_index":379,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["small",{"_index":1001,"title":{},"body":{"index.html":{}}}],["smart",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{}}}],["smartplacecardcomponent",{"_index":75,"title":{"components/SmartPlaceCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["snippets",{"_index":1017,"title":{},"body":{"index.html":{}}}],["solid",{"_index":372,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["space",{"_index":397,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["specific",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{}}}],["start",{"_index":983,"title":{},"body":{"index.html":{}}}],["started",{"_index":952,"title":{"index.html":{}},"body":{}}],["startwith",{"_index":330,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["state",{"_index":525,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"interfaces/IPlace.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["statements",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":601,"title":{},"body":{"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"components/SmartPlaceCardComponent.html":{}}}],["store",{"_index":249,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{}}}],["store.service",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["store.service.ts",{"_index":475,"title":{},"body":{"injectables/DataStoreService.html":{},"coverage.html":{}}}],["store.service.ts:19",{"_index":502,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:21",{"_index":484,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:35",{"_index":488,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:44",{"_index":487,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:53",{"_index":499,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:62",{"_index":486,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:77",{"_index":495,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:86",{"_index":492,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store/data",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["stored",{"_index":1054,"title":{},"body":{"index.html":{}}}],["string",{"_index":204,"title":{},"body":{"interfaces/Chainable.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherSummary.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/WeatherIconPipe.html":{}}}],["structure",{"_index":734,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"index.html":{}}}],["style",{"_index":383,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["subscribable",{"_index":490,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["subscribe",{"_index":990,"title":{},"body":{"index.html":{}}}],["subscribe((results",{"_index":279,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["suitable",{"_index":998,"title":{},"body":{"index.html":{}}}],["summary",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["support",{"_index":1112,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1081,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1113,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":834,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["table",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["temp",{"_index":629,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["temperature",{"_index":458,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{},"interfaces/IWeatherDetail.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["test",{"_index":1023,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1060,"title":{},"body":{"index.html":{}}}],["text",{"_index":307,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["third",{"_index":830,"title":{},"body":{"modules/SharedModule.html":{}}}],["this._country",{"_index":427,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["this.activatedroute.params.subscribe((params",{"_index":273,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["this.addplacetofavorites.emit(this.place",{"_index":704,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["this.allcities",{"_index":356,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.allcities.slice",{"_index":350,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.citynamecontrol",{"_index":337,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.citynamecontrol.valuechanges",{"_index":339,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.datastoreservice.addfavoriteplace(place",{"_index":284,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.datastoreservice.getallfavoriteplaces",{"_index":531,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["this.datastoreservice.setcurrentlyselectedplace(place",{"_index":352,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/wb.svg",{"_index":570,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.favoriteplaces",{"_index":507,"title":{},"body":{"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.favoriteplaces.filter(p",{"_index":513,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.favoriteplaces.push(place",{"_index":510,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.filter(name",{"_index":349,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.filteredcities",{"_index":338,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.flagurl",{"_index":429,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["this.formatweatherreportforhourlydata(this.weather",{"_index":752,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["this.getweatherreport(this.place).subscribe((weather",{"_index":866,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["this.googleplacesservice.getplaceimage(this.place",{"_index":278,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["this.http.get('./assets/cities.json').pipe(map((places",{"_index":788,"title":{},"body":{"injectables/PlacesService.html":{}}}],["this.httpclient.get(finalurl",{"_index":688,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["this.httpclient.get(placesapiurl).pipe(map((googleplace",{"_index":553,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["this.isduplicate(this.favoriteplaces",{"_index":509,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.loadingweather",{"_index":865,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["this.maticonregistry.addsvgicon",{"_index":569,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.onecallapiurl}lat=${city.coord.lat}&lon=${city.coord.lon",{"_index":686,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["this.openweatherservice.getcurrentweathercondition(place",{"_index":862,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["this.openweatherservice.getcurrentweathercondition(this.place",{"_index":276,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["this.place",{"_index":274,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["this.place.isfavorite",{"_index":705,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["this.place.name",{"_index":759,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["this.place.photourl",{"_index":280,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["this.places",{"_index":783,"title":{},"body":{"injectables/PlacesService.html":{}}}],["this.places.filter((city",{"_index":784,"title":{},"body":{"injectables/PlacesService.html":{}}}],["this.placesservice.getallplaces",{"_index":357,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.placesservice.getplacebyid(+params.id",{"_index":275,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["this.placesservice.getplacesbyname(citylowercase",{"_index":360,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.router.navigate(['/city",{"_index":353,"title":{},"body":{"components/CitySearchComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["this.router.navigate(['/home",{"_index":883,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["this.selectedplace",{"_index":505,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.selectedplace$.asobservable",{"_index":506,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.selectedplace$.next(place",{"_index":508,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.weather",{"_index":867,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["this.weatherdata",{"_index":751,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["this.weatherreport",{"_index":282,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["time",{"_index":448,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{},"interfaces/IWeatherDetail.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["title",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todo",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["togglefavorite",{"_index":690,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["toggles",{"_index":698,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["tools",{"_index":1076,"title":{},"body":{"index.html":{}}}],["topromise",{"_index":790,"title":{},"body":{"injectables/PlacesService.html":{}}}],["transform",{"_index":794,"title":{},"body":{"pipes/RoundoffPipe.html":{},"pipes/WeatherIconPipe.html":{}}}],["transform(value",{"_index":795,"title":{},"body":{"pipes/RoundoffPipe.html":{},"pipes/WeatherIconPipe.html":{}}}],["transformed",{"_index":889,"title":{},"body":{"pipes/WeatherIconPipe.html":{}}}],["transforming",{"_index":891,"title":{},"body":{"pipes/WeatherIconPipe.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["true",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":208,"title":{},"body":{"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":346,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["types",{"_index":678,"title":{},"body":{"injectables/OpenWeatherService.html":{},"index.html":{}}}],["typescript",{"_index":219,"title":{},"body":{"interfaces/Chainable.html":{},"components/CountryFlagComponent.html":{},"interfaces/IWeatherDetail.html":{}}}],["ui",{"_index":304,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["understand",{"_index":1068,"title":{},"body":{"index.html":{}}}],["unique",{"_index":648,"title":{},"body":{"interfaces/IWeatherSummary.html":{}}}],["unit",{"_index":405,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["unix",{"_index":635,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["unknown",{"_index":887,"title":{},"body":{"pipes/WeatherIconPipe.html":{}}}],["unused",{"_index":221,"title":{},"body":{"interfaces/Chainable.html":{}}}],["update",{"_index":1047,"title":{},"body":{"index.html":{}}}],["url",{"_index":418,"title":{},"body":{"components/CountryFlagComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"pipes/WeatherIconPipe.html":{}}}],["url(../../../assets/default",{"_index":715,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["urltree",{"_index":878,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["use",{"_index":988,"title":{},"body":{"index.html":{}}}],["used",{"_index":564,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["usefactory",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["useful",{"_index":1036,"title":{},"body":{"index.html":{}}}],["uses",{"_index":610,"title":{},"body":{"interfaces/IPlace.html":{}}}],["using",{"_index":965,"title":{},"body":{"index.html":{}}}],["utc",{"_index":636,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["validatedataforplacenavigationguard",{"_index":174,"title":{"guards/ValidateDataForPlaceNavigationGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{}}}],["validates",{"_index":879,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["value",{"_index":317,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/IChart.html":{},"interfaces/ISeries.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"pipes/WeatherIconPipe.html":{},"miscellaneous/variables.html":{}}}],["value.name",{"_index":347,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["vapor",{"_index":641,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["var",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["variable",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1120,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":222,"title":{},"body":{"interfaces/Chainable.html":{}}}],["version",{"_index":1048,"title":{},"body":{"index.html":{}}}],["via",{"_index":1062,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":630,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["visit",{"_index":1111,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":702,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["void",{"_index":211,"title":{},"body":{"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["water",{"_index":640,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["weather",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPlaceCard.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["weather.service",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["weather.service.ts",{"_index":663,"title":{},"body":{"injectables/OpenWeatherService.html":{},"coverage.html":{}}}],["weather.service.ts:23",{"_index":674,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["weather.service.ts:25",{"_index":667,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["weather.service.ts:44",{"_index":670,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["weather/open",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{},"injectables/OpenWeatherService.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["weather/src/app/app",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["weather/src/app/app.component.ts",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["weather/src/app/app.module.ts",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["weather/src/app/city",{"_index":229,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"coverage.html":{}}}],["weather/src/app/core/core.module.ts",{"_index":402,"title":{},"body":{"modules/CoreModule.html":{}}}],["weather/src/app/core/data",{"_index":474,"title":{},"body":{"injectables/DataStoreService.html":{},"coverage.html":{}}}],["weather/src/app/core/google",{"_index":533,"title":{},"body":{"injectables/GooglePlacesService.html":{},"coverage.html":{}}}],["weather/src/app/core/open",{"_index":662,"title":{},"body":{"injectables/OpenWeatherService.html":{},"coverage.html":{}}}],["weather/src/app/core/places/places.service.ts",{"_index":764,"title":{},"body":{"injectables/PlacesService.html":{},"coverage.html":{}}}],["weather/src/app/core/places/places.service.ts:17",{"_index":770,"title":{},"body":{"injectables/PlacesService.html":{}}}],["weather/src/app/core/places/places.service.ts:34",{"_index":772,"title":{},"body":{"injectables/PlacesService.html":{}}}],["weather/src/app/core/places/places.service.ts:44",{"_index":782,"title":{},"body":{"injectables/PlacesService.html":{}}}],["weather/src/app/core/places/places.service.ts:56",{"_index":778,"title":{},"body":{"injectables/PlacesService.html":{}}}],["weather/src/app/core/places/places.service.ts:69",{"_index":774,"title":{},"body":{"injectables/PlacesService.html":{}}}],["weather/src/app/core/router",{"_index":871,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{}}}],["weather/src/app/dashboard/dashboard.component.ts",{"_index":467,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["weather/src/app/favorite",{"_index":518,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["weather/src/app/header/header.component.ts",{"_index":556,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["weather/src/app/header/header.component.ts:16",{"_index":563,"title":{},"body":{"components/HeaderComponent.html":{}}}],["weather/src/app/shared/country",{"_index":406,"title":{},"body":{"components/CountryFlagComponent.html":{},"coverage.html":{}}}],["weather/src/app/shared/current",{"_index":432,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"coverage.html":{}}}],["weather/src/app/shared/info",{"_index":650,"title":{},"body":{"components/InfoCardComponent.html":{},"coverage.html":{}}}],["weather/src/app/shared/models/icoordinate.ts",{"_index":591,"title":{},"body":{"interfaces/ICoordinate.html":{},"coverage.html":{}}}],["weather/src/app/shared/models/igoogleplace.ts",{"_index":599,"title":{},"body":{"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"coverage.html":{}}}],["weather/src/app/shared/models/iopenweatherreport.ts",{"_index":606,"title":{},"body":{"interfaces/IOpenWeatherReport.html":{},"coverage.html":{}}}],["weather/src/app/shared/models/iplace.ts",{"_index":609,"title":{},"body":{"interfaces/IPlace.html":{},"coverage.html":{}}}],["weather/src/app/shared/models/iplacecard.ts",{"_index":620,"title":{},"body":{"interfaces/IPlaceCard.html":{},"coverage.html":{}}}],["weather/src/app/shared/models/iweatherdetail.ts",{"_index":622,"title":{},"body":{"interfaces/IWeatherDetail.html":{},"coverage.html":{}}}],["weather/src/app/shared/models/iweathersummary.ts",{"_index":646,"title":{},"body":{"interfaces/IWeatherSummary.html":{},"coverage.html":{}}}],["weather/src/app/shared/pipes/roundoff.pipe.ts",{"_index":793,"title":{},"body":{"pipes/RoundoffPipe.html":{},"coverage.html":{}}}],["weather/src/app/shared/pipes/roundoff.pipe.ts:16",{"_index":796,"title":{},"body":{"pipes/RoundoffPipe.html":{}}}],["weather/src/app/shared/pipes/weather",{"_index":884,"title":{},"body":{"pipes/WeatherIconPipe.html":{},"coverage.html":{}}}],["weather/src/app/shared/place",{"_index":580,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"coverage.html":{}}}],["weather/src/app/shared/shared.module.ts",{"_index":807,"title":{},"body":{"modules/SharedModule.html":{}}}],["weather/src/app/shared/smart",{"_index":842,"title":{},"body":{"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["weather/src/environments/environment.prod.ts",{"_index":929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["weather/src/environments/environment.ts",{"_index":930,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["weather?.feels_like",{"_index":453,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["weather?.temp",{"_index":449,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["weather?.weather[0].description",{"_index":454,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["weatherbase",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["weatherdata",{"_index":724,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["weatherdetail.temp",{"_index":758,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["weathericon",{"_index":886,"title":{},"body":{"pipes/WeatherIconPipe.html":{}}}],["weathericonpipe",{"_index":806,"title":{"pipes/WeatherIconPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"overview.html":{}}}],["weatherreport",{"_index":237,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"interfaces/IPlaceCard.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["weatherreport.hourly.slice(0",{"_index":754,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["web",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["weight",{"_index":460,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["wel",{"_index":997,"title":{},"body":{"index.html":{}}}],["well",{"_index":1090,"title":{},"body":{"index.html":{}}}],["white",{"_index":368,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["whole",{"_index":1044,"title":{},"body":{"index.html":{}}}],["width",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["wont",{"_index":1027,"title":{},"body":{"index.html":{}}}],["workspace",{"_index":1069,"title":{},"body":{"index.html":{}}}],["world",{"_index":963,"title":{},"body":{"index.html":{}}}],["x",{"_index":588,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{}}}],["xaxislabel",{"_index":725,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["y",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"interfaces/IChart.html":{},"interfaces/ISeries.html":{}}}],["yaxislabel",{"_index":726,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["zone.js",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'weather-base-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\n/**\n * Acts as root container for the application\n */\nexport class AppComponent {\n}\n\n    \n\n    \n        \n\n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .main-container {\n    height: 100%;\n    min-height: 100%;\n    width: 100%;\n    padding: 0.5rem 0;\n    overflow-y: auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCityDetailsContainerComponent\n\nCityDetailsContainerComponent\n\nAppModule -->\n\nCityDetailsContainerComponent->AppModule\n\n\n\n\n\nCitySearchComponent\n\nCitySearchComponent\n\nAppModule -->\n\nCitySearchComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFavoritePlacesComponent\n\nFavoritePlacesComponent\n\nAppModule -->\n\nFavoritePlacesComponent->AppModule\n\n\n\nAppModule -->\n\nFavoritePlacesComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nDataStoreService\n\nDataStoreService\n\nAppModule -->\n\nDataStoreService->AppModule\n\n\n\n\n\nGooglePlacesService\n\nGooglePlacesService\n\nAppModule -->\n\nGooglePlacesService->AppModule\n\n\n\n\n\nOpenWeatherService\n\nOpenWeatherService\n\nAppModule -->\n\nOpenWeatherService->AppModule\n\n\n\n\n\nPlacesService\n\nPlacesService\n\nAppModule -->\n\nPlacesService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/live-weather/src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CityDetailsContainerComponent\n                        \n                        \n                            CitySearchComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            FavoritePlacesComponent\n                        \n                        \n                            FavoritePlacesComponent\n                        \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DataStoreService\n                        \n                        \n                            GooglePlacesService\n                        \n                        \n                            OpenWeatherService\n                        \n                        \n                            PlacesService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Copyright WeatherBase 2021\n\nimport { NgModule } from '@angular/core';\nimport { APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedModule } from './shared/shared.module';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeaderComponent } from './header/header.component';\nimport { CoreModule } from './core/core.module';\nimport { PlacesService } from './core/places/places.service';\nimport { OpenWeatherService } from './core/open-weather/open-weather.service';\nimport { CitySearchComponent } from './city-search/city-search.component';\nimport { DataStoreService } from './core/data-store/data-store.service';\nimport { GooglePlacesService } from './core/google-places/google-places.service';\nimport { CityDetailsContainerComponent } from './city-details-container/city-details-container.component';\nimport { FavoritePlacesComponent } from './favorite-places/favorite-places.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    HeaderComponent,\n    FavoritePlacesComponent,\n    CitySearchComponent,\n    CityDetailsContainerComponent,\n    FavoritePlacesComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  providers: [PlacesService, OpenWeatherService, GooglePlacesService, DataStoreService, {\n    provide: APP_INITIALIZER,\n    /**\n     * Loads places data into app\n     *\n     * @param placesService instance to load data\n     * @returns resolvable places data\n     */\n    useFactory: (placesService: PlacesService) => () => {\n      return placesService.getAllPlacesFromServer();\n    },\n    deps: [PlacesService],\n    multi: true\n  }],\n  bootstrap: [AppComponent],\n})\n/**\n * Acts as Root Module, which is an normal convention in Enterprise Angular web Apps\n */\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/live-weather/src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        // Copyright WeatherBase 2021\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router'\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CityDetailsContainerComponent } from './city-details-container/city-details-container.component';\nimport { ValidateDataForPlaceNavigationGuard } from './core/router-guards/validate-data-for-place-navigation.guard';\nimport { FavoritePlacesComponent } from './favorite-places/favorite-places.component';\n\n\nconst routes: Routes = [\n  { path: 'home', component: DashboardComponent },\n  { path: 'favorites', component: FavoritePlacesComponent },\n  { path: 'city/:name/:id', component: CityDetailsContainerComponent, canActivate: [ValidateDataForPlaceNavigationGuard] },\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  //TODO: Map to page not found component\n  { path: '**', redirectTo: '/home' }]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\n/**\n * Packs Route specific configuration\n */\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather-e2e/src/support/commands.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    logger\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logger\n                        \n                        \n                    \n                \n            \n            \n                \nlogger(message: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather-e2e/src/support/commands.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        declare namespace Cypress {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Chainable {\n    logger(message: string): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('logger', (message) => {\n  console.log('Logger: ', new Date(), ' : ', message);\n});\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CityDetailsContainerComponent.html":{"url":"components/CityDetailsContainerComponent.html","title":"component - CityDetailsContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CityDetailsContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/city-details-container/city-details-container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-city-details-container\n            \n\n            \n                styleUrls\n                ./city-details-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./city-details-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                place\n                            \n                            \n                                    Public\n                                weatherReport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onFavoriteAdd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, dataStoreService: DataStoreService, googlePlacesService: GooglePlacesService, openWeatherService: OpenWeatherService, placesService: PlacesService)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/city-details-container/city-details-container.component.ts:26\n                            \n                        \n\n                \n                    \n                            Creates instance of CityDetailsContainerComponent class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                get access to information a route associated with component\n\n                                                        \n                                                \n                                                \n                                                        dataStoreService\n                                                  \n                                                        \n                                                                        DataStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance to store and access data\n\n                                                        \n                                                \n                                                \n                                                        googlePlacesService\n                                                  \n                                                        \n                                                                        GooglePlacesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance to request google place details from google places api\n\n                                                        \n                                                \n                                                \n                                                        openWeatherService\n                                                  \n                                                        \n                                                                        OpenWeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance to request weather details from open weather\n\n                                                        \n                                                \n                                                \n                                                        placesService\n                                                  \n                                                        \n                                                                        PlacesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance to request places information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/city-details-container/city-details-container.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onFavoriteAdd\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onFavoriteAdd(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/city-details-container/city-details-container.component.ts:76\n                \n            \n\n\n            \n                \n                    Add a place to favorite collection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be added to favorite collection\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            place\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPlace\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/city-details-container/city-details-container.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherReport\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IOpenWeatherReport\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/city-details-container/city-details-container.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { forkJoin } from 'rxjs';\nimport { DataStoreService } from '../core/data-store/data-store.service';\n\nimport { GooglePlacesService } from '../core/google-places/google-places.service';\nimport { OpenWeatherService } from '../core/open-weather/open-weather.service';\nimport { PlacesService } from '../core/places/places.service';\nimport { IOpenWeatherReport } from '../shared/models/IOpenWeatherReport';\nimport { IPlace } from '../shared/models/IPlace';\n\n@Component({\n  selector: 'weather-base-city-details-container',\n  templateUrl: './city-details-container.component.html',\n  styleUrls: ['./city-details-container.component.scss']\n})\n/**\n * Provides smart container to display detailed place information\n */\nexport class CityDetailsContainerComponent implements OnInit {\n\n  public place!: IPlace;\n\n  public weatherReport!: IOpenWeatherReport;\n\n\n  /**\n   * Creates instance of ```CityDetailsContainerComponent``` class\n   *\n   * @param activatedRoute get access to information a route associated with component\n   * @param dataStoreService instance to store and access data\n   * @param googlePlacesService instance to request google place details from google places api\n   * @param openWeatherService instance to request weather details from open weather\n   * @param placesService instance to request places information\n   */\n  constructor(private activatedRoute: ActivatedRoute,\n\n    private dataStoreService: DataStoreService,\n    private googlePlacesService: GooglePlacesService,\n\n\n    private openWeatherService: OpenWeatherService,\n\n    private placesService: PlacesService\n  ) { }\n\n  /**\n   * @internal\n   */\n  ngOnInit(): void {\n\n    this.activatedRoute.params.subscribe((params) => {\n      this.place = this.placesService.getPlaceById(+params.id)\n\n      const weatherReport = this.openWeatherService.getCurrentWeatherCondition(this.place);\n      const placeDetails = this.googlePlacesService.getPlaceImage(this.place);\n\n      forkJoin({\n        weatherReport,\n        placeDetails\n      }).subscribe((results) => {\n        this.place.photoUrl = results.placeDetails;\n        this.weatherReport = results.weatherReport;\n      });\n    })\n\n  }\n\n  /**\n   * Add a place to favorite collection\n   *\n   * @param place to be added to favorite collection\n   */\n  public onFavoriteAdd(place: IPlace): void {\n    this.dataStoreService.addFavoritePlace(place)\n  }\n\n}\n\n    \n\n    \n        \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./city-details-container.component.scss\n                \n                .city-details-container {\n    padding: 0.25rem;\n    overflow-y: auto;\n    height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CityDetailsContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CitySearchComponent.html":{"url":"components/CitySearchComponent.html","title":"component - CitySearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CitySearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/city-search/city-search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-city-search\n            \n\n            \n                styleUrls\n                ./city-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./city-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                allCities\n                            \n                            \n                                    Public\n                                cityName\n                            \n                            \n                                    Public\n                                cityNameControl\n                            \n                            \n                                    Public\n                                filteredCities$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayFn\n                            \n                            \n                                    Private\n                                filter\n                            \n                            \n                                    Public\n                                getWeatherCondition\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(placesService: PlacesService, dataStoreService: DataStoreService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/city-search/city-search.component.ts:43\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the DashboardComponent class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        placesService\n                                                  \n                                                        \n                                                                        PlacesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance to request places information\n\n                                                        \n                                                \n                                                \n                                                        dataStoreService\n                                                  \n                                                        \n                                                                        DataStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to store and access data\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of angular router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            displayFn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    displayFn(city: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/city-search/city-search.component.ts:75\n                \n            \n\n\n            \n                \n                    Creates a city model for UI\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected city\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        formatted city text to display\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(city: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/city-search/city-search.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IPlace[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWeatherCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherCondition(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/city-search/city-search.component.ts:84\n                \n            \n\n\n            \n                \n                    Gets Weather condition of the location\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        location details of city\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/city-search/city-search.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            allCities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPlace[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/city-search/city-search.component.ts:33\n                            \n                        \n\n                \n                    \n                        List of available cities\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cityName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/city-search/city-search.component.ts:28\n                            \n                        \n\n                \n                    \n                        Name of the requested city\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cityNameControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/city-search/city-search.component.ts:43\n                            \n                        \n\n                \n                    \n                        Controller for city name search\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredCities$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/city-search/city-search.component.ts:38\n                            \n                        \n\n                \n                    \n                        Represents set of cities after filter\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { Observable } from 'rxjs';\nimport { startWith, filter, debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { PlacesService } from '../core/places/places.service';\nimport { IPlace } from '../shared/models/IPlace';\nimport { DataStoreService } from '../core/data-store/data-store.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'weather-base-city-search',\n  templateUrl: './city-search.component.html',\n  styleUrls: ['./city-search.component.scss']\n})\n/**\n * Construct elements required for city search\n */\nexport class CitySearchComponent implements OnInit {\n\n\n  /**\n   * Name of the requested city\n   */\n  public cityName = '';\n\n  /**\n   * List of available cities\n   */\n  public allCities: IPlace[] = [];\n\n  /**\n   * Represents set of cities after filter\n   */\n  public filteredCities$: Observable;\n\n  /**\n   * Controller for city name search\n   */\n  public cityNameControl: FormControl;\n\n  /**\n   * Initializes a new instance of the ```DashboardComponent``` class.\n   *\n   * @param placesService instance to request places information\n   * @param dataStoreService to store and access data\n   * @param router instance of angular router\n   */\n  constructor(\n    private placesService: PlacesService,\n    private dataStoreService: DataStoreService,\n    private router: Router) {\n\n    this.cityNameControl = new FormControl();\n    this.filteredCities$ = this.cityNameControl.valueChanges\n      .pipe(\n        startWith(''),\n        filter(res => res.length > 2),\n        debounceTime(500),\n        distinctUntilChanged(),\n        map(value => typeof value === 'string' ? value : value.name),\n        map(name => name ? this.filter(name) : this.allCities.slice())\n      );\n  }\n\n  /**\n   * Creates a city model for UI\n   *\n   * @param city selected city\n   * @returns formatted city text to display\n   */\n  public displayFn(city: IPlace): string {\n    return city && city.name ? city.name : '';\n  }\n\n  /**\n   * Gets Weather condition of the location\n   *\n   * @param place location details of city\n   */\n  public getWeatherCondition(place: IPlace): void {\n\n    this.dataStoreService.setCurrentlySelectedPlace(place);\n\n    this.router.navigate(['/city', place.name, place.id]);\n\n  }\n\n  /**\n   * @internal\n   */\n  ngOnInit(): void {\n    this.allCities = this.placesService.getAllPlaces();\n  }\n\n  /**\n   * @private\n   */\n  private filter(city: string): IPlace[] {\n    const cityLowercase = city.toLowerCase();\n\n    return this.placesService.getPlacesByName(cityLowercase);\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          {{ option.name }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./city-search.component.scss\n                \n                @import \"~@angular/material/theming\";\n\n$indigo: mat-color(mat-palette($mat-indigo));\n\n.city-search {\n    background: white;\n\n    height: 48px;\n    border: 1px solid $indigo;\n    border-radius: 8px;\n    outline: none;\n    padding: 0 0 0 25px;\n    font-size: large;\n\n    &::placeholder {\n        color: $indigo;\n        font-style: italic;\n    }\n}\n\n\n\n::ng-deep.mat-autocomplete-panel {\n    padding: 0 25px 0 25px;\n    margin: 0 16px 0 16px;\n    border-radius: 0 0 16px 16px;\n\n    .mat-option-text {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ option.name }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CitySearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/live-weather/src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        // Copyright WeatherBase 2021\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\n/**\n * Packs all services into a single unit\n */\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CountryFlagComponent.html":{"url":"components/CountryFlagComponent.html","title":"component - CountryFlagComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CountryFlagComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/shared/country-flag/country-flag.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-country-flag\n            \n\n            \n                styleUrls\n                ./country-flag.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./country-flag.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _country\n                            \n                            \n                                    Public\n                                flagUrl\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                country\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    country\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        country\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/country-flag/country-flag.component.ts:33\n                            \n                        \n                \n                    \n                        set country and create url to get flag\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/country-flag/country-flag.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flagUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/country-flag/country-flag.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        country\n                    \n                \n\n                \n                    \n                        getcountry()\n                    \n                \n                            \n                                \n                                    Defined in apps/live-weather/src/app/shared/country-flag/country-flag.component.ts:25\n                                \n                            \n                    \n                        \n                                Get Country\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setcountry(value: string)\n                    \n                \n                            \n                                \n                                    Defined in apps/live-weather/src/app/shared/country-flag/country-flag.component.ts:33\n                                \n                            \n                    \n                        \n                                set country and create url to get flag\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'weather-base-country-flag',\n  templateUrl: './country-flag.component.html',\n  styleUrls: ['./country-flag.component.scss']\n})\n/**\n * Provide icon for any country flag\n */\nexport class CountryFlagComponent {\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private _country = '';\n\n  public flagUrl = '';\n\n  /**\n   * Get Country\n   *\n   * @returns name of the country\n   */\n  get country(): string {\n    return this._country;\n  }\n\n  /**\n   * set country and create url to get flag\n   */\n  @Input()\n  set country(value: string) {\n    this.flagUrl = `https://www.countryflags.io/${value.toLowerCase()}/shiny/24.png`;\n    this._country = value;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./country-flag.component.scss\n                \n                .country-flag {\n    width: 24px;\n    height: 24px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CountryFlagComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurrentWeatherDetailsContainerComponent.html":{"url":"components/CurrentWeatherDetailsContainerComponent.html","title":"component - CurrentWeatherDetailsContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CurrentWeatherDetailsContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/shared/current-weather-details-container/current-weather-details-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-current-weather-details-container\n            \n\n            \n                styleUrls\n                ./current-weather-details-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./current-weather-details-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                weather\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        weather\n                    \n                \n                \n                    \n                        Type :         IWeatherDetail\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/current-weather-details-container/current-weather-details-container.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IWeatherDetail } from '../models/IWeatherDetail';\n\n@Component({\n  selector: 'weather-base-current-weather-details-container',\n  templateUrl: './current-weather-details-container.component.html',\n  styleUrls: ['./current-weather-details-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * Create a ui container with current weather image along with summary.\n */\nexport class CurrentWeatherDetailsContainerComponent {\n  @Input() weather!: IWeatherDetail;\n\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./current-weather-details-container.component.scss\n                \n                .place-details {\n    padding: 1rem;\n}\n\n.weather-icon {\n    width: 5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurrentWeatherDetailsContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurrentWeatherSummaryContainerComponent.html":{"url":"components/CurrentWeatherSummaryContainerComponent.html","title":"component - CurrentWeatherSummaryContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CurrentWeatherSummaryContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/shared/current-weather-summary-container/current-weather-summary-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-current-weather-summary-container\n            \n\n            \n                styleUrls\n                ./current-weather-summary-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./current-weather-summary-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentTime\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                weather\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        weather\n                    \n                \n                \n                    \n                        Type :         IWeatherDetail\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/current-weather-summary-container/current-weather-summary-container.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date().toISOString()\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/current-weather-summary-container/current-weather-summary-container.component.ts:17\n                            \n                        \n\n                \n                    \n                        Represents current time \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IWeatherDetail } from '../models/IWeatherDetail';\n\n@Component({\n  selector: 'weather-base-current-weather-summary-container',\n  templateUrl: './current-weather-summary-container.component.html',\n  styleUrls: ['./current-weather-summary-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * Create a ui container with current weather image along with summary.\n */\nexport class CurrentWeatherSummaryContainerComponent {\n  /** Represents current time */\n  public currentTime = new Date().toISOString();\n\n  @Input() weather!: IWeatherDetail;\n\n}\n\n    \n\n    \n        \n  \n  \n    {{ weather?.temp | roundoff }} °C\n    Feels like {{ weather?.feels_like | roundoff }}°C,\n      {{ weather?.weather[0].description }}\n    {{ currentTime | date: 'longTime' }}\n  \n  \n     Live\n  \n\n\n    \n\n    \n                \n                    ./current-weather-summary-container.component.scss\n                \n                @import \"~@angular/material/theming\";\n\n$pink: mat-color(mat-palette($mat-pink));\n\n\n.temperature-card {\n    padding: 1rem;\n}\n\n.temperature {\n    font-size: larger;\n    font-weight: bold;\n    line-height: 2rem;\n}\n\n.red {\n    color: $pink\n}\n\n.live-icon {\n    display: inline-block;\n    height: 8px;\n    width: 8px;\n    border-radius: 50%;\n    background: $pink;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ weather?.temp | roundoff }} °C    Feels like {{ weather?.feels_like | roundoff }}°C,      {{ weather?.weather[0].description }}    {{ currentTime | date: \\'longTime\\' }}         Live  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurrentWeatherSummaryContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'weather-base-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\n/**\n * Generates dom for dashboard page\n */\nexport class DashboardComponent {\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataStoreService.html":{"url":"injectables/DataStoreService.html","title":"injectable - DataStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/core/data-store/data-store.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                favoritePlaces\n                            \n                            \n                                    Private\n                                selectedPlace$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addFavoritePlace\n                            \n                            \n                                    Public\n                                getAllFavoritePlaces\n                            \n                            \n                                    Public\n                                getSelectedPlace\n                            \n                            \n                                    Private\n                                isDuplicate\n                            \n                            \n                                    Public\n                                removeFavoritePlace\n                            \n                            \n                                    Public\n                                setCurrentlySelectedPlace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:21\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the DataStoreService class.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addFavoritePlace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addFavoritePlace(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:62\n                \n            \n\n\n            \n                \n                    Add a place to favorites list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllFavoritePlaces\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllFavoritePlaces()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:44\n                \n            \n\n\n            \n                \n                    Gets  all favorite places\n\n\n                    \n                    \n                    \n                        Returns :         IPlace[]\n\n                    \n                    \n                        list of places\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSelectedPlace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectedPlace()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:35\n                \n            \n\n\n            \n                \n                    Gets currently selected place information\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        subscribable place data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isDuplicate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicate(places: IPlace[], place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    places\n                                    \n                                                IPlace[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeFavoritePlace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFavoritePlace(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:77\n                \n            \n\n\n            \n                \n                    Remove a place from favorites list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCurrentlySelectedPlace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentlySelectedPlace(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:53\n                \n            \n\n\n            \n                \n                    Set place information\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        details of place\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            favoritePlaces\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPlace[]\n\n                        \n                    \n                    \n                        \n                            Default value : JSON.parse(localStorage.getItem('favorites') || '[]')\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedPlace$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { IPlace } from '../../shared/models/IPlace';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service to store and access data across app\n */\nexport class DataStoreService {\n\n\n  private selectedPlace$: BehaviorSubject;\n\n  private favoritePlaces: IPlace[] = JSON.parse(localStorage.getItem('favorites') || '[]');\n\n  /**\n   * Initializes a new instance of the ```DataStoreService``` class.\n   */\n  constructor() {\n    this.selectedPlace$ = new BehaviorSubject({} as IPlace);\n  }\n\n  /**\n   * Gets currently selected place information\n   *\n   * @returns subscribable place data\n   */\n  public getSelectedPlace(): Observable {\n    return this.selectedPlace$.asObservable();\n  }\n\n  /**\n   * Gets  all favorite places\n   *\n   * @returns list of places\n   */\n  public getAllFavoritePlaces(): IPlace[] {\n    return this.favoritePlaces;\n  }\n\n  /**\n   * Set place information\n   *\n   * @param place details of place\n   */\n  public setCurrentlySelectedPlace(place: IPlace): void {\n    this.selectedPlace$.next(place)\n  }\n\n  /**\n   * Add a place to favorites list\n   *\n   * @param place to be added\n   */\n  public addFavoritePlace(place: IPlace): void {\n    if (this.isDuplicate(this.favoritePlaces, place)) {\n      return;\n    }\n\n    this.favoritePlaces.push(place);\n\n    localStorage.setItem('favorites', JSON.stringify(this.favoritePlaces));\n  }\n\n  /**\n   * Remove a place from favorites list\n   *\n   * @param place to be removed\n   */\n  public removeFavoritePlace(place: IPlace): void {\n\n    this.favoritePlaces = this.favoritePlaces.filter(p => place.id === p.id);\n    localStorage.setItem('favorites', JSON.stringify(this.favoritePlaces));\n  }\n\n  /**\n   * @private\n   */\n  private isDuplicate(places: IPlace[], place: IPlace): boolean {\n    const duplicates = places.filter((p) => p.id === place.id);\n\n    return duplicates.length > 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritePlacesComponent.html":{"url":"components/FavoritePlacesComponent.html","title":"component - FavoritePlacesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritePlacesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/favorite-places/favorite-places.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-favorite-places\n            \n\n            \n                styleUrls\n                ./favorite-places.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./favorite-places.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                favoritePlaces\n                            \n                            \n                                    Public\n                                favoritePlacesAndWeather\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onFavoriteAdd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataStoreService: DataStoreService)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/favorite-places/favorite-places.component.ts:23\n                            \n                        \n\n                \n                    \n                            Creates instance of FavoritePlacesComponent class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataStoreService\n                                                  \n                                                        \n                                                                        DataStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance to request data state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/favorite-places/favorite-places.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onFavoriteAdd\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onFavoriteAdd(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/favorite-places/favorite-places.component.ts:44\n                \n            \n\n\n            \n                \n                    Add a place to favorite collection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be added to favorite collection\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            favoritePlaces\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPlace[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/favorite-places/favorite-places.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            favoritePlacesAndWeather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/favorite-places/favorite-places.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DataStoreService } from '../core/data-store/data-store.service';\nimport { OpenWeatherService } from '../core/open-weather/open-weather.service';\nimport { IOpenWeatherReport } from '../shared/models/IOpenWeatherReport';\nimport { IPlace } from '../shared/models/IPlace';\n\n@Component({\n  selector: 'weather-base-favorite-places',\n  templateUrl: './favorite-places.component.html',\n  styleUrls: ['./favorite-places.component.scss']\n})\n/**\n * Show favorite places in a container\n */\nexport class FavoritePlacesComponent implements OnInit {\n\n  public favoritePlaces: IPlace[] = [];\n\n  public favoritePlacesAndWeather: { place: IPlace; weather: IOpenWeatherReport }[] = [];\n\n  /**\n   * Creates instance of ``` FavoritePlacesComponent``` class\n   *\n   * @param dataStoreService instance to request data state\n   */\n  constructor(private dataStoreService: DataStoreService) { }\n\n  /**\n   * @internal\n   */\n  ngOnInit(): void {\n    this.favoritePlaces = this.dataStoreService.getAllFavoritePlaces();\n  }\n\n  /**\n   * Add a place to favorite collection\n   *\n   * @param place to be added to favorite collection\n   */\n  public onFavoriteAdd(place: IPlace): void {\n    this.dataStoreService.addFavoritePlace(place)\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./favorite-places.component.scss\n                \n                .favorites-container {\n    padding: 0.5rem;\n}\n\n.smart-place-container {\n    margin-bottom: 1rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoritePlacesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GooglePlacesService.html":{"url":"injectables/GooglePlacesService.html","title":"injectable - GooglePlacesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GooglePlacesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/core/google-places/google-places.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPlaceImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/core/google-places/google-places.service.ts:20\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the OpenWeatherService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                client to perform remote service call\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlaceImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlaceImage(city: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/google-places/google-places.service.ts:35\n                \n            \n\n\n            \n                \n                    Gets photo of location requested\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        location details of the place\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        image url\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { IPlace } from '../../shared/models/IPlace';\nimport { IGooglePlace } from '../../shared/models/IGooglePlace';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Service for google places api\n */\nexport class GooglePlacesService {\n\n  /**\n   * Initializes a new instance of the ```OpenWeatherService``` class.\n   *\n   * @param httpClient client to perform remote service call\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Gets photo of location requested\n   *\n   * @param city location details of the place\n   * @returns image url\n   */\n  public getPlaceImage(city: IPlace): Observable {\n    const placesApiUrl = `places-api?input=${city.name}`\n      + `&inputtype=textquery&fields=photos&key=${environment.googleKey}`;\n\n\n    return this.httpClient.get(placesApiUrl).pipe(map((googlePlace: IGooglePlace) => {\n      return `https://maps.googleapis.com/maps/api/place/photo?maxwidth=320&&key=${environment.googleKey}`\n        + `&photoreference=${googlePlace.candidates[0].photos[0].photo_reference}`\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/header/header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(domSanitizer: DomSanitizer, matIconRegistry: MatIconRegistry, router: Router)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/header/header.component.ts:16\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the HeaderComponent class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                used to  sanitize the url\n\n                                                        \n                                                \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to register and display icons\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of angular router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'weather-base-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\n/**\n * Provides header for application\n */\nexport class HeaderComponent {\n  /**\n   * Initializes a new instance of the ```HeaderComponent``` class.\n   *\n   * @param domSanitizer used to  sanitize the url\n   * @param matIconRegistry to register and display icons\n   * @param router instance of angular router\n   */\n  constructor(private domSanitizer: DomSanitizer, private matIconRegistry: MatIconRegistry, private router: Router) {\n    this.matIconRegistry.addSvgIcon(\n      `weather-base-icon`,\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/wb.svg')\n    );\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n    Weather Base\n    \n    face\n    \n      \n        favorite\n        Favorites\n      \n      \n        settings\n        Preference\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                :host {\n    .header {\n        height: 56px;\n        width: 100%;\n    }\n\n    h2 {\n        outline: none;\n    }\n\n    .pointer {\n        cursor: pointer;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Weather Base        face                  favorite        Favorites                    settings        Preference            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IChart.html":{"url":"interfaces/IChart.html","title":"interface - IChart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/place-hourly-forecast/IChart.ts\n        \n\n            \n                Description\n            \n            \n                Interface for chart data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        series\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of the chart category\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        series\n                                    \n                                \n                                \n                                    \n                                        series:         ISeries[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISeries[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Collection of detailed data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IChart {\n\n    /**\n     * name of the chart category\n     */\n    name: string;\n    /**\n     * Collection of detailed data\n     */\n    series: ISeries[]\n}\n\n/**\n * Interface for series data\n */\nexport interface ISeries {\n    /**\n     * Data to be published on y-axis\n     */\n    name: string;\n    /**\n     * Data to be published on x-axis\n     */\n    value: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICoordinate.html":{"url":"interfaces/ICoordinate.html","title":"interface - ICoordinate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICoordinate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/ICoordinate.ts\n        \n\n            \n                Description\n            \n            \n                Interface for classes that implements geological coordinates\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lat\n                                \n                                \n                                        lon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Latitude of the place\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                    \n                                \n                                \n                                    \n                                        lon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Longitude of the place\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICoordinate {\n\n    /**\n     * Longitude of the place\n     */\n    lon: string;\n    /**\n     * Latitude of the place\n     */\n    lat: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGooglePlace.html":{"url":"interfaces/IGooglePlace.html","title":"interface - IGooglePlace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGooglePlace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/IGooglePlace.ts\n        \n\n            \n                Description\n            \n            \n                Interface for Google place api model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        candidates\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        candidates\n                                    \n                                \n                                \n                                    \n                                        candidates:     [literal type]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [literal type]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IGooglePlace {\n    candidates: [{ photos: IPhoto[] }];\n    status: string;\n}\n\n/**\n * Interface represents places model of Google API\n */\ninterface IPhoto {\n    height: number;\n    html_attributions: string[];\n    photo_reference: string;\n    width: number;\n\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOpenWeatherReport.html":{"url":"interfaces/IOpenWeatherReport.html","title":"interface - IOpenWeatherReport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IOpenWeatherReport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/IOpenWeatherReport.ts\n        \n\n            \n                Description\n            \n            \n                Interface for OpenWeather API data model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        current\n                                \n                                \n                                        hourly\n                                \n                                \n                                        lat\n                                \n                                \n                                        lon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:         IWeatherDetail\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IWeatherDetail\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current weather data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hourly\n                                    \n                                \n                                \n                                    \n                                        hourly:         IWeatherDetail[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IWeatherDetail[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hourly forecast weather data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Latitude of the location\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                    \n                                \n                                \n                                    \n                                        lon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Longitude of the location\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IWeatherDetail } from './IWeatherDetail';\n\n/**\n * Interface for OpenWeather API data model\n */\nexport interface IOpenWeatherReport {\n    /**\n     * Latitude of the location\n     */\n    lat: number;\n\n    /**\n     * Longitude of the location\n     */\n    lon: number;\n\n    /**\n     * Current weather data\n     */\n    current: IWeatherDetail;\n\n    /**\n     * Hourly forecast weather data\n     */\n    hourly: IWeatherDetail[];\n\n}\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPhoto.html":{"url":"interfaces/IPhoto.html","title":"interface - IPhoto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPhoto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/IGooglePlace.ts\n        \n\n            \n                Description\n            \n            \n                Interface represents places model of Google API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        height\n                                \n                                \n                                        html_attributions\n                                \n                                \n                                        photo_reference\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html_attributions\n                                    \n                                \n                                \n                                    \n                                        html_attributions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo_reference\n                                    \n                                \n                                \n                                    \n                                        photo_reference:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IGooglePlace {\n    candidates: [{ photos: IPhoto[] }];\n    status: string;\n}\n\n/**\n * Interface represents places model of Google API\n */\ninterface IPhoto {\n    height: number;\n    html_attributions: string[];\n    photo_reference: string;\n    width: number;\n\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPlace.html":{"url":"interfaces/IPlace.html","title":"interface - IPlace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPlace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/IPlace.ts\n        \n\n            \n                Description\n            \n            \n                Interface for classes that uses city\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        coord\n                                \n                                \n                                        country\n                                \n                                \n                                        id\n                                \n                                \n                                        isFavorite\n                                \n                                \n                                        name\n                                \n                                \n                                        photoUrl\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coord\n                                    \n                                \n                                \n                                    \n                                        coord:         ICoordinate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICoordinate\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Coordinates of the city\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Country in which city resides\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier for the city\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFavorite\n                                    \n                                \n                                \n                                    \n                                        isFavorite:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gets current favorite state of location\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the city\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                    \n                                \n                                \n                                    \n                                        photoUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    points of locations photo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    State in which city resides\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ICoordinate } from './ICoordinate';\n\n/**\n * Interface for classes that uses city\n */\nexport interface IPlace {\n    /**\n     *  Identifier for the city\n     */\n    id: number;\n    /**\n     * Name of the city\n     */\n    name: string;\n\n    /**\n     * State in which city resides\n     */\n    state: string;\n    /**\n     * Country in which city resides\n     */\n    country: string;\n    /**\n     * Coordinates of the city\n     */\n    coord: ICoordinate\n\n    /**\n     * points of locations photo\n     */\n    photoUrl: string\n\n    /**\n     * Gets current favorite state of location\n     */\n    isFavorite: boolean\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPlaceCard.html":{"url":"interfaces/IPlaceCard.html","title":"interface - IPlaceCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPlaceCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/IPlaceCard.ts\n        \n\n            \n                Description\n            \n            \n                Interface for place and weather composition\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        place\n                                \n                                \n                                        weatherReport\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        place\n                                    \n                                \n                                \n                                    \n                                        place:         IPlace\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPlace\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weatherReport\n                                    \n                                \n                                \n                                    \n                                        weatherReport:         IOpenWeatherReport\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IOpenWeatherReport\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IOpenWeatherReport } from './IOpenWeatherReport';\nimport { IPlace } from './IPlace';\n\n/**\n * Interface for place and weather composition\n */\nexport interface IPlaceCard {\n    place: IPlace;\n    weatherReport: IOpenWeatherReport;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISeries.html":{"url":"interfaces/ISeries.html","title":"interface - ISeries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISeries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/place-hourly-forecast/IChart.ts\n        \n\n            \n                Description\n            \n            \n                Interface for series data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data to be published on y-axis\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data to be published on x-axis\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IChart {\n\n    /**\n     * name of the chart category\n     */\n    name: string;\n    /**\n     * Collection of detailed data\n     */\n    series: ISeries[]\n}\n\n/**\n * Interface for series data\n */\nexport interface ISeries {\n    /**\n     * Data to be published on y-axis\n     */\n    name: string;\n    /**\n     * Data to be published on x-axis\n     */\n    value: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeatherDetail.html":{"url":"interfaces/IWeatherDetail.html","title":"interface - IWeatherDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWeatherDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/IWeatherDetail.ts\n        \n\n            \n                Description\n            \n            \n                Interface for detailed weather data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clouds\n                                \n                                \n                                        dew_point\n                                \n                                \n                                        dt\n                                \n                                \n                                        feels_like\n                                \n                                \n                                        humidity\n                                \n                                \n                                        pressure\n                                \n                                \n                                        temp\n                                \n                                \n                                        visibility\n                                \n                                \n                                        weather\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clouds\n                                    \n                                \n                                \n                                    \n                                        clouds:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gets cloudiness in %\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dew_point\n                                    \n                                \n                                \n                                    \n                                        dew_point:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    accounts for the Dew point of weather\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dt\n                                    \n                                \n                                \n                                    \n                                        dt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current time, Unix, UTC\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        feels_like\n                                    \n                                \n                                \n                                    \n                                        feels_like:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    accounts for the human perception of weather\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidity\n                                    \n                                \n                                \n                                    \n                                        humidity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gets concentration of water vapor present in the air\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pressure\n                                    \n                                \n                                \n                                    \n                                        pressure:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gets atmospheric pressure\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temp\n                                    \n                                \n                                \n                                    \n                                        temp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Temperature in location\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                    \n                                \n                                \n                                    \n                                        visibility:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Visibility of the place\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weather\n                                    \n                                \n                                \n                                    \n                                        weather:         IWeatherSummary[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IWeatherSummary[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gets weather condition data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IWeatherSummary } from './IWeatherSummary';\n\n/**\n * Interface for detailed weather data\n */\nexport interface IWeatherDetail {\n\n    /**\n     * Gets cloudiness in %\n     */\n    clouds: number;\n\n    /**\n     * Current time, Unix, UTC\n     */\n    dt: number;\n    /**\n     * accounts for the Dew point of weather\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    dew_point: number;\n    /**\n     * accounts for the human perception of weather\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    feels_like: number;\n\n    /**\n     * Gets concentration of water vapor present in the air\n     */\n    humidity: number;\n    /**\n     * Gets atmospheric pressure\n     */\n    pressure: number;\n    /**\n     * Temperature in location\n     */\n    temp: number;\n\n    /**\n     * Visibility of the place\n     */\n    visibility: number\n    /**\n     * Gets weather condition data\n     */\n    weather: IWeatherSummary[]\n\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeatherSummary.html":{"url":"interfaces/IWeatherSummary.html","title":"interface - IWeatherSummary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWeatherSummary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/IWeatherSummary.ts\n        \n\n            \n                Description\n            \n            \n                Interface for weather as per open weather API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    description about weather\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Icon to display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    unique identifier for weather report\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IWeatherSummary {\n    /**\n     * unique identifier for weather report\n     */\n    id: number;\n    /**\n     * description about weather\n     */\n    description: string;\n    /**\n     * Icon to display\n     */\n    icon: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoCardComponent.html":{"url":"components/InfoCardComponent.html","title":"component - InfoCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/shared/info-card/info-card.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-info-card\n            \n\n            \n                styleUrls\n                ./info-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                direction\n                            \n                            \n                                label\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        direction\n                    \n                \n                \n                    \n                        Default value : 'column'\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/info-card/info-card.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/info-card/info-card.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/info-card/info-card.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'weather-base-info-card',\n  templateUrl: './info-card.component.html',\n  styleUrls: ['./info-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * Creates a information card with label and value\n */\nexport class InfoCardComponent {\n\n  @Input() label = '';\n\n  @Input() value = '';\n\n  @Input() direction = 'column'\n\n}\n\n    \n\n    \n        \n  {{ label }} \n  {{ value }}\n\n\n    \n\n    \n                \n                    ./info-card.component.scss\n                \n                @import \"~@angular/material/theming\";\n\n$indigo: mat-color(mat-palette($mat-indigo));\n\n.label {\n    color: rgba($indigo, 0.9)\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}   {{ value }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpenWeatherService.html":{"url":"injectables/OpenWeatherService.html","title":"injectable - OpenWeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OpenWeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/core/open-weather/open-weather.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentWeatherApiUrl\n                            \n                            \n                                    Private\n                                oneCallApiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCurrentWeatherCondition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/core/open-weather/open-weather.service.ts:25\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the OpenWeatherService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                client to perform remote api calls\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrentWeatherCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentWeatherCondition(city: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/open-weather/open-weather.service.ts:44\n                \n            \n\n\n            \n                \n                    Gets weather condition for the requested location\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        location details of the city\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        weather condition details observer\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentWeatherApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.openWeatherURL + environment.currentWeatherAPi\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/core/open-weather/open-weather.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oneCallApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.openWeatherURL + environment.onceCallAPI\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/core/open-weather/open-weather.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\nimport { IPlace } from '../../shared/models/IPlace';\nimport { IOpenWeatherReport } from '../../shared/models/IOpenWeatherReport';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service to fetch data from [OPenWeather API](https://openweathermap.org)\n * There are 2 types of API models\n * 1. [Current weather data API]{@link https://openweathermap.org/current}\n * 2. [One Call API]{@link https://openweathermap.org/api/one-call-api}\n */\nexport class OpenWeatherService {\n\n  private currentWeatherApiUrl = environment.openWeatherURL + environment.currentWeatherAPi;\n\n  private oneCallApiUrl = environment.openWeatherURL + environment.onceCallAPI;\n\n\n\n  /**\n   * Initializes a new instance of the ```OpenWeatherService``` class.\n   *\n   * @param httpClient client to perform remote api calls\n   */\n  constructor(private httpClient: HttpClient) {\n\n  }\n\n  /**\n   * Gets weather condition for the requested location\n   *\n   * @param city location details of the city\n   * @returns weather condition details observer\n   */\n  public getCurrentWeatherCondition(city: IPlace): Observable {\n    const finalUrl = `${this.oneCallApiUrl}lat=${city.coord.lat}&lon=${city.coord.lon}` +\n      `&exclude=minutely,daily&units=metric&appid=${environment.openWeatherAPIkey}`\n\n    return this.httpClient.get(finalUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaceCardComponent.html":{"url":"components/PlaceCardComponent.html","title":"component - PlaceCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlaceCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/shared/place-card/place-card.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-place-card\n            \n\n            \n                styleUrls\n                ./place-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./place-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleFavorite\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                place\n                            \n                            \n                                weather\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addPlaceToFavorites\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        place\n                    \n                \n                \n                    \n                        Type :         IPlace\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-card/place-card.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        weather\n                    \n                \n                \n                    \n                        Type :         IOpenWeatherReport\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-card/place-card.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addPlaceToFavorites\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-card/place-card.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleFavorite\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleFavorite()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/place-card/place-card.component.ts:31\n                \n            \n\n\n            \n                \n                    Toggles favorite state of a place\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date().toISOString()\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-card/place-card.component.ts:20\n                            \n                        \n\n                \n                    \n                        Represents current time \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { IOpenWeatherReport } from '../models/IOpenWeatherReport';\nimport { IPlace } from '../models/IPlace';\n\n@Component({\n  selector: 'weather-base-place-card',\n  templateUrl: './place-card.component.html',\n  styleUrls: ['./place-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * Visualize place model as material card element\n */\nexport class PlaceCardComponent {\n\n  /** Represents current time */\n  public currentTime = new Date().toISOString();\n\n  @Input() place!: IPlace;\n\n  @Input() weather!: IOpenWeatherReport;\n\n  @Output() addPlaceToFavorites: EventEmitter = new EventEmitter();\n\n  /**\n   * Toggles favorite state of a place\n   */\n  toggleFavorite(): void {\n    if (!this.place) {\n      return;\n    }\n    this.addPlaceToFavorites.emit(this.place);\n    this.place.isFavorite = !this.place.isFavorite;\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ place?.name }}\n\n    \n    favorite\n  \n  \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./place-card.component.scss\n                \n                :host {\n    width: 100%;\n}\n\n.place-card {\n    .place-card__image {\n        filter: brightness(80%);\n        height: 230px;\n\n        &:before {\n            content: 'Image not available';\n            display: block;\n            position: absolute;\n            height: 230px;\n            background-size: contain;\n            width: 100%;\n            text-align: center;\n            font-style: italic;\n            color: #b38f8f;\n            line-height: 230px;\n            background-image: url(../../../assets/default-image.png);\n        }\n    }\n\n    .place-card__fav-icon {\n        cursor: pointer;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ place?.name }}        favorite          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlaceCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaceHourlyForecastComponent.html":{"url":"components/PlaceHourlyForecastComponent.html","title":"component - PlaceHourlyForecastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlaceHourlyForecastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-place-hourly-forecast\n            \n\n            \n                styleUrls\n                ./place-hourly-forecast.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./place-hourly-forecast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colorScheme\n                            \n                            \n                                weatherData\n                            \n                            \n                                xAxisLabel\n                            \n                            \n                                yAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formatWeatherReportForHourlyData\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                place\n                            \n                            \n                                weather\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        place\n                    \n                \n                \n                    \n                        Type :         IPlace\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        weather\n                    \n                \n                \n                    \n                        Type :         IOpenWeatherReport\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            formatWeatherReportForHourlyData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formatWeatherReportForHourlyData(weatherReport: IOpenWeatherReport)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts:50\n                \n            \n\n\n            \n                \n                    Format weather report into chart specific data structure\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    weatherReport\n                                    \n                                                IOpenWeatherReport\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        which is formatted for charts\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IChart\n\n                    \n                    \n                        chart data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    domain: ['#5AA454']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weatherData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IChart[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xAxisLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Time'\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yAxisLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Temperature in (°C)'\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { IOpenWeatherReport } from '../models/IOpenWeatherReport';\nimport { IPlace } from '../models/IPlace';\nimport { IWeatherDetail } from '../models/IWeatherDetail';\nimport { IChart, ISeries } from './IChart';\n\n@Component({\n  selector: 'weather-base-place-hourly-forecast',\n  templateUrl: './place-hourly-forecast.component.html',\n  styleUrls: ['./place-hourly-forecast.component.scss']\n})\n/**\n * Build hourly based charts based on weather report\n */\nexport class PlaceHourlyForecastComponent implements OnChanges {\n\n  @Input() place!: IPlace;\n\n  @Input() weather!: IOpenWeatherReport;\n\n  weatherData: IChart[] = [];\n\n  xAxisLabel = 'Time';\n\n  yAxisLabel = 'Temperature in (°C)';\n\n  colorScheme = {\n    domain: ['#5AA454']\n  };\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n\n    if (changes.weather && changes.weather.currentValue) {\n      this.weatherData = [this.formatWeatherReportForHourlyData(this.weather)];\n      console.log(this.weatherData);\n    }\n  }\n\n  /**\n   * Format weather report into chart specific data structure\n   *\n   * @param weatherReport which is formatted for charts\n   * @returns chart data\n   */\n  public formatWeatherReportForHourlyData(weatherReport: IOpenWeatherReport): IChart {\n    const series = weatherReport.hourly.slice(0, 7).map((weatherDetail: IWeatherDetail): ISeries => {\n      return {\n        name: `${new Date(weatherDetail.dt * 1000).getHours()}:00`,\n        value: weatherDetail.temp\n      }\n    });\n\n    return {\n      name: this.place.name,\n      series: series\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    Hourly forecast\n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./place-hourly-forecast.component.scss\n                \n                :host {\n    width: 100%;\n    background: white;\n\n    .place-hourly-forecast-container {\n        width: 100%;\n        height: 300px;\n\n        .place-hourly-forecast-container__chart {\n            padding: 4px;\n            width: 300px;\n            height: 200px;\n        }\n    }\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Hourly forecast      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlaceHourlyForecastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlacesService.html":{"url":"injectables/PlacesService.html","title":"injectable - PlacesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlacesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/core/places/places.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                places\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllPlaces\n                            \n                            \n                                    Public\n                                getAllPlacesFromServer\n                            \n                            \n                                    Public\n                                getPlaceById\n                            \n                            \n                                    Public\n                                getPlacesByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/core/places/places.service.ts:17\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the PlacesService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                client to perform http request\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllPlaces\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPlaces()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/places/places.service.ts:34\n                \n            \n\n\n            \n                \n                    Get All places from json\n\n\n                    \n                    \n                    \n                        Returns :         IPlace[]\n\n                    \n                    \n                        All the places in json\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllPlacesFromServer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPlacesFromServer()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/places/places.service.ts:69\n                \n            \n\n\n            \n                \n                    Get All places from json\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        promise resolver for place data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlaceById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlaceById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/places/places.service.ts:56\n                \n            \n\n\n            \n                \n                    Get place by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of the place\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IPlace\n\n                    \n                    \n                        Place which is matched with passed param\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlacesByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlacesByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/places/places.service.ts:44\n                \n            \n\n\n            \n                \n                    Get all places by name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of the city\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IPlace[]\n\n                    \n                    \n                        All the places which were matched with passed param\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            places\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPlace[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/core/places/places.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IPlace } from './../../shared/models/IPlace';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service to get details about available cities\n */\nexport class PlacesService {\n\n  private places: IPlace[] = [];\n\n  /**\n   * Initializes a new instance of the ```PlacesService``` class.\n   *\n   * @param http client to perform http request\n   */\n  constructor(private http: HttpClient) {\n\n  }\n\n\n  /**\n   * Get All places from json\n   *\n   * @returns All the places in json\n   */\n  public getAllPlaces(): IPlace[] {\n    return this.places;\n  }\n\n  /**\n   * Get all places by name\n   *\n   * @param name of the city\n   * @returns All the places which were matched with passed param\n   */\n  public getPlacesByName(name: string): IPlace[] {\n\n    return this.places.filter((city: IPlace) => city.name.toLowerCase().indexOf(name) > -1);\n\n  }\n\n  /**\n   * Get place by id\n   *\n   * @param id of the place\n   * @returns Place which is matched with passed param\n   */\n  public getPlaceById(id: number): IPlace {\n\n    const city = this.places.filter((city: IPlace) => city.id === id);\n\n    return city[0];\n\n  }\n\n  /**\n   * Get All places from json\n   *\n   * @returns promise resolver for place data\n   */\n  public getAllPlacesFromServer(): Promise {\n    return this.http.get('./assets/cities.json').pipe(map((places: { places: IPlace[] }) => {\n      this.places = places.places;\n\n      return true;\n    })).toPromise();\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/RoundoffPipe.html":{"url":"pipes/RoundoffPipe.html","title":"pipe - RoundoffPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  RoundoffPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/pipes/roundoff.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        roundoff\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/pipes/roundoff.pipe.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'roundoff'\n})\n/**\n * Perform a round off approach for numbers\n */\nexport class RoundoffPipe implements PipeTransform {\n\n  /**\n   * @internal\n   */\n  transform(value: number): number {\n    if (isNaN(value)) {\n      return value;\n    }\n\n    return Math.round(value);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nCountryFlagComponent\n\nCountryFlagComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCountryFlagComponent->SharedModule\n\n\n\n\n\nCurrentWeatherDetailsContainerComponent\n\nCurrentWeatherDetailsContainerComponent\n\nSharedModule -->\n\nCurrentWeatherDetailsContainerComponent->SharedModule\n\n\n\n\n\nCurrentWeatherSummaryContainerComponent\n\nCurrentWeatherSummaryContainerComponent\n\nSharedModule -->\n\nCurrentWeatherSummaryContainerComponent->SharedModule\n\n\n\n\n\nInfoCardComponent\n\nInfoCardComponent\n\nSharedModule -->\n\nInfoCardComponent->SharedModule\n\n\n\n\n\nPlaceCardComponent\n\nPlaceCardComponent\n\nSharedModule -->\n\nPlaceCardComponent->SharedModule\n\n\n\n\n\nPlaceHourlyForecastComponent\n\nPlaceHourlyForecastComponent\n\nSharedModule -->\n\nPlaceHourlyForecastComponent->SharedModule\n\n\n\n\n\nRoundoffPipe\n\nRoundoffPipe\n\nSharedModule -->\n\nRoundoffPipe->SharedModule\n\n\n\n\n\nSmartPlaceCardComponent\n\nSmartPlaceCardComponent\n\nSharedModule -->\n\nSmartPlaceCardComponent->SharedModule\n\n\n\n\n\nWeatherIconPipe\n\nWeatherIconPipe\n\nSharedModule -->\n\nWeatherIconPipe->SharedModule\n\n\n\n\n\nCountryFlagComponent \n\nCountryFlagComponent \n\nCountryFlagComponent  -->\n\nSharedModule->CountryFlagComponent \n\n\n\n\n\nPlaceCardComponent \n\nPlaceCardComponent \n\nPlaceCardComponent  -->\n\nSharedModule->PlaceCardComponent \n\n\n\n\n\nPlaceHourlyForecastComponent \n\nPlaceHourlyForecastComponent \n\nPlaceHourlyForecastComponent  -->\n\nSharedModule->PlaceHourlyForecastComponent \n\n\n\n\n\nSmartPlaceCardComponent \n\nSmartPlaceCardComponent \n\nSmartPlaceCardComponent  -->\n\nSharedModule->SmartPlaceCardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CountryFlagComponent\n                        \n                        \n                            CurrentWeatherDetailsContainerComponent\n                        \n                        \n                            CurrentWeatherSummaryContainerComponent\n                        \n                        \n                            InfoCardComponent\n                        \n                        \n                            PlaceCardComponent\n                        \n                        \n                            PlaceHourlyForecastComponent\n                        \n                        \n                            RoundoffPipe\n                        \n                        \n                            SmartPlaceCardComponent\n                        \n                        \n                            WeatherIconPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CountryFlagComponent\n                        \n                        \n                            PlaceCardComponent\n                        \n                        \n                            PlaceHourlyForecastComponent\n                        \n                        \n                            SmartPlaceCardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Copyright WeatherBase 2021\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Material specific modules\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatBadgeModule } from '@angular/material/badge';\n// third party libs\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n// App specific modules\nimport { PlaceCardComponent } from './place-card/place-card.component';\nimport { PlaceHourlyForecastComponent } from './place-hourly-forecast/place-hourly-forecast.component';\nimport { CountryFlagComponent } from './country-flag/country-flag.component';\nimport { WeatherIconPipe } from './pipes/weather-icon.pipe';\nimport { RoundoffPipe } from './pipes/roundoff.pipe';\nimport { SmartPlaceCardComponent } from './smart-place-card/smart-place-card.component';\nimport { InfoCardComponent } from './info-card/info-card.component';\nimport { CurrentWeatherSummaryContainerComponent } from './current-weather-summary-container/current-weather-summary-container.component';\nimport { CurrentWeatherDetailsContainerComponent } from './current-weather-details-container/current-weather-details-container.component';\n\n@NgModule({\n  declarations: [\n    PlaceCardComponent,\n    PlaceHourlyForecastComponent,\n    CountryFlagComponent,\n    WeatherIconPipe,\n    RoundoffPipe,\n    SmartPlaceCardComponent,\n    InfoCardComponent,\n    CurrentWeatherSummaryContainerComponent,\n    CurrentWeatherDetailsContainerComponent\n  ],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatProgressBarModule,\n    MatToolbarModule,\n    NgxChartsModule\n  ],\n  exports: [\n    CountryFlagComponent,\n    FlexLayoutModule,\n    MatAutocompleteModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatProgressBarModule,\n    MatToolbarModule,\n    PlaceCardComponent,\n    PlaceHourlyForecastComponent,\n    SmartPlaceCardComponent\n  ]\n})\n/**\n * Packs all components required for the application\n */\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SmartPlaceCardComponent.html":{"url":"components/SmartPlaceCardComponent.html","title":"component - SmartPlaceCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SmartPlaceCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-smart-place-card\n            \n\n            \n                styleUrls\n                ./smart-place-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./smart-place-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentTime\n                            \n                            \n                                    Public\n                                loadingWeather\n                            \n                            \n                                weather\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getWeatherReport\n                            \n                            \n                                    Public\n                                goToPlaceDetails\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                toggleFavorite\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                place\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addPlaceToFavorites\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(openWeatherService: OpenWeatherService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:32\n                            \n                        \n\n                \n                    \n                            Creates instance of FavoritePlacesComponent class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        openWeatherService\n                                                  \n                                                        \n                                                                        OpenWeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance to request weather details from open weather\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of angular router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        place\n                    \n                \n                \n                    \n                        Type :         IPlace\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addPlaceToFavorites\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWeatherReport\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherReport(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:62\n                \n            \n\n\n            \n                \n                    Gets weather condition for the requested location\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        location details of the city\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        weather condition details observer\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goToPlaceDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goToPlaceDetails(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:71\n                \n            \n\n\n            \n                \n                    Navigate to details page of place requested\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to navigate\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleFavorite\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleFavorite()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:47\n                \n            \n\n\n            \n                \n                    Toggles favorite state of a place\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date().toISOString()\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:30\n                            \n                        \n\n                \n                    \n                        Represents current time in ISO format \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadingWeather\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:27\n                            \n                        \n\n                \n                    \n                        Flag to check loading status of weather \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IOpenWeatherReport | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, Output, SimpleChanges, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { OpenWeatherService } from '../../core/open-weather/open-weather.service';\nimport { IOpenWeatherReport } from '../models/IOpenWeatherReport';\nimport { IPlace } from '../models/IPlace';\n\n@Component({\n  selector: 'weather-base-smart-place-card',\n  templateUrl: './smart-place-card.component.html',\n  styleUrls: ['./smart-place-card.component.scss']\n})\n/**\n * Visualize place model as material card element\n */\nexport class SmartPlaceCardComponent implements OnChanges {\n\n\n  @Input() place!: IPlace;\n\n  weather: IOpenWeatherReport | null = null;\n\n  /** Flag to check loading status of weather */\n  public loadingWeather = false;\n\n  /** Represents current time in ISO format */\n  public currentTime = new Date().toISOString();\n\n  @Output() addPlaceToFavorites: EventEmitter = new EventEmitter();\n\n  /**\n   * Creates instance of ``` FavoritePlacesComponent``` class\n   *\n   * @param openWeatherService instance to request weather details from open weather\n   * @param router instance of angular router\n   */\n  constructor(\n    private openWeatherService: OpenWeatherService,\n    private router: Router) { }\n\n  /**\n   * Toggles favorite state of a place\n   */\n  public toggleFavorite(): void {\n    if (!this.place) {\n      return;\n    }\n    this.place.isFavorite = !this.place.isFavorite;\n    this.addPlaceToFavorites.emit(this.place);\n\n  }\n\n  /**\n   * Gets weather condition for the requested location\n   *\n   * @param place location details of the city\n   * @returns weather condition details observer\n   */\n  public getWeatherReport(place: IPlace): Observable {\n    return this.openWeatherService.getCurrentWeatherCondition(place);\n  }\n\n  /**\n   * Navigate to details page of place requested\n   *\n   * @param place to navigate\n   */\n  public goToPlaceDetails(place: IPlace): void {\n    this.router.navigate(['/city', place.name, place.id]);\n  }\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.place && changes.place.currentValue) {\n      this.loadingWeather = true;\n      this.getWeatherReport(this.place).subscribe((weather: IOpenWeatherReport) => {\n        this.weather = weather;\n        this.loadingWeather = false;\n      }, _ => {\n        this.weather = null;\n        this.loadingWeather = false;\n      });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ place?.name }}\n    \n    favorite\n  \n  \n\n  \n  \n    \n    Loading weather details\n    Not able to load weather details\n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./smart-place-card.component.scss\n                \n                :host {\n    width: 100%;\n}\n\n.place-card {\n    .place-card__image {\n        filter: brightness(80%);\n        width: 100%;\n        height: 230px;\n\n        &:before {\n            content: 'Image not available';\n            display: block;\n            position: absolute;\n            height: 230px;\n            background-size: contain;\n            width: 100%;\n            text-align: center;\n            font-style: italic;\n            color: #b38f8f;\n            line-height: 230px;\n            background-image: url(../../../assets/default-image.png);\n        }\n    }\n\n    .pointer {\n        cursor: pointer;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ place?.name }}        favorite                Loading weather details    Not able to load weather details      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SmartPlaceCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ValidateDataForPlaceNavigationGuard.html":{"url":"guards/ValidateDataForPlaceNavigationGuard.html","title":"guard - ValidateDataForPlaceNavigationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ValidateDataForPlaceNavigationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/live-weather/src/app/core/router-guards/validate-data-for-place-navigation.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/core/router-guards/validate-data-for-place-navigation.guard.ts:13\n                            \n                        \n\n                \n                    \n                            Creates instance of CityDetailsContainerComponent class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of angular router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/router-guards/validate-data-for-place-navigation.guard.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Validates the path before navigating to Place details\n */\nexport class ValidateDataForPlaceNavigationGuard implements CanActivate {\n  /**\n   * Creates instance of ```CityDetailsContainerComponent``` class\n   *\n   * @param router instance of angular router\n   */\n  constructor(private router: Router) {\n\n  }\n\n  /**\n   * @internal\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot): Observable | Promise | boolean | UrlTree {\n    if (!route.params.name || !route.params.id) {\n      this.router.navigate(['/home']);\n\n      return false;\n    }\n\n    return true;\n\n  }\n\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/WeatherIconPipe.html":{"url":"pipes/WeatherIconPipe.html","title":"pipe - WeatherIconPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  WeatherIconPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/pipes/weather-icon.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        weatherIcon\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: unknown)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/pipes/weather-icon.pipe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        value to be transformed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'weatherIcon'\n})\n/**\n * Helps in transforming icon string to open weather icon URL\n */\nexport class WeatherIconPipe implements PipeTransform {\n\n  /**\n   * @internal\n   * @param value value to be transformed\n   */\n  transform(value: unknown): unknown {\n    return `http://openweathermap.org/img/w/${value}.png`;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/live-weather-e2e/src/support/app.po.ts\n            \n            variable\n            getGreeting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/live-weather-e2e/src/support/commands.ts\n            \n            interface\n            Chainable\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/city-details-container/city-details-container.component.ts\n            \n            component\n            CityDetailsContainerComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/city-search/city-search.component.ts\n            \n            component\n            CitySearchComponent\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/core/data-store/data-store.service.ts\n            \n            injectable\n            DataStoreService\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/core/google-places/google-places.service.ts\n            \n            injectable\n            GooglePlacesService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/core/open-weather/open-weather.service.ts\n            \n            injectable\n            OpenWeatherService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/core/places/places.service.ts\n            \n            injectable\n            PlacesService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/core/router-guards/validate-data-for-place-navigation.guard.ts\n            \n            guard\n            ValidateDataForPlaceNavigationGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/favorite-places/favorite-places.component.ts\n            \n            component\n            FavoritePlacesComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/country-flag/country-flag.component.ts\n            \n            component\n            CountryFlagComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/current-weather-details-container/current-weather-details-container.component.ts\n            \n            component\n            CurrentWeatherDetailsContainerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/current-weather-summary-container/current-weather-summary-container.component.ts\n            \n            component\n            CurrentWeatherSummaryContainerComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/info-card/info-card.component.ts\n            \n            component\n            InfoCardComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/ICoordinate.ts\n            \n            interface\n            ICoordinate\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/IGooglePlace.ts\n            \n            interface\n            IGooglePlace\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/IGooglePlace.ts\n            \n            interface\n            IPhoto\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/IOpenWeatherReport.ts\n            \n            interface\n            IOpenWeatherReport\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/IPlace.ts\n            \n            interface\n            IPlace\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/IPlaceCard.ts\n            \n            interface\n            IPlaceCard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/IWeatherDetail.ts\n            \n            interface\n            IWeatherDetail\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/IWeatherSummary.ts\n            \n            interface\n            IWeatherSummary\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/pipes/roundoff.pipe.ts\n            \n            pipe\n            RoundoffPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/pipes/weather-icon.pipe.ts\n            \n            pipe\n            WeatherIconPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/place-card/place-card.component.ts\n            \n            component\n            PlaceCardComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/place-hourly-forecast/IChart.ts\n            \n            interface\n            IChart\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/place-hourly-forecast/IChart.ts\n            \n            interface\n            ISeries\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts\n            \n            component\n            PlaceHourlyForecastComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts\n            \n            component\n            SmartPlaceCardComponent\n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                apps/live-weather/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/live-weather/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.2.0\n        \n            @angular/cdk : ^11.2.2\n        \n            @angular/common : ^11.2.0\n        \n            @angular/compiler : ^11.2.0\n        \n            @angular/core : ^11.2.0\n        \n            @angular/flex-layout : ^11.0.0-beta.33\n        \n            @angular/forms : ^11.2.0\n        \n            @angular/material : ^11.2.2\n        \n            @angular/platform-browser : ^11.2.0\n        \n            @angular/platform-browser-dynamic : ^11.2.0\n        \n            @angular/router : ^11.2.0\n        \n            @nrwl/angular : 11.4.0\n        \n            @swimlane/ngx-charts : ^17.0.1\n        \n            rxjs : ~6.6.3\n        \n            tslib : ^2.0.0\n        \n            zone.js : ^0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWeatherBase\nContent\n\nIntroduction\nInstallation\nAPI\nProject Structure\nDeployment\nDocumentation\nCommands\nOthers\n\nIntroduction\nWeather Base is an web application to Monitor weather in your favorite cities across Netherland.\nIt can be extendable to the other parts of world.\n\nApp is built using Angular framework\nWeather related data is retrieved from Open weather API\nPlaces related data is obtained from google places API\nProject structure is based on monorepo style. (Used Nx)\n\nInstallation\nLocal installation\n\nClone this reo using git clone https://github.com/bharathmuppa/weather-base.git\nRun npm ci for a clean install.\nRun npm start to start application in your local machine .\nOpen chrome and navigate to http://localhost:4200\n\nAPI\nThis project makes use of\n\nOpen Weather API (Weather Data)\n\nGo to Open weather\nSubscribe to corresponding api\nAdd a new API key\nPlace the new key in angular environment file\n\n\nGoogle API (Images of places)\n\nGo to Google cloud console\nSelect a project\nSubscribe to places API\nAdd an API key\nPlace the new key in angular environment file\n\n\n\nProject Structure\n\nThis project structure is wel suitable for enterprise level applications to small scale applications.\nIt is platform agnostic architecture\nLearn more about Nx here\nConfigured with latest eslint rules\nPrettier is in place to format the files on Save and on Request\nEquipped with code snippets to help developers to ease the process of documentation\n\nDeployment\nBefore deployment, scripts check for any unit test or e2e test anomalies. Not meeting the check wont let you to push the code\nAfter check code will be pushed to the corresponding branch in github and automatic scripts are in place to deploy it to netlify\nDocumentation\nLatest Documents will be available here\nUseful Commands\nRun ng g component my-component --project=my-app to generate a new component.\nRun npm run generate:Docs to generate docs.\nRun npm run dep-graph to check whole dependencies between projects and libs in this repo.\nRun npm run update to update to latest version.\nRun npm run affected:apps to run sanity check on affected apps\nOthers\nCode scaffolding\nRun ng g component my-component --project=my-app to generate a new component.\nBuild\nRun ng build my-app to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test my-app to execute the unit tests via Jest.\nRun nx affected:test to execute the unit tests affected by a change.\nRunning end-to-end tests\nRun ng e2e my-app to execute the end-to-end tests via Cypress.\nRun nx affected:e2e to execute the end-to-end tests affected by a change.\nUnderstand your workspace\nRun nx dep-graph to see a diagram of the dependencies of your projects.\nFurther help\nThis project was generated using Nx.\n🔎 Nx is a set of Extensible Dev Tools for Monorepos.\nQuick Start & Documentation\nNx Documentation\nAdding capabilities to your workspace\nNx supports many plugins which add capabilities for developing different types of applications and different tools.\nThese capabilities include generating applications, libraries, etc as well as the devtools to test, and build projects as well.\nBelow are our core plugins:\n\nAngular\nng add @nrwl/angular\n\n\nWeb (no framework frontends)\nng add @nrwl/web\n\n\nNest\nng add @nrwl/nest\n\n\nNode\nng add @nrwl/node\n\n\n\nThere are also many community plugins you could add.\nGenerate an application\nRun ng g @nrwl/angular:app my-app to generate an application.\n\nYou can use any of the plugins above to generate applications as well.\n\nWhen using Nx, you can create multiple applications and libraries in the same workspace.\nGenerate a library\nRun ng g @nrwl/angular:lib my-lib to generate a library.\n\nYou can also use any of the plugins above to generate libraries as well.\n\nLibraries are shareable across libraries and applications. They can be imported from @weather-base/mylib.\nVisit the Nx Documentation to learn more.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCityDetailsContainerComponent\n\nCityDetailsContainerComponent\n\nAppModule -->\n\nCityDetailsContainerComponent->AppModule\n\n\n\n\n\nCitySearchComponent\n\nCitySearchComponent\n\nAppModule -->\n\nCitySearchComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFavoritePlacesComponent\n\nFavoritePlacesComponent\n\nAppModule -->\n\nFavoritePlacesComponent->AppModule\n\n\n\nAppModule -->\n\nFavoritePlacesComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nCountryFlagComponent \n\nCountryFlagComponent \n\nCountryFlagComponent  -->\n\nSharedModule->CountryFlagComponent \n\n\n\n\n\nPlaceCardComponent \n\nPlaceCardComponent \n\nPlaceCardComponent  -->\n\nSharedModule->PlaceCardComponent \n\n\n\n\n\nPlaceHourlyForecastComponent \n\nPlaceHourlyForecastComponent \n\nPlaceHourlyForecastComponent  -->\n\nSharedModule->PlaceHourlyForecastComponent \n\n\n\n\n\nSmartPlaceCardComponent \n\nSmartPlaceCardComponent \n\nSmartPlaceCardComponent  -->\n\nSharedModule->SmartPlaceCardComponent \n\n\n\n\n\nDataStoreService\n\nDataStoreService\n\nAppModule -->\n\nDataStoreService->AppModule\n\n\n\n\n\nGooglePlacesService\n\nGooglePlacesService\n\nAppModule -->\n\nGooglePlacesService->AppModule\n\n\n\n\n\nOpenWeatherService\n\nOpenWeatherService\n\nAppModule -->\n\nOpenWeatherService->AppModule\n\n\n\n\n\nPlacesService\n\nPlacesService\n\nAppModule -->\n\nPlacesService->AppModule\n\n\n\n\n\nCountryFlagComponent\n\nCountryFlagComponent\n\nSharedModule -->\n\nCountryFlagComponent->SharedModule\n\n\n\n\n\nCurrentWeatherDetailsContainerComponent\n\nCurrentWeatherDetailsContainerComponent\n\nSharedModule -->\n\nCurrentWeatherDetailsContainerComponent->SharedModule\n\n\n\n\n\nCurrentWeatherSummaryContainerComponent\n\nCurrentWeatherSummaryContainerComponent\n\nSharedModule -->\n\nCurrentWeatherSummaryContainerComponent->SharedModule\n\n\n\n\n\nInfoCardComponent\n\nInfoCardComponent\n\nSharedModule -->\n\nInfoCardComponent->SharedModule\n\n\n\n\n\nPlaceCardComponent\n\nPlaceCardComponent\n\nSharedModule -->\n\nPlaceCardComponent->SharedModule\n\n\n\n\n\nPlaceHourlyForecastComponent\n\nPlaceHourlyForecastComponent\n\nSharedModule -->\n\nPlaceHourlyForecastComponent->SharedModule\n\n\n\n\n\nRoundoffPipe\n\nRoundoffPipe\n\nSharedModule -->\n\nRoundoffPipe->SharedModule\n\n\n\n\n\nSmartPlaceCardComponent\n\nSmartPlaceCardComponent\n\nSharedModule -->\n\nSmartPlaceCardComponent->SharedModule\n\n\n\n\n\nWeatherIconPipe\n\nWeatherIconPipe\n\nSharedModule -->\n\nWeatherIconPipe->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            getGreeting   (apps/.../app.po.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/live-weather/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  openWeatherURL: 'https://api.openweathermap.org/data/2.5/',\n  currentWeatherAPi: 'weather?',\n  onceCallAPI: 'onecall?',\n  iconsApi: 'http://openweathermap.org/img/w/',\n  openWeatherAPIkey: 'd5d148fa23f7958ae9ad9fa0b2aaf860',\n  googleKey: 'AIzaSyC1fENFHQQodb4AbjhzXdR_ECL2ITbsajo'\n}\n                        \n                    \n\n\n            \n        \n\n    apps/live-weather/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  openWeatherURL: 'https://api.openweathermap.org/data/2.5/',\n  currentWeatherAPi: 'weather?',\n  onceCallAPI: 'onecall?',\n  iconsApi: 'http://openweathermap.org/img/w/',\n  openWeatherAPIkey: 'd5d148fa23f7958ae9ad9fa0b2aaf860',\n  googleKey: 'AIzaSyC1fENFHQQodb4AbjhzXdR_ECL2ITbsajo'\n}\n                        \n                    \n\n\n            \n        \n\n    apps/live-weather-e2e/src/support/app.po.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getGreeting\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => cy.get('#header-title')\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
