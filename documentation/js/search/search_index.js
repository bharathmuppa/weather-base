var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AirPollutionCardComponent.html",[0,0.405,1,0.945]],["body/components/AirPollutionCardComponent.html",[0,0.463,1,1.224,2,0.873,3,0.163,4,0.103,5,0.699,6,0.699,7,0.699,8,0.699,9,0.074,10,0.216,11,5.082,12,1.988,13,4.499,14,1.275,15,1.24,16,3.007,17,0.587,18,2.214,19,1.227,20,2.088,21,1.524,22,1.68,23,1.101,24,2.716,25,1.101,26,2.196,27,0.201,28,0.536,29,3.988,30,2.112,31,2.716,32,3.397,33,0.925,34,3.224,35,2.746,36,2.431,37,1.601,38,1.044,39,2.431,40,3.007,41,1.24,42,1.744,43,2.235,44,3.716,45,1.247,46,2.746,47,1.601,48,1.893,49,1.019,50,0.663,51,1.224,52,0.023,53,0.869,54,0.445,55,1.224,56,0.621,57,1.601,58,1.201,59,1.852,60,1.718,61,1.771,62,2.048,63,3.411,64,3.224,65,2.048,66,1.601,67,2.818,68,2.818,69,2.246,70,1.09,71,1.155,72,1.735,73,2.431,74,2.746,75,2.048,76,3.411,77,2.196,78,1.849,79,2.431,80,3.411,81,2.048,82,1.544,83,2.484,84,4.191,85,1.284,86,1.019,87,2.048,88,1.362,89,2.196,90,2.048,91,1.718,92,1.155,93,1.852,94,2.746,95,2.196,96,3.081,97,1.744,98,2.196,99,2.431,100,2.746,101,2.196,102,0.656,103,1.601,104,2.431,105,0.319,106,1.017,107,0.837,108,1.176,109,1.017,110,1.176,111,1.852,112,2.048,113,1.395,114,1.544,115,0.95,116,1.395,117,1.362,118,0.119,119,1.375,120,1.318,121,0.587,122,2.048,123,1.544,124,1.544,125,1.395,126,0.891,127,1.744,128,1.744,129,3.397,130,1.176,131,2.048,132,3.224,133,2.048,134,1.744,135,2.431,136,1.176,137,0.837,138,1.017,139,2.048,140,1.091,141,0.95,142,1.275,143,2.048,144,1.544,145,1.744,146,1.544,147,2.196,148,1.395,149,0.587,150,1.101,151,0.699,152,1.544,153,0.699,154,1.362,155,0.554,156,0.699,157,0.493,158,1.362,159,0.554,160,0.699,161,0.554,162,0.622,163,0.699,164,0.554,165,0.554,166,0.622,167,0.523,168,0.699,169,0.523,170,0.699,171,0.554,172,0.699,173,0.554,174,0.554,175,0.554,176,0.523,177,0.699,178,0.554,179,0.659,180,0.699,181,0.699,182,0.006,183,0.01,184,0.006]],["title/pipes/AirQualityIndexPipe.html",[185,1.732,186,2.173]],["body/pipes/AirQualityIndexPipe.html",[3,0.211,4,0.211,9,0.151,10,0.215,15,1.608,17,1.199,21,1.734,27,0.641,28,0.696,33,1.199,45,1.153,50,0.696,51,1.132,52,0.023,53,0.992,54,0.439,55,1.132,56,0.651,71,1.377,85,1.347,86,1.523,102,0.525,105,0.651,118,0.242,119,1.271,120,2.203,121,1.199,182,0.013,183,0.017,184,0.013,185,2.676,186,3.357,187,2.848,188,5.08,189,4.025,190,3.562,191,5.39,192,3.154,193,4.064,194,2.293,195,4.182,196,5.964,197,6.52,198,1.614,199,1.638,200,4.591,201,5.39,202,5.39,203,5.39,204,5.39,205,6.3,206,5.39,207,4.182,208,4.064,209,4.182]],["title/components/AppComponent.html",[0,0.405,155,0.945]],["body/components/AppComponent.html",[0,0.66,1,1.025,2,1.367,3,0.255,4,0.191,5,1.293,6,1.293,7,1.293,8,1.293,9,0.137,10,0.137,12,1.086,17,1.086,18,2.435,19,1.274,20,2.297,21,0.967,22,1.293,23,1.724,25,1.724,38,0.945,49,0.967,50,0.63,52,0.022,53,0.84,58,1.016,70,1.216,92,1.29,102,0.475,105,0.589,117,1.724,118,0.219,137,1.547,138,2.82,140,2.69,141,1.757,146,2.855,149,1.086,150,1.724,151,1.293,152,2.069,153,1.293,154,1.94,155,1.64,156,1.293,157,0.912,158,1.94,159,1.025,160,1.293,161,1.025,162,1.151,163,1.293,164,1.025,165,1.025,166,1.151,167,0.967,168,1.293,169,0.967,170,1.293,171,1.025,172,1.293,173,1.025,174,1.025,175,1.025,176,0.967,177,1.293,178,1.025,179,1.219,180,1.293,181,1.293,182,0.012,183,0.016,184,0.012,210,3.225,211,3.027,212,5.681,213,5.049,214,3.225,215,2.579,216,2.855,217,2.064,218,3.786,219,2.358,220,3.225,221,2.579,222,3.225]],["title/modules/AppModule.html",[223,1.859,224,2.377]],["body/modules/AppModule.html",[3,0.147,4,0.147,9,0.106,10,0.106,43,2.447,48,1.058,49,1.644,50,0.486,52,0.023,58,0.849,60,1.557,70,1.016,71,0.746,102,0.878,105,0.656,108,1.678,109,1.451,110,1.678,118,0.169,119,0.888,121,0.838,130,1.678,149,0.838,155,1.811,157,1.442,159,1.621,167,1.529,169,0.746,171,1.621,182,0.009,183,0.013,184,0.009,198,1.34,211,1.557,214,2.489,223,2.247,224,4.924,225,1.557,226,1.678,227,3.083,228,3.732,229,3.732,230,1.99,231,2.489,232,2.489,233,2.489,234,2.489,235,2.489,236,3.73,237,3.73,238,3.73,239,2.973,240,3.439,241,3.245,242,3.181,243,2.203,244,2.203,245,2.922,246,2.873,247,1.99,248,1.82,249,1.99,250,2.873,251,4.218,252,4.218,253,3.181,254,1.99,255,4.218,256,2.922,257,4.218,258,4.218,259,1.99,260,4.218,261,4.218,262,2.203,263,2.922,264,2.922,265,2.873,266,2.922,267,2.489,268,2.922,269,2.922,270,1.99,271,2.203,272,2.922,273,1.99,274,1.678,275,1.99,276,2.489,277,1.99,278,2.489,279,1.99,280,2.203,281,1.99,282,2.489,283,2.489,284,2.922,285,1.724,286,2.489,287,2.922,288,2.922,289,2.922,290,2.922,291,2.922,292,2.922,293,2.203,294,2.489,295,2.489,296,2.489]],["title/modules/AppRoutingModule.html",[223,1.859,236,2.173]],["body/modules/AppRoutingModule.html",[0,0.734,3,0.213,4,0.213,9,0.152,10,0.152,38,0.702,49,1.384,50,0.702,52,0.023,58,1.09,70,1.016,77,2.872,102,0.854,105,0.656,106,2.094,118,0.244,157,1.305,167,1.384,169,1.077,182,0.013,183,0.017,184,0.013,198,1.142,225,2.247,227,2.627,230,2.872,236,3.375,246,2.872,247,2.872,248,2.627,249,2.872,250,3.691,267,3.592,279,2.872,280,3.18,281,2.872,282,3.592,297,4.218,298,4.218,299,4.086,300,2.872,301,5.419,302,4.078,303,3.691,304,4.218,305,3.18,306,4.218,307,2.247,308,5.567,309,5.988,310,2.872,311,4.218,312,3.592,313,5.419,314,4.218,315,4.218,316,4.218,317,2.872,318,4.218,319,4.218,320,3.18,321,3.18,322,3.18,323,4.218]],["title/interfaces/Chainable.html",[324,0.543,325,2.631]],["body/interfaces/Chainable.html",[3,0.243,4,0.243,9,0.174,10,0.213,19,1.044,27,0.472,33,1.687,45,1.028,51,1.301,52,0.023,53,0.799,54,0.392,55,1.301,71,1.227,78,2.404,88,1.641,182,0.015,183,0.018,184,0.015,199,1.932,324,0.748,325,4.435,326,1.641,327,4.093,328,5.882,329,5.882,330,4.806,331,6.356,332,4.806,333,4.806,334,4.093,335,3.273,336,3.624,337,3.624,338,2.76,339,3.624,340,4.806,341,4.806,342,4.806,343,4.806,344,4.806,345,4.806,346,4.806,347,4.093]],["title/components/CityDetailsContainerComponent.html",[0,0.405,157,0.841]],["body/components/CityDetailsContainerComponent.html",[0,0.599,1,0.612,2,0.943,3,0.176,4,0.114,5,0.772,6,0.772,7,0.772,8,0.772,9,0.082,10,0.197,12,0.648,15,1.339,17,0.648,18,2.256,19,1.215,20,2.128,21,0.577,22,0.772,23,1.189,25,1.189,27,0.222,28,0.579,30,2.051,33,0.999,38,1.067,41,0.869,43,2.394,45,1.102,47,1.729,48,2.222,49,0.577,50,0.707,51,0.943,52,0.023,53,0.794,54,0.389,55,0.943,56,0.542,57,2.703,58,1.398,59,2,61,1.654,70,1.478,71,0.889,72,0.984,78,1.95,92,0.889,102,0.77,105,0.352,106,1.122,107,0.924,108,1.299,109,1.122,110,1.299,117,1.189,118,0.131,119,1.654,120,1.95,121,0.648,126,0.984,138,1.122,140,2.543,141,1.049,149,0.648,150,1.189,151,0.772,152,1.629,153,0.772,154,1.45,155,0.612,156,0.772,157,1.311,158,1.45,159,0.612,160,0.772,161,0.612,162,0.687,163,0.772,164,0.612,165,0.612,166,0.687,167,0.577,168,0.772,169,1.316,170,0.772,171,0.612,172,0.772,173,0.612,174,0.612,175,0.612,176,0.577,177,0.772,178,0.612,179,1.122,180,0.772,181,0.772,182,0.007,183,0.011,184,0.011,198,0.943,217,0.924,220,1.926,221,1.54,222,1.926,239,2.907,240,3.364,241,2.907,270,1.54,273,1.54,274,1.299,275,1.54,276,1.926,277,1.54,278,1.926,279,3.708,285,1.95,307,1.856,321,2.626,348,4.105,349,1.54,350,2.893,351,3.203,352,2.626,353,3.886,354,3.25,355,2.966,356,2.261,357,5.673,358,3.483,359,3.599,360,3.21,361,3.483,362,2.626,363,2.972,364,1.729,365,2.261,366,2.966,367,2.261,368,2.372,369,3.25,370,2.626,371,2.261,372,1.848,373,3.483,374,2.261,375,1.54,376,1.705,377,1.122,378,1.926,379,1.122,380,1.54,381,1.122,382,2.261,383,1.705,384,2.261,385,2.261,386,3.483,387,2.261,388,2.261,389,2.261,390,2.261,391,2.261,392,2.261,393,2.261,394,1.926,395,2.261]],["title/components/CitySearchComponent.html",[0,0.405,159,0.945]],["body/components/CitySearchComponent.html",[0,0.439,1,0.511,2,0.819,3,0.153,4,0.095,5,0.645,6,0.645,7,0.645,8,0.645,9,0.068,10,0.21,12,0.542,15,1.163,17,0.542,18,2.177,19,1.169,20,2.054,21,0.482,22,0.645,23,1.032,25,1.032,27,0.186,28,0.503,30,2.216,33,0.867,38,0.787,41,1.163,44,3.627,45,1.214,47,1.501,48,1.827,49,0.482,50,0.629,51,1.17,52,0.023,53,0.99,54,0.449,55,1.17,56,0.588,57,1.501,58,0.87,60,1.611,61,1.808,66,1.501,67,1.884,68,1.884,69,2.146,70,1.642,71,1.208,72,1.645,78,1.767,85,0.974,86,1.104,88,1.291,91,1.611,92,0.772,102,0.713,105,0.294,106,0.938,107,0.772,115,1.404,117,1.032,118,0.109,119,1.437,120,2.165,121,0.867,123,1.424,124,1.424,125,1.287,126,0.822,141,1.404,144,1.424,149,0.542,150,1.032,151,0.645,152,1.476,153,0.645,154,1.291,155,0.511,156,0.645,157,0.455,158,1.291,159,1.17,160,0.645,161,0.511,162,0.574,163,0.645,164,0.511,165,0.511,166,0.574,167,0.966,168,0.645,169,0.482,170,0.645,171,0.511,172,0.645,173,0.511,174,0.511,175,0.511,176,0.482,177,0.645,178,0.511,179,0.608,180,0.645,181,0.645,182,0.006,183,0.009,184,0.006,185,0.938,198,0.819,199,1.61,217,0.772,219,3.536,239,2.733,241,2.63,262,1.424,270,1.287,271,4.392,273,1.287,274,1.085,275,1.287,285,1.236,307,1.006,317,1.287,348,4.392,350,2.576,354,2.944,359,2.28,360,1.884,362,2.28,375,1.287,377,0.938,379,1.877,396,1.609,397,5.046,398,3.782,399,3.024,400,3.782,401,3.782,402,3.782,403,3.782,404,3.024,405,3.566,406,3.024,407,1.609,408,3.024,409,1.737,410,3.024,411,1.889,412,2.28,413,2.576,414,2.576,415,2.576,416,3.024,417,1.889,418,3.024,419,1.889,420,1.889,421,1.889,422,2.06,423,1.737,424,3.26,425,1.889,426,4.323,427,3.024,428,1.889,429,2.06,430,3.024,431,1.889,432,3.024,433,1.889,434,1.889,435,1.609,436,1.889,437,1.889,438,1.889,439,1.889,440,1.889,441,1.609,442,1.889,443,1.889,444,1.889,445,1.889,446,1.889,447,1.889,448,1.889,449,3.024,450,1.889,451,1.889,452,1.889,453,1.889,454,1.889,455,1.889,456,3.024,457,1.424,458,3.682,459,2.28,460,1.424,461,1.424,462,1.177,463,1.609,464,1.889,465,3.221,466,1.889,467,1.889,468,2.576,469,1.609,470,1.609,471,1.609,472,3.782,473,2.06,474,1.287,475,1.889,476,1.889,477,1.177,478,1.287,479,1.424,480,1.609,481,1.889,482,1.889,483,1.889,484,4.323,485,1.889,486,3.024,487,1.609,488,1.889,489,1.889,490,1.287,491,1.889,492,1.609,493,1.287,494,1.889,495,1.287]],["title/modules/CoreModule.html",[223,1.859,237,2.173]],["body/modules/CoreModule.html",[3,0.259,4,0.259,9,0.185,10,0.185,50,0.853,52,0.023,102,0.768,105,0.798,118,0.297,182,0.016,183,0.019,184,0.016,225,2.731,227,3.193,237,3.809,246,3.492,247,3.492,248,3.193,249,3.492,250,4.165,299,4.612,300,3.492,320,3.866,496,5.127,497,5.127,498,5.127,499,4.366]],["title/components/CountryFlagComponent.html",[0,0.405,161,0.945]],["body/components/CountryFlagComponent.html",[0,0.583,1,0.811,2,1.163,3,0.217,4,0.151,5,1.023,6,1.023,7,1.023,8,1.023,9,0.108,10,0.218,12,0.859,17,0.859,18,2.362,19,1.24,20,2.228,21,0.765,22,1.023,23,1.466,25,1.466,27,0.295,28,0.714,30,1.714,37,2.132,38,0.835,45,1.241,49,0.765,50,0.498,51,0.811,52,0.023,53,0.912,54,0.447,55,0.811,58,0.864,70,1.035,71,1.282,78,1.225,85,1.383,86,1.4,92,1.097,98,4.236,102,0.376,103,2.132,105,0.466,117,1.466,118,0.174,120,2.052,121,0.859,137,1.225,149,0.859,150,1.466,151,1.023,152,1.872,153,1.023,154,1.714,155,0.811,156,1.023,157,0.722,158,1.714,159,0.811,160,1.023,161,1.484,162,2.147,163,1.023,164,0.811,165,0.811,166,0.911,167,0.765,168,1.023,169,0.765,170,1.023,171,0.811,172,1.023,173,0.811,174,0.811,175,0.811,176,0.765,177,1.023,178,0.811,179,0.965,180,1.023,181,1.023,182,0.009,183,0.013,184,0.009,199,1.933,217,1.225,283,2.552,293,2.26,335,2.041,336,2.26,337,2.26,338,1.721,339,2.26,429,3.734,500,5.144,501,4.554,502,2.552,503,5.02,504,4.295,505,5.02,506,5.02,507,4.295,508,4.295,509,3.419,510,3.419,511,2.997,512,2.997,513,2.997,514,2.997,515,2.997,516,1.597,517,2.552,518,4.295,519,2.997,520,2.997,521,2.997,522,4.295]],["title/components/CurrentWeatherDetailsContainerComponent.html",[0,0.405,164,0.945]],["body/components/CurrentWeatherDetailsContainerComponent.html",[0,0.626,1,0.925,2,1.275,3,0.238,4,0.172,5,1.167,6,1.167,7,1.167,8,1.167,9,0.123,10,0.17,12,0.98,17,0.98,18,2.404,19,1.299,20,2.268,21,0.873,22,1.167,23,1.608,25,1.608,27,0.336,37,2.338,38,0.966,45,0.731,49,0.873,50,0.568,52,0.022,53,0.784,54,0.278,58,1.403,70,1.135,92,1.725,102,0.591,103,2.338,105,0.532,117,1.608,118,0.198,137,1.396,140,2.872,141,1.586,142,2.128,149,0.98,150,1.608,151,1.167,152,1.983,153,1.167,154,1.84,155,0.925,156,1.167,157,0.823,158,1.84,159,0.925,160,1.167,161,0.925,162,1.038,163,1.167,164,1.572,165,0.925,166,1.431,167,0.873,168,1.167,169,0.873,170,1.167,171,0.925,172,1.167,173,0.925,174,0.925,175,0.925,176,0.873,177,1.167,178,0.925,179,1.1,180,1.167,181,1.167,182,0.011,183,0.015,184,0.011,349,2.327,351,4.064,352,3.552,412,2.577,509,2.327,516,1.821,523,3.552,524,3.208,525,3.208,526,3.208,527,2.872,528,3.417,529,2.327,530,2.577,531,2.128,532,2.91,533,3.417]],["title/components/CurrentWeatherSummaryContainerComponent.html",[0,0.405,165,0.945]],["body/components/CurrentWeatherSummaryContainerComponent.html",[0,0.569,1,0.777,2,1.127,3,0.21,4,0.145,5,0.98,6,0.98,7,0.98,8,0.98,9,0.104,10,0.177,12,0.824,17,0.824,18,2.347,19,1.285,20,2.214,21,0.733,22,1.422,23,1.422,25,1.422,27,0.282,28,0.693,30,1.673,31,3.887,37,2.068,38,0.815,45,0.891,49,0.733,50,0.478,52,0.023,53,0.693,54,0.234,58,0.838,70,1.003,85,0.925,86,0.733,88,1.422,89,2.837,91,2.219,92,1.703,93,2.392,102,0.615,103,2.068,105,0.447,117,1.422,118,0.166,137,1.174,140,2.611,141,1.333,142,1.789,149,0.824,150,1.422,151,0.98,152,1.835,153,0.98,154,1.673,155,0.777,156,0.98,157,0.692,158,1.673,159,0.777,160,0.98,161,0.777,162,0.873,163,0.98,164,0.777,165,1.455,166,2.076,167,0.733,168,0.98,169,0.733,170,0.98,171,0.777,172,0.98,173,0.777,174,0.777,175,0.777,176,0.733,177,0.98,178,0.777,179,0.925,180,0.98,181,0.98,182,0.009,183,0.013,184,0.009,217,1.702,338,1.649,347,3.548,349,1.956,351,3.696,352,3.141,379,1.426,412,2.165,457,2.165,459,2.165,460,2.165,461,2.165,462,1.789,465,2.446,468,2.446,469,3.548,473,2.837,474,1.956,477,1.789,509,1.956,516,1.53,523,3.696,524,3.338,525,2.837,526,2.837,527,2.611,529,1.956,530,2.165,531,1.789,532,2.446,534,2.872,535,2.872,536,4.165,537,4.579,538,4.579,539,4.165,540,4.165,541,4.165,542,4.165,543,4.901,544,5.376,545,3.141,546,2.872,547,2.872,548,2.872,549,2.446,550,2.872,551,2.872,552,1.956,553,2.446]],["title/components/DashboardComponent.html",[0,0.405,167,0.891]],["body/components/DashboardComponent.html",[0,0.582,1,0.808,2,1.159,3,0.216,4,0.151,5,1.019,6,1.019,7,1.019,8,1.019,9,0.108,10,0.209,12,0.856,15,1.646,17,0.856,18,2.36,19,1.239,20,2.226,21,1.279,22,1.019,23,1.462,25,1.462,27,0.492,28,0.712,30,1.71,33,1.228,38,0.833,41,1.147,43,1.219,45,1.17,47,2.125,48,1.981,49,0.762,50,0.833,51,0.808,52,0.023,53,0.833,54,0.408,55,0.808,56,0.464,57,2.125,58,0.861,61,1.522,70,1.031,71,0.762,77,2.032,78,1.75,85,0.961,86,0.762,92,1.093,102,0.687,105,0.464,108,1.713,109,1.481,110,1.713,117,1.462,118,0.173,119,0.907,120,2.047,121,0.856,126,1.298,136,1.713,141,1.987,142,1.858,149,0.856,150,1.462,151,1.019,152,1.868,153,1.019,154,1.71,155,0.808,156,1.019,157,1.206,158,1.71,159,0.808,160,1.019,161,0.808,162,0.907,163,1.019,164,0.808,165,0.808,166,0.907,167,1.397,168,1.019,169,0.762,170,1.019,171,0.808,172,1.019,173,0.808,174,0.808,175,0.808,176,0.762,177,1.019,178,0.808,179,0.961,180,1.019,181,1.019,182,0.009,183,0.013,184,0.009,189,2.459,194,1.925,219,1.858,241,3.084,270,2.032,285,2.368,350,3.41,354,3.726,360,3.119,377,1.481,379,1.481,381,1.481,407,2.541,415,2.032,493,2.032,495,2.032,549,2.541,552,2.032,554,2.541,555,5.007,556,5.007,557,4.281,558,5.007,559,4.281,560,2.983,561,2.983,562,2.983,563,2.983,564,2.541,565,2.541,566,2.983,567,2.983,568,2.983,569,2.983,570,2.983,571,2.983,572,2.983,573,2.983,574,2.983,575,2.983]],["title/injectables/DataStoreService.html",[239,1.732,576,1.518]],["body/injectables/DataStoreService.html",[3,0.136,4,0.136,9,0.097,10,0.232,27,0.264,28,0.66,30,2.307,33,1.138,38,1.164,41,1.813,45,1.348,48,1.437,50,0.784,51,1.41,52,0.023,53,0.866,54,0.474,55,1.41,56,0.734,58,0.798,61,2.119,66,2.585,71,1.577,72,2.052,78,2.376,85,0.865,86,0.686,88,1.61,102,0.592,105,0.418,107,1.098,118,0.156,119,1.433,120,2.62,121,1.494,125,2.702,169,1.013,182,0.008,183,0.012,184,0.008,198,1.276,211,1.431,219,1.673,239,2.585,265,1.83,274,3.682,285,2.27,307,1.431,310,3.547,359,2.026,360,3.243,362,2.026,368,2.702,370,2.991,377,1.334,409,2.278,413,3.379,422,3.96,429,2.702,576,1.726,577,1.673,578,5.46,579,2.288,580,4.017,581,4.716,582,3.967,583,5.208,584,5.208,585,3.967,586,3.967,587,3.967,588,3.967,589,3.967,590,2.687,591,2.687,592,2.687,593,3.967,594,3.967,595,3.967,596,2.687,597,2.991,598,3.967,599,2.687,600,3.967,601,3.967,602,3.967,603,2.687,604,3.967,605,5.208,606,2.687,607,1.673,608,1.83,609,2.687,610,2.687,611,3.379,612,2.687,613,2.687,614,2.687,615,3.967,616,3.967,617,2.687,618,3.967,619,2.687,620,2.687,621,2.687]],["title/components/FavoritePlacesComponent.html",[0,0.405,49,0.891]],["body/components/FavoritePlacesComponent.html",[0,0.55,1,0.733,2,1.08,3,0.201,4,0.137,5,0.925,6,0.925,7,0.925,8,0.925,9,0.098,10,0.211,12,0.777,15,1.534,17,0.777,18,2.326,19,1.229,20,2.194,21,0.692,22,0.925,23,1.362,25,1.362,27,0.266,28,0.664,30,2.156,33,1.145,38,1.051,41,1.041,43,1.107,45,1.192,47,1.981,48,1.893,49,1.489,50,0.788,51,1.08,52,0.023,53,0.87,54,0.454,55,1.08,56,0.621,57,1.981,58,0.803,61,1.832,70,0.961,71,1.019,72,1.178,78,2.137,85,1.285,86,1.019,92,1.019,102,0.732,105,0.421,107,1.107,108,1.555,109,1.345,110,1.555,117,1.362,118,0.157,119,1.213,126,1.178,140,2.524,141,1.257,142,1.687,144,2.042,145,2.307,146,2.042,149,0.777,150,1.362,151,0.925,152,1.785,153,0.925,154,1.618,155,0.733,156,0.925,157,0.652,158,1.618,159,0.733,160,0.925,161,0.733,162,0.823,163,0.925,164,0.733,165,0.733,166,0.823,167,0.692,168,0.925,169,1.7,170,0.925,171,0.733,172,0.925,173,0.733,174,0.733,175,0.733,176,0.692,177,0.925,178,0.733,179,1.285,180,0.925,181,0.925,182,0.008,183,0.012,184,0.008,198,1.08,239,2.993,273,1.845,274,1.555,275,1.845,281,3.971,285,1.937,310,1.845,350,3.227,354,3.561,355,3.399,366,3.399,368,2.718,369,3.561,370,3.009,372,1.736,376,2.042,377,1.345,381,1.345,394,2.307,580,4.036,611,2.307,622,4.966,623,2.307,624,4.738,625,3.991,626,4.738,627,2.708,628,3.991,629,2.718,630,2.708,631,2.708,632,2.708,633,2.042,634,2.708,635,2.708]],["title/injectables/GooglePlacesService.html",[240,2.004,576,1.518]],["body/injectables/GooglePlacesService.html",[3,0.182,4,0.182,9,0.13,10,0.2,27,0.355,30,1.893,33,1.402,38,0.813,41,1.387,43,1.998,45,1.045,48,1.77,50,0.922,51,1.323,52,0.023,53,0.813,54,0.398,55,1.323,56,0.761,58,0.984,61,1.806,66,2.427,68,3.045,69,2.951,70,1.178,71,1.249,72,2.413,88,1.669,102,0.822,105,0.561,107,1.475,118,0.209,119,1.486,121,1.705,182,0.011,183,0.015,184,0.011,211,1.922,240,2.808,259,2.458,277,3.776,285,1.998,317,2.458,363,2.247,364,1.791,375,2.458,377,1.791,381,1.791,409,2.808,510,3.33,531,3.045,576,2.127,577,2.247,607,2.247,608,3.776,636,4.723,637,3.073,638,4.889,639,3.073,640,4.938,641,3.608,642,3.686,643,3.33,644,4.164,645,4.164,646,4.889,647,3.608,648,4.164,649,2.247,650,3.073,651,3.453,652,3.608,653,5.545,654,3.608,655,3.608,656,3.608,657,3.608,658,4.889,659,3.608,660,4.889,661,3.608,662,3.608,663,3.608]],["title/components/HeaderComponent.html",[0,0.405,171,0.945]],["body/components/HeaderComponent.html",[0,0.597,1,0.845,2,1.197,3,0.223,4,0.158,5,1.066,6,1.066,7,1.066,8,1.066,9,0.113,10,0.16,12,0.896,17,0.896,18,2.375,19,1.26,20,2.27,21,0.798,22,1.066,23,1.51,25,1.51,38,0.854,41,1.201,44,4.131,45,0.668,48,2.023,49,0.798,50,0.854,51,0.845,52,0.023,53,0.854,54,0.254,55,0.845,56,0.486,58,0.89,60,2.357,70,1.065,88,1.51,92,1.13,102,0.701,105,0.486,106,1.551,117,1.51,118,0.181,119,1.561,120,1.808,136,1.794,137,1.276,138,1.551,147,3.013,148,2.127,149,0.896,150,1.51,151,1.066,152,1.907,153,1.066,154,1.753,155,0.845,156,1.066,157,0.752,158,1.753,159,0.845,160,1.066,161,0.845,162,0.949,163,1.066,164,0.845,165,0.845,166,0.949,167,0.798,168,1.066,169,1.312,170,1.066,171,1.657,172,1.066,173,0.845,174,0.845,175,0.845,176,0.798,177,1.066,178,0.845,179,1.006,180,1.066,181,1.066,182,0.01,183,0.014,184,0.01,215,2.127,217,1.276,253,2.355,254,2.127,310,3.013,378,2.66,379,2.196,381,1.551,409,2.54,470,2.66,471,2.66,510,3.013,516,1.664,664,2.66,665,5.586,666,5.136,667,4.423,668,3.123,669,6.295,670,6.432,671,3.123,672,3.768,673,4.423,674,4.423,675,4.423,676,2.66,677,3.123,678,3.123,679,4.423,680,4.423,681,4.423,682,3.123,683,3.123]],["title/interfaces/IAirPollution.html",[111,2.004,324,0.543]],["body/interfaces/IAirPollution.html",[2,1.32,3,0.246,4,0.246,9,0.176,10,0.176,12,1.399,21,1.516,27,0.479,28,0.987,52,0.023,54,0.397,56,0.759,83,4.146,111,3.408,115,2.754,118,0.344,182,0.015,183,0.018,184,0.015,189,2.801,198,1.32,199,2.134,216,3.677,324,1.036,326,1.665,422,4.533,684,3.677,685,4.153,686,4.153,687,4.153,688,4.153,689,4.153,690,4.153]],["title/interfaces/IAirQuality.html",[83,2.173,324,0.543]],["body/interfaces/IAirQuality.html",[2,1.787,3,0.24,4,0.24,9,0.172,10,0.172,21,1.493,27,0.468,28,0.973,52,0.023,54,0.562,56,0.741,83,3.942,111,2.734,115,2.714,118,0.339,182,0.015,183,0.018,184,0.015,189,3.358,199,2.123,216,4.978,324,1.027,326,1.625,422,3.242,633,4.978,684,3.589,685,4.054,686,4.054,687,4.054,688,4.054,689,4.054,690,4.054]],["title/interfaces/IChart.html",[324,0.543,691,2.173]],["body/interfaces/IChart.html",[3,0.232,4,0.232,9,0.166,10,0.166,27,0.452,28,0.952,52,0.023,53,1.154,54,0.466,56,0.715,86,1.174,118,0.331,176,1.174,182,0.014,183,0.018,184,0.014,194,1.767,198,1.851,199,1.981,221,3.13,324,1.015,326,1.569,369,3.897,380,3.897,691,3.564,692,2.862,693,3.465,694,4.698,695,5.058,696,4.873,697,4.061,698,4.873,699,4.873,700,3.914]],["title/interfaces/ICoordinate.html",[324,0.543,701,2.377]],["body/interfaces/ICoordinate.html",[3,0.251,4,0.251,9,0.18,10,0.18,15,1.912,27,0.489,28,0.999,38,1.115,52,0.023,54,0.489,56,0.774,118,0.288,182,0.015,183,0.019,184,0.015,199,2.118,324,0.934,326,1.698,701,4.09,702,4.236,703,4.236,704,4.973,705,4.236,706,5.707,707,5.707,708,5.115,709,5.115]],["title/interfaces/IGooglePlace.html",[324,0.543,651,2.173]],["body/interfaces/IGooglePlace.html",[3,0.244,4,0.244,9,0.174,10,0.174,27,0.475,28,0.981,38,0.803,52,0.023,54,0.54,56,0.751,91,2.573,101,4.518,115,2.738,118,0.28,137,1.974,182,0.015,183,0.018,184,0.015,194,2.268,199,2.068,217,1.974,285,1.974,324,1.032,326,1.649,363,3.674,364,2.929,633,4.448,651,3.674,710,3.641,711,5.65,712,4.113,713,4.018,714,4.113,715,4.113]],["title/interfaces/IOpenWeatherReport.html",[324,0.543,372,1.518]],["body/interfaces/IOpenWeatherReport.html",[3,0.223,4,0.223,9,0.159,10,0.159,19,1.141,27,0.434,28,0.928,52,0.023,54,0.523,56,0.687,69,3.19,92,1.729,102,0.554,115,2.589,118,0.256,176,1.729,182,0.014,183,0.017,184,0.014,194,2.603,198,1.832,324,0.952,326,1.507,364,2.769,372,2.427,527,3.705,706,5.473,707,5.473,708,4.751,709,4.751,716,3.759,717,4.751,718,4.751]],["title/interfaces/IPhoto.html",[324,0.543,713,2.377]],["body/interfaces/IPhoto.html",[3,0.236,4,0.236,9,0.169,10,0.169,27,0.46,28,0.963,52,0.023,54,0.535,56,0.728,91,3.084,101,3.189,115,2.687,118,0.271,137,2.682,182,0.015,183,0.018,184,0.015,194,2.641,199,2.116,217,2.682,285,2.366,324,1.021,326,1.598,363,3.605,364,2.873,651,2.916,710,3.53,711,3.988,712,3.988,713,4.279,714,5.59,715,5.59]],["title/interfaces/IPlace.html",[61,1.06,324,0.543]],["body/interfaces/IPlace.html",[3,0.2,4,0.2,9,0.143,10,0.143,27,0.389,28,0.865,52,0.023,53,1.094,54,0.546,56,0.616,61,1.58,66,2.582,69,2.582,70,1.696,92,1.328,102,0.497,118,0.229,162,1.998,169,1.328,182,0.012,183,0.016,184,0.012,194,2.233,199,2.14,324,0.904,326,1.351,597,4.379,629,4.632,648,4.429,701,4.363,703,4.429,705,4.429,719,3.372,720,5.201,721,6.168,722,4.651,723,6.168,724,6.168,725,6.168,726,3.921,727,5.201,728,5.201]],["title/interfaces/IPlaceCard.html",[324,0.543,729,2.631]],["body/interfaces/IPlaceCard.html",[3,0.25,4,0.25,9,0.179,10,0.179,19,1.063,27,0.486,28,0.996,38,1.158,52,0.023,54,0.488,56,0.77,61,2.082,102,0.752,118,0.287,182,0.015,183,0.019,184,0.015,324,1.002,326,1.689,353,5.044,372,2.981,729,4.515,730,4.215,731,5.988]],["title/interfaces/ISeries.html",[324,0.543,697,2.173]],["body/interfaces/ISeries.html",[3,0.231,4,0.231,9,0.165,10,0.165,27,0.45,28,0.949,52,0.023,53,1.136,54,0.465,56,0.712,86,1.663,118,0.33,176,1.168,182,0.014,183,0.018,184,0.014,194,2.391,198,1.875,199,1.978,221,3.886,324,1.013,326,1.562,369,3.116,380,3.116,691,2.849,692,2.849,693,3.45,694,3.45,695,4.688,696,3.896,697,3.872,698,5.544,699,5.544,700,4.859]],["title/interfaces/IWeatherDetail.html",[324,0.543,527,1.859]],["body/interfaces/IWeatherDetail.html",[3,0.177,4,0.177,9,0.127,10,0.127,19,1.227,21,1.226,27,0.345,28,0.799,38,0.799,52,0.023,54,0.547,56,0.547,66,3.287,67,2.99,69,2.383,92,1.226,93,2.757,102,0.441,118,0.203,182,0.011,183,0.015,184,0.011,194,2.78,198,1.591,200,4.089,293,3.62,324,0.851,326,1.199,335,3.27,336,3.62,337,3.62,338,2.757,339,3.62,380,3.27,517,4.089,527,2.558,545,3.62,732,2.992,733,5.878,734,5.878,735,5.878,736,5.878,737,5.878,738,6.353,739,5.878,740,6.353,741,4.801,742,5.878,743,4.801,744,4.801,745,4.801,746,4.801,747,4.801,748,4.801,749,4.801,750,4.801,751,4.801,752,4.801,753,4.191]],["title/interfaces/IWeatherSummary.html",[324,0.543,753,2.377]],["body/interfaces/IWeatherSummary.html",[3,0.239,4,0.239,9,0.171,10,0.171,19,1.222,27,0.465,28,0.968,52,0.023,54,0.514,56,1.086,59,2.714,118,0.274,182,0.015,183,0.018,184,0.015,194,2.426,199,2.092,324,0.906,326,1.614,364,2.346,379,2.89,516,3.669,722,4.965,726,4.39,753,3.965,754,4.025,755,4.726,756,5.822,757,4.958]],["title/components/InfoCardComponent.html",[0,0.405,173,0.945]],["body/components/InfoCardComponent.html",[0,0.616,1,0.896,2,1.247,3,0.335,4,0.167,5,1.13,6,1.13,7,1.13,8,1.13,9,0.12,10,0.207,12,0.949,14,2.061,17,0.949,18,2.394,19,1.255,20,2.258,21,0.845,22,1.956,23,1.573,24,3.609,25,1.573,26,3.138,27,0.325,37,2.287,38,0.882,45,1.133,47,1.643,49,0.845,50,0.551,52,0.023,53,0.766,58,0.927,70,1.11,85,1.707,86,1.714,92,1.177,102,0.578,103,2.845,105,0.515,117,1.573,118,0.192,149,0.949,150,1.573,151,1.13,152,1.956,153,1.13,154,1.809,155,0.896,156,1.13,157,0.797,158,1.809,159,0.896,160,1.13,161,0.896,162,1.006,163,1.13,164,0.896,165,0.896,166,1.006,167,0.845,168,1.13,169,0.845,170,1.13,171,0.896,172,1.13,173,1.551,174,0.896,175,0.896,176,0.845,177,1.13,178,0.896,179,1.066,180,1.13,181,1.13,182,0.01,183,0.014,184,0.01,360,2.061,457,2.495,458,3.924,459,2.495,460,2.495,461,2.495,477,2.869,487,4.514,525,3.138,526,3.138,529,2.254,758,4.881,759,4.321,760,6.399,761,4.607,762,2.819,763,3.309,764,3.309,765,3.309,766,3.309,767,3.309]],["title/injectables/OpenWeatherService.html",[43,1.426,576,1.518]],["body/injectables/OpenWeatherService.html",[3,0.147,4,0.147,9,0.106,10,0.223,19,1.143,27,0.287,28,0.702,30,2.044,33,1.21,41,1.124,43,2.215,45,1.281,48,1.528,50,0.823,51,1.34,52,0.023,53,0.823,54,0.403,55,1.34,56,0.77,58,1.272,61,1.876,66,2.691,67,3.936,68,3.375,69,3.137,70,1.522,71,1.384,72,2.501,73,4.087,85,1.594,86,1.264,88,1.44,92,0.746,102,0.775,105,0.455,107,1.194,109,3.065,111,1.678,118,0.169,119,1.504,120,2.631,121,1.21,182,0.009,183,0.013,184,0.009,198,1.142,211,1.557,259,1.99,307,2.247,364,2.691,372,1.271,376,2.203,377,1.451,381,1.451,409,2.423,441,3.593,576,1.835,577,1.82,607,1.82,608,1.99,639,2.489,640,4.655,642,3.181,643,2.873,644,3.593,645,3.593,649,1.82,650,2.489,717,2.489,768,5.258,769,2.489,770,4.95,771,4.95,772,4.95,773,4.218,774,4.218,775,4.218,776,4.218,777,4.218,778,2.922,779,4.218,780,2.922,781,5.988,782,4.218,783,4.218,784,2.922,785,4.218,786,2.922,787,2.922,788,2.922,789,2.922,790,2.489,791,2.922,792,2.203,793,4.218,794,2.922,795,2.922,796,2.922,797,4.218,798,2.922,799,2.922,800,4.218,801,2.922,802,2.922]],["title/components/PlaceCardComponent.html",[0,0.405,174,0.945]],["body/components/PlaceCardComponent.html",[0,0.56,1,0.756,2,1.104,3,0.206,4,0.141,5,0.953,6,0.953,7,0.953,8,0.953,9,0.101,10,0.213,12,0.801,14,1.739,17,0.801,18,2.337,19,1.244,20,2.204,21,0.713,22,1.927,23,1.393,24,3.284,25,1.393,26,2.779,27,0.274,28,0.679,30,1.646,31,3.284,33,1.17,37,2.026,38,1.156,39,3.077,40,3.636,45,1.207,46,2.378,49,0.713,50,0.464,52,0.023,53,0.679,54,0.393,58,0.821,61,1.465,63,4,70,0.983,71,0.713,78,1.668,85,0.899,86,0.713,88,1.646,89,2.779,91,2.174,92,1.355,93,2.343,97,2.378,102,0.605,103,2.394,104,3.077,105,0.434,113,1.901,114,2.105,115,1.296,116,1.901,117,1.646,118,0.162,121,0.801,135,3.077,136,1.603,137,1.668,138,2.026,147,1.901,148,1.901,149,0.801,150,1.393,151,0.953,152,1.811,153,0.953,154,1.646,155,0.756,156,0.953,157,0.672,158,1.646,159,0.756,160,0.953,161,0.756,162,0.848,163,0.953,164,0.756,165,0.756,166,0.848,167,0.713,168,0.953,169,1.441,170,0.953,171,0.756,172,0.953,173,0.756,174,1.436,175,0.756,176,0.713,177,0.953,178,0.756,179,0.899,180,0.953,181,0.953,182,0.009,183,0.013,184,0.009,217,1.971,338,1.603,372,2.098,379,1.386,383,2.105,405,2.105,415,1.901,423,1.603,462,2.541,473,1.901,474,1.901,477,1.739,478,1.901,479,2.105,490,1.901,493,1.901,495,1.901,516,1.487,525,2.779,526,2.779,529,1.901,531,2.541,552,1.901,629,2.779,692,3.671,762,2.378,803,4.444,804,4.518,805,2.378,806,2.378,807,3.475,808,2.105,809,2.378,810,3.475,811,2.378,812,2.378,813,4.107,814,1.901,815,2.378,816,2.378,817,2.378,818,2.378,819,2.378,820,2.378,821,2.792]],["title/components/PlaceHourlyForecastComponent.html",[0,0.405,175,0.945]],["body/components/PlaceHourlyForecastComponent.html",[0,0.509,1,0.643,2,0.979,3,0.182,4,0.12,5,0.81,6,0.81,7,0.81,8,0.81,9,0.086,10,0.22,12,0.681,15,1.39,16,3.301,17,0.681,18,2.275,19,1.233,20,2.146,21,0.606,22,0.81,23,1.234,25,1.234,27,0.233,28,0.601,30,1.495,33,1.037,36,2.726,37,1.795,38,1.1,45,1.272,49,0.606,50,0.395,51,0.979,52,0.023,53,0.923,54,0.485,55,0.979,56,0.369,58,0.727,61,1.331,70,0.871,71,1.118,78,1.477,79,2.726,80,3.691,82,1.79,85,1.576,86,1.345,88,0.81,92,0.923,93,2.076,95,2.462,102,0.661,103,2.174,105,0.369,113,1.617,117,1.234,118,0.137,119,0.721,121,1.037,126,1.033,136,1.363,137,1.789,138,1.795,140,1.265,141,1.102,149,0.681,150,1.234,151,0.81,152,1.671,153,0.81,154,1.495,155,0.643,156,0.81,157,0.572,158,1.495,159,0.643,160,0.81,161,0.643,162,0.721,163,0.81,164,0.643,165,0.643,166,0.721,167,0.606,168,0.81,169,0.606,170,0.81,171,0.643,172,0.81,173,0.643,174,0.643,175,1.325,176,1.808,177,0.81,178,0.643,179,0.764,180,0.81,181,0.81,182,0.007,183,0.011,184,0.007,198,1.325,199,1.099,217,1.477,307,1.265,322,2.726,353,2.726,372,2.415,414,3.079,462,1.478,463,2.022,527,1.926,530,1.79,538,3.079,545,2.726,691,3.457,692,3.795,694,3.691,695,3.301,697,2.252,718,4.727,757,3.729,808,1.79,822,4.595,823,2.022,824,4.378,825,3.615,826,4.378,827,4.378,828,4.378,829,4.378,830,3.615,831,2.374,832,2.374,833,3.615,834,2.374,835,3.079,836,3.301,837,2.374,838,2.022,839,3.615,840,3.615,841,2.374,842,2.374,843,2.374,844,2.374,845,2.022,846,3.079,847,2.374,848,2.374,849,2.374,850,2.374,851,2.374,852,2.374,853,2.374,854,2.374,855,2.374,856,2.374,857,2.374,858,3.615,859,2.374,860,2.374,861,2.374]],["title/injectables/PlacesService.html",[241,1.732,576,1.518]],["body/injectables/PlacesService.html",[3,0.153,4,0.153,9,0.109,10,0.225,27,0.297,28,0.719,30,2.299,33,1.24,38,1.061,41,1.163,45,1.295,48,1.566,50,0.839,51,1.366,52,0.023,53,1.037,54,0.448,55,1.366,56,0.785,57,2.146,58,0.608,61,2.046,70,1.215,71,1.629,72,1.316,85,0.974,86,0.772,88,1.476,102,0.731,105,0.471,107,1.236,118,0.175,119,1.895,120,2.062,121,1.67,130,1.737,182,0.009,183,0.013,184,0.009,194,1.94,198,1.17,199,1.533,211,1.611,241,2.733,259,2.06,285,2.796,307,1.611,317,2.06,375,2.06,377,1.501,381,1.501,409,2.483,423,1.737,424,2.28,565,3.682,576,1.881,577,1.883,607,1.883,608,2.06,640,4.151,642,3.26,643,2.944,722,4.391,792,2.28,862,2.576,863,5.505,864,5.505,865,4.323,866,4.323,867,3.024,868,4.323,869,5.824,870,3.024,871,6.058,872,3.024,873,4.689,874,4.323,875,4.323,876,3.024,877,5.505,878,5.505,879,4.323,880,3.024,881,4.323,882,3.024,883,3.024,884,3.024,885,3.024,886,3.024,887,3.024]],["title/pipes/RoundoffPipe.html",[185,1.732,888,2.173]],["body/pipes/RoundoffPipe.html",[3,0.243,4,0.243,9,0.174,10,0.213,15,1.848,17,1.378,33,1.378,45,1.028,50,0.799,51,1.301,52,0.023,53,1.057,54,0.392,55,1.301,71,1.227,86,1.502,102,0.603,105,0.748,118,0.278,121,1.687,126,2.091,182,0.015,183,0.018,184,0.015,185,2.92,187,3.273,192,3.624,193,4.435,194,2.612,208,4.435,537,5.01,643,3.273,888,3.663,889,4.093,890,4.806,891,4.806,892,4.806,893,4.806,894,4.806,895,4.806]],["title/modules/SharedModule.html",[223,1.859,238,2.173]],["body/modules/SharedModule.html",[1,1.793,2,0.752,3,0.205,4,0.14,9,0.1,10,0.1,12,1.167,13,2.096,19,0.94,21,0.71,38,0.881,50,0.462,52,0.023,58,0.819,92,1.039,102,0.887,105,0.433,116,1.893,118,0.161,149,0.797,161,1.793,162,0.845,164,1.593,165,1.593,166,1.236,173,1.593,174,1.793,175,1.793,176,1.039,178,1.793,179,0.895,182,0.009,183,0.013,184,0.009,186,3.665,189,1.597,215,1.893,223,1.481,225,2.563,226,1.597,227,2.996,228,2.096,229,2.096,230,3.276,238,4.471,242,3.067,243,2.096,244,2.096,246,1.893,247,1.893,248,1.731,249,1.893,250,2.77,265,1.893,280,3.067,299,3.067,300,1.893,320,2.096,322,3.067,435,2.368,501,2.096,524,2.77,676,2.368,759,2.096,803,2.096,822,2.096,836,2.096,888,3.665,896,2.368,897,2.368,898,2.368,899,3.665,900,2.78,901,4.811,902,2.78,903,4.811,904,2.78,905,4.811,906,4.811,907,2.368,908,2.368,909,4.811,910,2.78,911,4.811,912,2.78,913,2.78,914,4.811,915,2.78,916,4.811,917,2.78,918,4.811,919,2.78,920,2.78,921,4.068,922,2.78,923,2.78,924,2.78,925,2.368,926,4.068,927,2.368,928,5.294,929,2.78,930,2.78,931,2.78,932,2.78,933,2.78,934,2.096,935,2.78,936,2.78]],["title/components/SmartPlaceCardComponent.html",[0,0.405,178,0.945]],["body/components/SmartPlaceCardComponent.html",[0,0.44,1,0.512,2,0.82,3,0.153,4,0.096,5,0.646,6,0.646,7,0.646,8,0.646,9,0.068,10,0.215,12,0.543,14,1.179,15,1.165,16,2.855,17,0.543,18,2.178,19,1.242,20,2.055,21,0.483,22,1.616,23,1.034,24,2.579,25,1.034,26,2.063,27,0.186,28,0.504,30,2.156,31,2.579,32,3.225,33,0.869,35,2.58,36,2.284,37,1.504,38,1.183,39,2.284,40,2.855,41,1.165,42,1.612,43,2.167,44,3.63,45,1.246,47,1.504,48,1.829,49,0.967,50,0.63,51,1.171,52,0.023,53,0.84,54,0.432,55,1.171,56,0.589,57,1.504,58,1.256,59,1.74,60,1.614,61,1.727,63,3.263,66,1.504,67,2.695,68,2.695,69,2.149,70,1.042,71,1.209,72,1.648,73,2.284,74,2.58,76,3.263,77,2.063,78,2.064,79,2.284,80,3.263,82,1.427,84,4.032,85,1.219,86,0.967,88,1.293,89,2.063,91,1.614,92,1.105,93,1.74,94,2.58,95,2.063,96,2.948,98,2.063,99,2.284,100,3.686,101,2.063,102,0.634,103,1.504,104,2.284,105,0.294,106,0.94,107,0.773,108,1.087,109,0.94,110,1.087,113,1.289,114,1.427,115,0.878,116,1.289,117,1.293,118,0.11,119,1.315,120,1.238,121,0.869,123,1.427,124,1.427,125,1.289,126,0.823,127,1.612,128,1.612,129,3.225,130,1.087,134,1.612,135,2.284,136,1.087,137,1.548,138,1.88,147,2.063,148,1.289,149,0.543,150,1.034,151,0.646,152,1.478,153,0.646,154,1.293,155,0.512,156,0.646,157,0.456,158,1.293,159,0.512,160,0.646,161,0.512,162,0.575,163,0.646,164,0.512,165,0.512,166,0.575,167,0.483,168,0.646,169,1.209,170,0.646,171,0.512,172,0.646,173,0.512,174,0.512,175,0.512,176,0.483,177,0.646,178,1.171,179,1.774,180,0.646,181,0.646,182,0.006,183,0.009,184,0.006,217,1.548,286,2.58,338,1.087,372,1.883,379,0.94,383,1.427,405,1.427,415,1.289,423,1.087,462,1.886,473,1.289,474,1.289,477,1.179,478,1.289,479,1.427,490,1.289,493,1.289,495,1.289,531,1.886,552,1.289,629,2.063,804,3.686,805,1.612,806,1.612,807,2.58,808,1.427,809,1.612,810,2.58,811,1.612,812,1.612,813,3.225,814,1.289,815,1.612,816,1.612,817,1.612,818,1.612,819,1.612,820,1.612,934,4.488,937,5.07,938,3.029,939,3.029,940,3.029,941,1.893,942,1.893,943,1.893,944,1.893,945,1.893,946,1.893,947,1.893,948,1.893,949,3.029]],["title/guards/ValidateDataForPlaceNavigationGuard.html",[303,2.377,950,2.631]],["body/guards/ValidateDataForPlaceNavigationGuard.html",[3,0.203,4,0.203,9,0.145,10,0.211,15,1.543,27,0.395,33,1.505,38,1.032,41,1.543,44,4.296,45,1.122,47,2.606,48,2.246,50,0.973,51,1.421,52,0.023,53,0.873,54,0.428,55,1.421,56,0.625,58,0.808,60,2.796,71,1.025,72,2.544,96,2.734,102,0.734,105,0.625,106,1.993,107,1.641,118,0.232,119,1.22,121,1.505,126,1.747,130,2.305,157,1.264,182,0.012,183,0.016,184,0.012,198,1.583,211,2.139,303,3.575,305,4.409,308,3.419,312,5.481,321,3.957,381,1.993,576,2.284,597,3.957,607,2.5,814,2.734,873,4.47,951,4.014,952,4.981,953,3.419,954,4.014,955,4.014,956,4.014,957,6.202,958,4.014,959,5.848,960,4.014,961,4.014,962,4.014,963,4.014,964,4.014]],["title/pipes/WeatherIconPipe.html",[185,1.732,899,2.173]],["body/pipes/WeatherIconPipe.html",[3,0.237,4,0.237,9,0.17,10,0.21,15,1.809,17,1.349,19,0.835,33,1.349,45,1.006,50,0.783,51,1.273,52,0.023,53,1.047,54,0.383,55,1.273,56,0.732,59,2.702,71,1.201,86,1.679,102,0.591,105,0.732,118,0.272,119,1.43,121,1.349,126,2.047,182,0.015,183,0.018,184,0.015,185,2.882,187,3.204,192,3.547,193,4.377,199,1.43,208,4.377,510,3.204,516,3.093,899,3.615,965,4.944,966,4.007,967,5.805,968,6.753,969,4.704,970,5.805,971,4.704,972,4.704,973,4.704]],["title/coverage.html",[974,4.07]],["body/coverage.html",[0,0.791,1,0.794,9,0.106,10,0.263,11,2.5,12,1.214,13,2.213,14,3.382,19,1.065,38,0.825,43,1.2,49,0.75,52,0.023,54,0.239,58,1.093,61,0.892,83,1.828,88,1.002,109,1.457,111,1.686,138,3.069,155,0.794,157,0.707,159,0.794,161,0.794,164,0.794,165,0.794,166,1.286,167,0.75,171,0.794,173,0.794,174,0.794,175,0.794,176,1.387,178,0.794,182,0.009,183,0.013,184,0.009,185,2.463,186,1.828,188,2.5,189,1.686,190,2.5,198,0.794,210,2.5,219,4.075,239,1.457,240,1.686,241,1.457,271,2.213,274,1.686,277,1.999,279,1.999,281,1.999,303,1.999,305,2.213,324,1.051,325,2.213,327,2.5,348,3.191,349,3.379,372,1.277,396,2.5,500,2.5,501,2.213,502,2.5,523,3.191,524,2.882,527,1.564,553,4.226,554,2.5,576,2.363,578,2.5,579,2.5,622,2.5,623,2.5,636,2.5,637,2.5,649,2.635,651,1.828,664,2.5,684,3.191,691,1.828,692,3.382,693,3.191,697,1.828,701,1.999,702,2.5,710,3.191,713,1.999,716,2.5,719,2.5,726,2.213,729,2.213,730,2.5,732,2.5,753,1.999,754,2.5,758,2.5,759,2.213,768,2.5,769,2.5,803,2.213,822,2.213,823,2.5,862,2.5,888,1.828,889,2.5,899,1.828,934,2.213,937,2.5,950,2.213,952,2.5,953,2.5,965,2.5,966,2.5,974,2.5,975,2.5,976,2.935,977,2.5,978,4.962,979,2.5,980,6.181,981,4.231,982,6.327,983,4.962,984,2.935,985,2.935,986,2.935,987,2.935,988,2.935,989,2.935,990,2.935,991,2.935,992,2.935,993,2.935,994,5.757,995,4.231,996,4.231,997,4.231,998,2.935,999,2.935,1000,2.935,1001,2.935,1002,4.962,1003,2.935,1004,2.935,1005,2.935,1006,2.935,1007,2.935,1008,2.935,1009,2.935,1010,2.935,1011,2.5,1012,2.5,1013,2.935,1014,2.935]],["title/dependencies.html",[226,2.413,1015,2.906]],["body/dependencies.html",[52,0.023,105,0.77,106,2.457,107,2.023,182,0.015,183,0.019,184,0.015,226,2.842,253,4.515,254,4.078,262,3.732,300,3.37,836,3.732,907,4.215,908,4.215,927,4.215,1016,4.949,1017,7.106,1018,4.949,1019,5.988,1020,4.949,1021,4.949,1022,4.949,1023,4.949,1024,4.949,1025,4.215,1026,4.949,1027,4.949,1028,4.949,1029,4.949,1030,4.949,1031,4.949,1032,4.949]],["title/index.html",[27,0.286,1033,2.906,1034,2.906]],["body/index.html",[0,0.66,9,0.137,19,1.076,20,0.814,38,0.841,52,0.017,57,1.254,59,2.902,60,2.692,76,1.905,88,1.848,95,1.721,98,1.721,99,4.082,169,0.645,182,0.008,183,0.012,184,0.008,198,1.231,215,3.441,226,2.177,248,1.574,265,4.015,285,2.065,294,2.152,295,3.228,296,2.152,334,2.152,335,1.721,363,2.832,364,3.135,368,4.129,423,1.451,424,1.905,429,1.721,478,1.721,480,5.462,490,1.721,492,2.152,499,4.304,509,1.721,564,2.152,649,2.36,672,2.152,790,2.152,814,1.721,835,4.304,845,4.841,846,2.152,925,2.152,975,4.841,1025,2.152,1035,3.79,1036,4.548,1037,6.063,1038,4.548,1039,3.79,1040,3.79,1041,2.527,1042,2.527,1043,2.527,1044,2.527,1045,2.527,1046,2.527,1047,5.053,1048,3.79,1049,3.79,1050,2.527,1051,2.527,1052,2.527,1053,6.413,1054,3.79,1055,3.79,1056,2.527,1057,2.527,1058,2.527,1059,2.527,1060,6.92,1061,5.684,1062,2.527,1063,2.527,1064,2.527,1065,4.548,1066,2.527,1067,2.527,1068,2.527,1069,2.527,1070,5.053,1071,3.79,1072,3.79,1073,3.79,1074,5.053,1075,2.527,1076,2.527,1077,2.527,1078,2.527,1079,2.527,1080,2.527,1081,5.895,1082,2.527,1083,2.527,1084,2.527,1085,2.527,1086,2.527,1087,3.79,1088,3.79,1089,3.79,1090,2.527,1091,4.548,1092,2.527,1093,2.527,1094,2.527,1095,2.527,1096,2.527,1097,5.053,1098,2.527,1099,3.79,1100,2.527,1101,2.527,1102,2.527,1103,3.79,1104,5.053,1105,3.79,1106,2.527,1107,2.527,1108,2.527,1109,2.527,1110,2.527,1111,2.527,1112,2.527,1113,2.527,1114,2.527,1115,2.527,1116,2.527,1117,2.527,1118,5.053,1119,3.79,1120,6.201,1121,2.527,1122,2.527,1123,3.79,1124,3.228,1125,2.527,1126,4.548,1127,2.527,1128,3.79,1129,2.527,1130,2.527,1131,2.527,1132,4.548,1133,2.527,1134,2.527,1135,2.527,1136,2.527,1137,2.527,1138,2.527,1139,2.152,1140,3.79,1141,5.684,1142,5.053,1143,3.79,1144,2.527,1145,2.527,1146,3.79,1147,5.684,1148,2.527,1149,2.527,1150,4.548,1151,2.527,1152,2.527,1153,2.527,1154,2.527,1155,2.527,1156,2.527,1157,3.79,1158,2.527,1159,2.527,1160,2.527,1161,4.548,1162,2.527,1163,3.79,1164,5.414,1165,2.527,1166,3.79,1167,2.527,1168,2.527,1169,5.414,1170,2.527,1171,5.053,1172,2.527,1173,2.527,1174,2.527,1175,2.527,1176,2.527,1177,2.527,1178,2.527,1179,2.527,1180,2.527,1181,2.527,1182,2.527,1183,3.79,1184,2.527,1185,2.527,1186,3.79,1187,2.527,1188,2.527,1189,2.527,1190,2.527,1191,2.527,1192,2.527]],["title/modules.html",[225,2.546]],["body/modules.html",[52,0.02,182,0.017,183,0.02,184,0.017,224,3.7,225,2.895,236,3.384,237,3.384,238,3.384,254,4.31,423,3.635,1124,5.39,1193,6.329,1194,6.329,1195,6.897]],["title/overview.html",[1196,4.07]],["body/overview.html",[1,1.76,2,0.951,43,2.235,49,1.501,52,0.023,149,1.008,155,1.76,157,1.317,159,1.48,161,1.76,164,1.48,165,1.48,167,1.397,171,1.48,173,1.48,174,1.76,175,1.76,178,1.76,182,0.011,183,0.015,184,0.011,186,3.406,187,2.393,223,1.872,224,4.976,225,1.872,226,2.018,227,2.188,228,2.649,229,2.649,230,2.393,231,2.992,232,2.992,233,2.992,234,2.992,235,2.992,236,3.406,237,3.406,238,4.545,239,2.715,240,3.141,241,2.715,242,3.62,243,2.649,244,2.649,302,2.393,326,1.199,577,2.188,792,2.649,888,3.406,896,2.992,897,2.992,898,2.992,899,3.406,950,2.649,1196,2.992,1197,4.801,1198,3.513,1199,3.513,1200,3.513,1201,3.513]],["title/routes.html",[302,3.255]],["body/routes.html",[52,0.02,182,0.018,183,0.02,184,0.018,302,3.891]],["title/miscellaneous/variables.html",[1202,2.475,1203,3.579]],["body/miscellaneous/variables.html",[10,0.227,19,1.113,27,0.458,52,0.022,54,0.47,85,2.019,86,1.601,96,3.174,130,2.676,182,0.014,183,0.018,184,0.014,649,4.081,838,4.916,977,3.969,979,4.916,1011,3.969,1012,3.969,1139,4.916,1202,3.969,1203,3.969,1204,4.66,1205,4.66,1206,4.66,1207,5.771,1208,5.771,1209,5.771,1210,5.771,1211,5.771,1212,5.771,1213,5.771,1214,5.771,1215,5.771,1216,5.771,1217,5.771,1218,5.771,1219,5.771,1220,5.771,1221,5.771,1222,5.771,1223,4.66,1224,4.66]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":395,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["0.5rem",{"_index":146,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["0.9",{"_index":766,"title":{},"body":{"components/InfoCardComponent.html":{}}}],["0/1",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":792,"title":{},"body":{"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"overview.html":{}}}],["1/2",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":138,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/HeaderComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["1000).gethours()}:00",{"_index":855,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["11",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["11.0.0",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["11.2.2",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["11.4.0",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1200,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1198,"title":{},"body":{"overview.html":{}}}],["16px",{"_index":484,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["17.0.1",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["1px",{"_index":466,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["1rem",{"_index":142,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["2",{"_index":441,"title":{},"body":{"components/CitySearchComponent.html":{},"injectables/OpenWeatherService.html":{}}}],["2.0.0",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":983,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":861,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["2021",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["230px",{"_index":813,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["24px",{"_index":522,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["25",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["25px",{"_index":472,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["2745912",{"_index":568,"title":{},"body":{"components/DashboardComponent.html":{}}}],["2746301",{"_index":571,"title":{},"body":{"components/DashboardComponent.html":{}}}],["2747891",{"_index":569,"title":{},"body":{"components/DashboardComponent.html":{}}}],["2750053",{"_index":570,"title":{},"body":{"components/DashboardComponent.html":{}}}],["2756253",{"_index":567,"title":{},"body":{"components/DashboardComponent.html":{}}}],["2759793",{"_index":566,"title":{},"body":{"components/DashboardComponent.html":{}}}],["2b2525",{"_index":767,"title":{},"body":{"components/InfoCardComponent.html":{}}}],["2rem",{"_index":549,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{}}}],["3",{"_index":1199,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":858,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["33",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1197,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["48px",{"_index":464,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["4px",{"_index":860,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["5",{"_index":1201,"title":{},"body":{"overview.html":{}}}],["5/10",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":553,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{},"coverage.html":{}}}],["54",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["56px",{"_index":682,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5aa454",{"_index":840,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["5rem",{"_index":533,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{}}}],["6.6.3",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["6/11",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["7).map((weatherdetail",{"_index":853,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["7/10",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1004,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":469,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["_",{"_index":134,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["_country",{"_index":505,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["above",{"_index":1183,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":816,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["access",{"_index":359,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{}}}],["accessors",{"_index":507,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["accounts",{"_index":742,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["activatedroute",{"_index":357,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["activatedroutesnapshot",{"_index":957,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["acts",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["actual_component",{"_index":181,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["add",{"_index":368,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"index.html":{}}}],["added",{"_index":370,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{}}}],["addfavoriteplace",{"_index":582,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["addfavoriteplace(place",{"_index":589,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["adding",{"_index":1160,"title":{},"body":{"index.html":{}}}],["addplacetofavorites",{"_index":40,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["affected",{"_index":1132,"title":{},"body":{"index.html":{}}}],["affected:apps",{"_index":1130,"title":{},"body":{"index.html":{}}}],["affected:e2e",{"_index":1148,"title":{},"body":{"index.html":{}}}],["affected:test",{"_index":1145,"title":{},"body":{"index.html":{}}}],["agnostic",{"_index":1085,"title":{},"body":{"index.html":{}}}],["air",{"_index":21,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IWeatherDetail.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{}}}],["air_pollution",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airpollutionapi",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airpollutioncardcomponent",{"_index":1,"title":{"components/AirPollutionCardComponent.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["airpollutionreport",{"_index":29,"title":{},"body":{"components/AirPollutionCardComponent.html":{}}}],["airpollutionurl",{"_index":770,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["airqualitycode",{"_index":201,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{}}}],["airqualityindex",{"_index":191,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{}}}],["airqualityindexpipe",{"_index":186,"title":{"pipes/AirQualityIndexPipe.html":{}},"body":{"pipes/AirQualityIndexPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["aizasyc1fenfhqqodb4abjhzxdr_ecl2itbsajo",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aizasydz8kvhh1_xdcgrekuhkanr5",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":493,"title":{},"body":{"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["allcities",{"_index":400,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["along",{"_index":532,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["angular",{"_index":60,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"modules/AppModule.html":{},"components/CitySearchComponent.html":{},"components/HeaderComponent.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"index.html":{}}}],["angular/animations",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{}}}],["angular/compiler",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":105,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":907,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"components/CitySearchComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":910,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/badge",{"_index":922,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":902,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":912,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":676,"title":{},"body":{"components/HeaderComponent.html":{},"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":915,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/menu",{"_index":917,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":919,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/theming",{"_index":457,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{}}}],["angular/material/toolbar",{"_index":904,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":106,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/HeaderComponent.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"dependencies.html":{}}}],["anomalies",{"_index":1106,"title":{},"body":{"index.html":{}}}],["api",{"_index":364,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"injectables/GooglePlacesService.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IWeatherSummary.html":{},"injectables/OpenWeatherService.html":{},"index.html":{}}}],["api?input=${city.name",{"_index":661,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["api](https://openweathermap.org",{"_index":789,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["api]{@link",{"_index":793,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["app",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataStoreService.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["app.component",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":155,"title":{"components/AppComponent.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid=${environment.openweatherapikey",{"_index":802,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["application",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["applications",{"_index":1081,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":224,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":892,"title":{},"body":{"pipes/RoundoffPipe.html":{}}}],["approutingmodule",{"_index":236,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["apps/.../app.po.ts",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/live",{"_index":10,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["aqi",{"_index":685,"title":{},"body":{"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{}}}],["architecture",{"_index":1086,"title":{},"body":{"index.html":{}}}],["artifacts",{"_index":1134,"title":{},"body":{"index.html":{}}}],["associated",{"_index":361,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["atmospheric",{"_index":752,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["auto",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{}}}],["autocomplete",{"_index":482,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["automatic",{"_index":1113,"title":{},"body":{"index.html":{}}}],["available",{"_index":423,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceCardComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{},"modules.html":{}}}],["axis",{"_index":699,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{}}}],["b38f8f",{"_index":818,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["background",{"_index":462,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["bar",{"_index":920,"title":{},"body":{"modules/SharedModule.html":{}}}],["base",{"_index":20,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["base.git",{"_index":1059,"title":{},"body":{"index.html":{}}}],["base/mylib",{"_index":1191,"title":{},"body":{"index.html":{}}}],["based",{"_index":846,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"index.html":{}}}],["before",{"_index":814,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"index.html":{}}}],["behaviorsubject",{"_index":605,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["below",{"_index":1173,"title":{},"body":{"index.html":{}}}],["beta.33",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":492,"title":{},"body":{"components/CitySearchComponent.html":{},"index.html":{}}}],["block",{"_index":552,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["bold",{"_index":548,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["boolean",{"_index":597,"title":{},"body":{"injectables/DataStoreService.html":{},"interfaces/IPlace.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["bootstrap",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["border",{"_index":465,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["bottom",{"_index":145,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["branch",{"_index":1111,"title":{},"body":{"index.html":{}}}],["brightness(80",{"_index":812,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["browse",{"_index":1195,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":845,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"index.html":{}}}],["built",{"_index":1046,"title":{},"body":{"index.html":{}}}],["c",{"_index":538,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["call",{"_index":645,"title":{},"body":{"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{}}}],["calls",{"_index":776,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["canactivate",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["canactivate(route",{"_index":956,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["candidates",{"_index":711,"title":{},"body":{"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{}}}],["capabilities",{"_index":1161,"title":{},"body":{"index.html":{}}}],["card",{"_index":22,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["card'},{'name",{"_index":154,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["card.component",{"_index":928,"title":{},"body":{"modules/SharedModule.html":{}}}],["card.component.html",{"_index":26,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["card.component.scss",{"_index":24,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts",{"_index":14,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:16",{"_index":763,"title":{},"body":{"components/InfoCardComponent.html":{}}}],["card.component.ts:18",{"_index":764,"title":{},"body":{"components/InfoCardComponent.html":{}}}],["card.component.ts:20",{"_index":762,"title":{},"body":{"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{}}}],["card.component.ts:21",{"_index":62,"title":{},"body":{"components/AirPollutionCardComponent.html":{}}}],["card.component.ts:22",{"_index":805,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts:23",{"_index":87,"title":{},"body":{"components/AirPollutionCardComponent.html":{}}}],["card.component.ts:24",{"_index":806,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts:26",{"_index":97,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/PlaceCardComponent.html":{}}}],["card.component.ts:27",{"_index":946,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts:29",{"_index":90,"title":{},"body":{"components/AirPollutionCardComponent.html":{}}}],["card.component.ts:30",{"_index":945,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts:31",{"_index":46,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/PlaceCardComponent.html":{}}}],["card.component.ts:32",{"_index":939,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts:47",{"_index":944,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts:50",{"_index":65,"title":{},"body":{"components/AirPollutionCardComponent.html":{}}}],["card.component.ts:59",{"_index":75,"title":{},"body":{"components/AirPollutionCardComponent.html":{}}}],["card.component.ts:62",{"_index":941,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts:66",{"_index":81,"title":{},"body":{"components/AirPollutionCardComponent.html":{}}}],["card.component.ts:71",{"_index":942,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["card.component.ts:78",{"_index":943,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["card/air",{"_index":13,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["card/info",{"_index":759,"title":{},"body":{"components/InfoCardComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["card/place",{"_index":803,"title":{},"body":{"components/PlaceCardComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["card/smart",{"_index":934,"title":{},"body":{"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["card__fav",{"_index":821,"title":{},"body":{"components/PlaceCardComponent.html":{}}}],["card__image",{"_index":811,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["catcherror",{"_index":374,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["category",{"_index":696,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{}}}],["center",{"_index":495,"title":{},"body":{"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["chainable",{"_index":325,"title":{"interfaces/Chainable.html":{}},"body":{"interfaces/Chainable.html":{},"coverage.html":{}}}],["change",{"_index":1146,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":525,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{}}}],["changedetectionstrategy",{"_index":529,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":526,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{}}}],["changes",{"_index":82,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["changes.place",{"_index":127,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["changes.place.currentvalue",{"_index":128,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["changes.weather",{"_index":847,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["changes.weather.currentvalue",{"_index":848,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["chart",{"_index":694,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["charts",{"_index":836,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["check",{"_index":99,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["chrome",{"_index":1067,"title":{},"body":{"index.html":{}}}],["ci",{"_index":1062,"title":{},"body":{"index.html":{}}}],["cities",{"_index":424,"title":{},"body":{"components/CitySearchComponent.html":{},"injectables/PlacesService.html":{},"index.html":{}}}],["city",{"_index":70,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IPlace.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["city.id",{"_index":883,"title":{},"body":{"injectables/PlacesService.html":{}}}],["city.name",{"_index":449,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["city.name.tolowercase().indexof(name",{"_index":882,"title":{},"body":{"injectables/PlacesService.html":{}}}],["city.tolowercase",{"_index":454,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["city/:name/:id",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["city[0",{"_index":884,"title":{},"body":{"injectables/PlacesService.html":{}}}],["citydetailscontainercomponent",{"_index":157,"title":{"components/CityDetailsContainerComponent.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{},"overview.html":{}}}],["citylowercase",{"_index":453,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["cityname",{"_index":401,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["citynamecontrol",{"_index":402,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["citysearchcomponent",{"_index":159,"title":{"components/CitySearchComponent.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["class",{"_index":50,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["classes",{"_index":703,"title":{},"body":{"interfaces/ICoordinate.html":{},"interfaces/IPlace.html":{}}}],["clean",{"_index":1063,"title":{},"body":{"index.html":{}}}],["client",{"_index":642,"title":{},"body":{"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{}}}],["clone",{"_index":1055,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":1076,"title":{},"body":{"index.html":{}}}],["cloudiness",{"_index":741,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["clouds",{"_index":733,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["cluster_appmodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":896,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":897,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":898,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["co",{"_index":686,"title":{},"body":{"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{}}}],["code",{"_index":1097,"title":{},"body":{"index.html":{}}}],["collection",{"_index":369,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/IChart.html":{},"interfaces/ISeries.html":{}}}],["color",{"_index":477,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["color(mat",{"_index":460,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{}}}],["colorscheme",{"_index":826,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["column",{"_index":761,"title":{},"body":{"components/InfoCardComponent.html":{}}}],["command",{"_index":344,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands",{"_index":1039,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":299,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["community",{"_index":1181,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":153,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"overview.html":{}}}],["composition",{"_index":731,"title":{},"body":{"interfaces/IPlaceCard.html":{}}}],["concentration",{"_index":748,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["condition",{"_index":67,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CitySearchComponent.html":{},"interfaces/IWeatherDetail.html":{},"injectables/OpenWeatherService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["configuration",{"_index":323,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["configured",{"_index":1090,"title":{},"body":{"index.html":{}}}],["console",{"_index":1077,"title":{},"body":{"index.html":{}}}],["console.log('logger",{"_index":346,"title":{},"body":{"interfaces/Chainable.html":{}}}],["console.log(this.weatherdata",{"_index":851,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["const",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{}}}],["construct",{"_index":433,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["constructor(activatedroute",{"_index":356,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["constructor(datastoreservice",{"_index":627,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["constructor(domsanitizer",{"_index":668,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(http",{"_index":867,"title":{},"body":{"injectables/PlacesService.html":{}}}],["constructor(httpclient",{"_index":639,"title":{},"body":{"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{}}}],["constructor(openweatherservice",{"_index":42,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["constructor(placesservice",{"_index":407,"title":{},"body":{"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{}}}],["constructor(private",{"_index":381,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["constructor(router",{"_index":954,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["contain",{"_index":817,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["container",{"_index":140,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["container'},{'name",{"_index":158,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["container.component",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["container.component.html",{"_index":352,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["container.component.scss",{"_index":351,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["container.component.ts",{"_index":349,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:16",{"_index":528,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{}}}],["container.component.ts:17",{"_index":535,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["container.component.ts:19",{"_index":534,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["container.component.ts:25",{"_index":371,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["container.component.ts:27",{"_index":358,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["container.component.ts:53",{"_index":365,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["container.component.ts:80",{"_index":367,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["container/city",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"coverage.html":{}}}],["container/current",{"_index":524,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["container__chart",{"_index":859,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["content",{"_index":490,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["controller",{"_index":427,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["convention",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"components/CountryFlagComponent.html":{},"interfaces/IWeatherDetail.html":{}}}],["convert",{"_index":196,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{}}}],["coord",{"_index":721,"title":{},"body":{"interfaces/IPlace.html":{}}}],["coordinates",{"_index":705,"title":{},"body":{"interfaces/ICoordinate.html":{},"interfaces/IPlace.html":{}}}],["copyright",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["core",{"_index":1174,"title":{},"body":{"index.html":{}}}],["core/core.module",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["core/data",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["core/google",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{}}}],["core/open",{"_index":108,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["core/places/places.service",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{}}}],["core/router",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["coremodule",{"_index":237,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["corresponding",{"_index":1073,"title":{},"body":{"index.html":{}}}],["country",{"_index":162,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IPlace.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{}}}],["country(value",{"_index":519,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["countryflagcomponent",{"_index":161,"title":{"components/CountryFlagComponent.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":974,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":509,"title":{},"body":{"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"index.html":{}}}],["creates",{"_index":47,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/InfoCardComponent.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["current",{"_index":92,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPlace.html":{},"interfaces/IWeatherDetail.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{}}}],["currently",{"_index":593,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["currenttime",{"_index":31,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["currentweatherapi",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentweatherapiurl",{"_index":771,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["currentweatherdetailscontainercomponent",{"_index":164,"title":{"components/CurrentWeatherDetailsContainerComponent.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["currentweathersummarycontainercomponent",{"_index":165,"title":{"components/CurrentWeatherSummaryContainerComponent.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cursor",{"_index":148,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/HeaderComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["cy.get('#header",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cypress",{"_index":334,"title":{},"body":{"interfaces/Chainable.html":{},"index.html":{}}}],["cypress.commands.add('logger",{"_index":345,"title":{},"body":{"interfaces/Chainable.html":{}}}],["d5d148fa23f7958ae9ad9fa0b2aaf860",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashboard",{"_index":555,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":168,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["dashboard.component.html",{"_index":557,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":556,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.component",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboardcomponent",{"_index":167,"title":{"components/DashboardComponent.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":198,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IChart.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{},"index.html":{}}}],["datastoreservice",{"_index":239,"title":{"injectables/DataStoreService.html":{}},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":347,"title":{},"body":{"interfaces/Chainable.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["date().toisostring",{"_index":89,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["date(weatherdetail.dt",{"_index":854,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["debouncetime",{"_index":431,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["debouncetime(500",{"_index":442,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["declarations",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["declare",{"_index":332,"title":{},"body":{"interfaces/Chainable.html":{}}}],["deep.mat",{"_index":481,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["default",{"_index":85,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":45,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["dep",{"_index":1123,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":226,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":1114,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1038,"title":{},"body":{"index.html":{}}}],["deps",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":56,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["detailed",{"_index":380,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"interfaces/IChart.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{}}}],["details",{"_index":58,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{}}}],["dev",{"_index":1156,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1100,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1165,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1172,"title":{},"body":{"index.html":{}}}],["dew",{"_index":743,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["dew_point",{"_index":734,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["diagram",{"_index":1152,"title":{},"body":{"index.html":{}}}],["different",{"_index":1166,"title":{},"body":{"index.html":{}}}],["direction",{"_index":487,"title":{},"body":{"components/CitySearchComponent.html":{},"components/InfoCardComponent.html":{}}}],["directive",{"_index":151,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["directives",{"_index":180,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["directory",{"_index":1137,"title":{},"body":{"index.html":{}}}],["disable",{"_index":336,"title":{},"body":{"interfaces/Chainable.html":{},"components/CountryFlagComponent.html":{},"interfaces/IWeatherDetail.html":{}}}],["display",{"_index":379,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IWeatherSummary.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["displayfn",{"_index":404,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["displayfn(city",{"_index":410,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["dist",{"_index":1136,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":432,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["div",{"_index":143,"title":{},"body":{"components/AirPollutionCardComponent.html":{}}}],["docs",{"_index":1122,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":975,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documents",{"_index":1116,"title":{},"body":{"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["domain",{"_index":839,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["domsanitizer",{"_index":669,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dt",{"_index":735,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["duplicates",{"_index":619,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["duplicates.length",{"_index":621,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["dynamic",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1105,"title":{},"body":{"index.html":{}}}],["e2e/src/support/app.po.ts",{"_index":977,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["e2e/src/support/commands.ts",{"_index":327,"title":{},"body":{"interfaces/Chainable.html":{},"coverage.html":{}}}],["e2e/src/support/commands.ts:17",{"_index":330,"title":{},"body":{"interfaces/Chainable.html":{}}}],["ease",{"_index":1101,"title":{},"body":{"index.html":{}}}],["element",{"_index":117,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["elements",{"_index":434,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["end",{"_index":1147,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["environment",{"_index":649,"title":{},"body":{"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.airpollutionapi",{"_index":782,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["environment.currentweatherapi",{"_index":783,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["environment.oncecallapi",{"_index":785,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["environment.openweatherurl",{"_index":781,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["environment.production",{"_index":654,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["environments/environment",{"_index":650,"title":{},"body":{"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{}}}],["equipped",{"_index":1096,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":335,"title":{},"body":{"interfaces/Chainable.html":{},"components/CountryFlagComponent.html":{},"interfaces/IWeatherDetail.html":{},"index.html":{}}}],["eslint/naming",{"_index":517,"title":{},"body":{"components/CountryFlagComponent.html":{},"interfaces/IWeatherDetail.html":{}}}],["eslint/no",{"_index":340,"title":{},"body":{"interfaces/Chainable.html":{}}}],["etc",{"_index":1170,"title":{},"body":{"index.html":{}}}],["eventemitter",{"_index":63,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["exclude=minutely,daily&units=metric&appid=${environment.openweatherapikey",{"_index":799,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["execute",{"_index":1142,"title":{},"body":{"index.html":{}}}],["export",{"_index":118,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["exports",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["extendable",{"_index":1043,"title":{},"body":{"index.html":{}}}],["extensible",{"_index":1155,"title":{},"body":{"index.html":{}}}],["face",{"_index":679,"title":{},"body":{"components/HeaderComponent.html":{}}}],["fair",{"_index":203,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{}}}],["false",{"_index":96,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"miscellaneous/variables.html":{}}}],["favorite",{"_index":169,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IPlace.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["favoriteplaces",{"_index":580,"title":{},"body":{"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{}}}],["favoriteplacesandweather",{"_index":626,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["favoriteplacescomponent",{"_index":49,"title":{"components/FavoritePlacesComponent.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["favorites",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{}}}],["feels",{"_index":539,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["feels_like",{"_index":736,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["fetch",{"_index":788,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["field",{"_index":913,"title":{},"body":{"modules/SharedModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1094,"title":{},"body":{"index.html":{}}}],["filter",{"_index":405,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["filter(city",{"_index":416,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["filter(res",{"_index":439,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["filteredcities",{"_index":403,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["finalurl",{"_index":797,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["findplacefromtext/json?input=${city.name",{"_index":656,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["flag",{"_index":98,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CountryFlagComponent.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["flag'},{'name",{"_index":163,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["flag.component",{"_index":930,"title":{},"body":{"modules/SharedModule.html":{}}}],["flag.component.html",{"_index":504,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["flag.component.scss",{"_index":503,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["flag.component.ts",{"_index":502,"title":{},"body":{"components/CountryFlagComponent.html":{},"coverage.html":{}}}],["flag.component.ts:16",{"_index":511,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["flag.component.ts:18",{"_index":512,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["flag.component.ts:25",{"_index":514,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["flag.component.ts:33",{"_index":508,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["flag/country",{"_index":501,"title":{},"body":{"components/CountryFlagComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["flagurl",{"_index":506,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["flex",{"_index":486,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["flexlayoutmodule",{"_index":906,"title":{},"body":{"modules/SharedModule.html":{}}}],["font",{"_index":473,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["forecast",{"_index":718,"title":{},"body":{"interfaces/IOpenWeatherReport.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["forecast'},{'name",{"_index":177,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["forecast.component",{"_index":929,"title":{},"body":{"modules/SharedModule.html":{}}}],["forecast.component.html",{"_index":825,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.scss",{"_index":824,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.ts",{"_index":823,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"coverage.html":{}}}],["forecast.component.ts:19",{"_index":831,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.ts:21",{"_index":832,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.ts:23",{"_index":842,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.ts:25",{"_index":843,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.ts:27",{"_index":844,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.ts:29",{"_index":841,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.ts:36",{"_index":837,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast.component.ts:50",{"_index":834,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["forecast/ichart.ts",{"_index":693,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{},"coverage.html":{}}}],["forecast/place",{"_index":822,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["forkjoin",{"_index":373,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["format",{"_index":95,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["formatted",{"_index":414,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["formatweatherreportforhourlydata",{"_index":830,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["formatweatherreportforhourlydata(weatherreport",{"_index":833,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["formcontrol",{"_index":426,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["formsmodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":318,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["framework",{"_index":1048,"title":{},"body":{"index.html":{}}}],["frontends",{"_index":1175,"title":{},"body":{"index.html":{}}}],["full",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":1153,"title":{},"body":{"index.html":{}}}],["g",{"_index":1118,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1120,"title":{},"body":{"index.html":{}}}],["generate:docs",{"_index":1121,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1154,"title":{},"body":{"index.html":{}}}],["generates",{"_index":562,"title":{},"body":{"components/DashboardComponent.html":{}}}],["generating",{"_index":1168,"title":{},"body":{"index.html":{}}}],["geological",{"_index":704,"title":{},"body":{"interfaces/ICoordinate.html":{}}}],["getairpollutiondetails",{"_index":773,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["getairpollutiondetails(city",{"_index":777,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["getairpollutionreport",{"_index":34,"title":{},"body":{"components/AirPollutionCardComponent.html":{}}}],["getairpollutionreport(place",{"_index":64,"title":{},"body":{"components/AirPollutionCardComponent.html":{}}}],["getallfavoriteplaces",{"_index":583,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["getallplaces",{"_index":863,"title":{},"body":{"injectables/PlacesService.html":{}}}],["getallplacesfromserver",{"_index":864,"title":{},"body":{"injectables/PlacesService.html":{}}}],["getcountry",{"_index":513,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["getcurrentweathercondition",{"_index":774,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["getcurrentweathercondition(city",{"_index":779,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["getgreeting",{"_index":979,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getplacebyid",{"_index":865,"title":{},"body":{"injectables/PlacesService.html":{}}}],["getplacebyid(id",{"_index":875,"title":{},"body":{"injectables/PlacesService.html":{}}}],["getplaceimage",{"_index":638,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["getplaceimage(city",{"_index":646,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["getplacesbyname",{"_index":866,"title":{},"body":{"injectables/PlacesService.html":{}}}],["getplacesbyname(name",{"_index":879,"title":{},"body":{"injectables/PlacesService.html":{}}}],["gets",{"_index":66,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"interfaces/IPlace.html":{},"interfaces/IWeatherDetail.html":{},"injectables/OpenWeatherService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["getselectedplace",{"_index":584,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["getting",{"_index":1033,"title":{"index.html":{}},"body":{}}],["getweathercondition",{"_index":406,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["getweathercondition(place",{"_index":418,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["getweatherreport",{"_index":938,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["getweatherreport(place",{"_index":940,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["git",{"_index":1057,"title":{},"body":{"index.html":{}}}],["github",{"_index":1112,"title":{},"body":{"index.html":{}}}],["go",{"_index":1071,"title":{},"body":{"index.html":{}}}],["good",{"_index":202,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{}}}],["google",{"_index":363,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"injectables/GooglePlacesService.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"index.html":{}}}],["googlekey",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["googlekeynetlify",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["googleplacesservice",{"_index":240,"title":{"injectables/GooglePlacesService.html":{}},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"injectables/GooglePlacesService.html":{},"coverage.html":{},"overview.html":{}}}],["gotoplacedetails",{"_index":35,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["gotoplacedetails(place",{"_index":74,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["graph",{"_index":1124,"title":{},"body":{"index.html":{},"modules.html":{}}}],["guard",{"_index":950,"title":{"guards/ValidateDataForPlaceNavigationGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":951,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["guards/validate",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{}}}],["h1",{"_index":575,"title":{},"body":{"components/DashboardComponent.html":{}}}],["h2",{"_index":683,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header",{"_index":665,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":172,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["header.component.html",{"_index":667,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":666,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":171,"title":{"components/HeaderComponent.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["help",{"_index":1099,"title":{},"body":{"index.html":{}}}],["helps",{"_index":971,"title":{},"body":{"pipes/WeatherIconPipe.html":{}}}],["here",{"_index":1089,"title":{},"body":{"index.html":{}}}],["high",{"_index":563,"title":{},"body":{"components/DashboardComponent.html":{}}}],["home",{"_index":309,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["host",{"_index":136,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["hourly",{"_index":176,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IChart.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/ISeries.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["html",{"_index":150,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["html_attributions",{"_index":714,"title":{},"body":{"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{}}}],["http",{"_index":869,"title":{},"body":{"injectables/PlacesService.html":{}}}],["http://localhost:4200",{"_index":1068,"title":{},"body":{"index.html":{}}}],["http://openweathermap.org/img/w",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://openweathermap.org/img/w/${value}.png",{"_index":973,"title":{},"body":{"pipes/WeatherIconPipe.html":{}}}],["httpclient",{"_index":640,"title":{},"body":{"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{}}}],["httpclientjsonpmodule",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["https://api.openweathermap.org/data/2.5",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/bharathmuppa/weather",{"_index":1058,"title":{},"body":{"index.html":{}}}],["https://maps.googleapis.com/maps/api/place",{"_index":655,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["https://maps.googleapis.com/maps/api/place/photo?maxwidth=320&&key=${environment.googlekey",{"_index":663,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["https://maps.googleapis.com/maps/api/place/photo?maxwidth=320&&key=${environment.googlekeynetlify",{"_index":659,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["https://openweathermap.org/api/one",{"_index":796,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["https://openweathermap.org/current",{"_index":794,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["https://www.countryflags.io/${value.tolowercase()}/shiny/24.png",{"_index":521,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["human",{"_index":200,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{},"interfaces/IWeatherDetail.html":{}}}],["humidity",{"_index":737,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["iairpollution",{"_index":111,"title":{"interfaces/IAirPollution.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"injectables/OpenWeatherService.html":{},"coverage.html":{}}}],["iairquality",{"_index":83,"title":{"interfaces/IAirQuality.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"coverage.html":{}}}],["ichart",{"_index":691,"title":{"interfaces/IChart.html":{}},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{},"components/PlaceHourlyForecastComponent.html":{},"coverage.html":{}}}],["icon",{"_index":516,"title":{},"body":{"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IWeatherSummary.html":{},"components/PlaceCardComponent.html":{},"pipes/WeatherIconPipe.html":{}}}],["icon.pipe",{"_index":932,"title":{},"body":{"modules/SharedModule.html":{}}}],["icon.pipe.ts",{"_index":966,"title":{},"body":{"pipes/WeatherIconPipe.html":{},"coverage.html":{}}}],["icon.pipe.ts:17",{"_index":969,"title":{},"body":{"pipes/WeatherIconPipe.html":{}}}],["icons",{"_index":675,"title":{},"body":{"components/HeaderComponent.html":{}}}],["iconsapi",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icoordinate",{"_index":701,"title":{"interfaces/ICoordinate.html":{}},"body":{"interfaces/ICoordinate.html":{},"interfaces/IPlace.html":{},"coverage.html":{}}}],["id",{"_index":722,"title":{},"body":{"interfaces/IPlace.html":{},"interfaces/IWeatherSummary.html":{},"injectables/PlacesService.html":{}}}],["identifier",{"_index":726,"title":{},"body":{"interfaces/IPlace.html":{},"interfaces/IWeatherSummary.html":{},"coverage.html":{}}}],["igoogleplace",{"_index":651,"title":{"interfaces/IGooglePlace.html":{}},"body":{"injectables/GooglePlacesService.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"coverage.html":{}}}],["image",{"_index":531,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"injectables/GooglePlacesService.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["image.png",{"_index":820,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["images",{"_index":1075,"title":{},"body":{"index.html":{}}}],["implements",{"_index":15,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/ICoordinate.html":{},"components/PlaceHourlyForecastComponent.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["import",{"_index":102,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/IWeatherDetail.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["imported",{"_index":1190,"title":{},"body":{"index.html":{}}}],["imports",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["include",{"_index":1167,"title":{},"body":{"index.html":{}}}],["index",{"_index":27,"title":{"index.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"miscellaneous/variables.html":{}}}],["index.pipe",{"_index":936,"title":{},"body":{"modules/SharedModule.html":{}}}],["index.pipe.ts",{"_index":190,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{},"coverage.html":{}}}],["index.pipe.ts:13",{"_index":207,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{}}}],["index.pipe.ts:21",{"_index":195,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{}}}],["indigo",{"_index":458,"title":{},"body":{"components/CitySearchComponent.html":{},"components/InfoCardComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["infocardcomponent",{"_index":173,"title":{"components/InfoCardComponent.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["information",{"_index":360,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/InfoCardComponent.html":{}}}],["initializes",{"_index":409,"title":{},"body":{"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{}}}],["injectable",{"_index":576,"title":{"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{}},"body":{"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{}}}],["injectables",{"_index":577,"title":{},"body":{"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"overview.html":{}}}],["inline",{"_index":551,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["input",{"_index":103,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["inputs",{"_index":37,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["inputtype=textquery&fields=photos&key=${environment.googlekey",{"_index":662,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["inputtype=textquery&fields=photos&key=${environment.googlekeynetlify",{"_index":657,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["install",{"_index":1064,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1036,"title":{},"body":{"index.html":{}}}],["instance",{"_index":48,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["interface",{"_index":324,"title":{"interfaces/Chainable.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{}},"body":{"interfaces/Chainable.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"coverage.html":{}}}],["interfaces",{"_index":326,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"overview.html":{}}}],["internal",{"_index":126,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["introduction",{"_index":1035,"title":{},"body":{"index.html":{}}}],["iopenweatherreport",{"_index":372,"title":{"interfaces/IOpenWeatherReport.html":{}},"body":{"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPlaceCard.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["iphoto",{"_index":713,"title":{"interfaces/IPhoto.html":{}},"body":{"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"coverage.html":{}}}],["iplace",{"_index":61,"title":{"interfaces/IPlace.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["iplacecard",{"_index":729,"title":{"interfaces/IPlaceCard.html":{}},"body":{"interfaces/IPlaceCard.html":{},"coverage.html":{}}}],["isduplicate",{"_index":585,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["isduplicate(places",{"_index":595,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["iseries",{"_index":697,"title":{"interfaces/ISeries.html":{}},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{},"components/PlaceHourlyForecastComponent.html":{},"coverage.html":{}}}],["isfavorite",{"_index":723,"title":{},"body":{"interfaces/IPlace.html":{}}}],["isnan(value",{"_index":894,"title":{},"body":{"pipes/RoundoffPipe.html":{}}}],["iso",{"_index":94,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["italic",{"_index":479,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["items",{"_index":494,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["iweatherdetail",{"_index":527,"title":{"interfaces/IWeatherDetail.html":{}},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IWeatherDetail.html":{},"components/PlaceHourlyForecastComponent.html":{},"coverage.html":{}}}],["iweathersummary",{"_index":753,"title":{"interfaces/IWeatherSummary.html":{}},"body":{"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"coverage.html":{}}}],["jest",{"_index":1144,"title":{},"body":{"index.html":{}}}],["json",{"_index":871,"title":{},"body":{"injectables/PlacesService.html":{}}}],["json.parse(localstorage.getitem('favorites",{"_index":604,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["json.stringify(this.favoriteplaces",{"_index":616,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["justify",{"_index":489,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["key",{"_index":1074,"title":{},"body":{"index.html":{}}}],["kiat6zov0",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":760,"title":{},"body":{"components/InfoCardComponent.html":{}}}],["large",{"_index":475,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["larger",{"_index":546,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["lat",{"_index":706,"title":{},"body":{"interfaces/ICoordinate.html":{},"interfaces/IOpenWeatherReport.html":{}}}],["latest",{"_index":1091,"title":{},"body":{"index.html":{}}}],["latitude",{"_index":708,"title":{},"body":{"interfaces/ICoordinate.html":{},"interfaces/IOpenWeatherReport.html":{}}}],["layout",{"_index":908,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["learn",{"_index":1087,"title":{},"body":{"index.html":{}}}],["legend",{"_index":149,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"overview.html":{}}}],["level",{"_index":564,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["lib",{"_index":1188,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1169,"title":{},"body":{"index.html":{}}}],["library",{"_index":1186,"title":{},"body":{"index.html":{}}}],["libs",{"_index":925,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["line",{"_index":338,"title":{},"body":{"interfaces/Chainable.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"interfaces/IWeatherDetail.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["list",{"_index":422,"title":{},"body":{"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{}}}],["literal",{"_index":633,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"interfaces/IAirQuality.html":{},"interfaces/IGooglePlace.html":{}}}],["live",{"_index":543,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["load",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"components/SmartPlaceCardComponent.html":{}}}],["loading",{"_index":100,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["loadingweather",{"_index":32,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["loads",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":1054,"title":{},"body":{"index.html":{}}}],["localstorage.setitem('favorites",{"_index":615,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["location",{"_index":69,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CitySearchComponent.html":{},"injectables/GooglePlacesService.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPlace.html":{},"interfaces/IWeatherDetail.html":{},"injectables/OpenWeatherService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["locations",{"_index":728,"title":{},"body":{"interfaces/IPlace.html":{}}}],["logger",{"_index":328,"title":{},"body":{"interfaces/Chainable.html":{}}}],["logger(message",{"_index":329,"title":{},"body":{"interfaces/Chainable.html":{}}}],["lon",{"_index":707,"title":{},"body":{"interfaces/ICoordinate.html":{},"interfaces/IOpenWeatherReport.html":{}}}],["longitude",{"_index":709,"title":{},"body":{"interfaces/ICoordinate.html":{},"interfaces/IOpenWeatherReport.html":{}}}],["longtime",{"_index":542,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["machine",{"_index":1066,"title":{},"body":{"index.html":{}}}],["main",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{}}}],["makes",{"_index":1069,"title":{},"body":{"index.html":{}}}],["many",{"_index":1163,"title":{},"body":{"index.html":{}}}],["map",{"_index":317,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CitySearchComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/PlacesService.html":{}}}],["map(name",{"_index":446,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["map(value",{"_index":443,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["margin",{"_index":144,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CitySearchComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["mat",{"_index":459,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{}}}],["matautocompletemodule",{"_index":909,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbadgemodule",{"_index":921,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":901,"title":{},"body":{"modules/SharedModule.html":{}}}],["matched",{"_index":877,"title":{},"body":{"injectables/PlacesService.html":{}}}],["matching",{"_index":183,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":116,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/PlaceCardComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{}}}],["matformfieldmodule",{"_index":911,"title":{},"body":{"modules/SharedModule.html":{}}}],["math.round(value",{"_index":895,"title":{},"body":{"pipes/RoundoffPipe.html":{}}}],["maticonmodule",{"_index":905,"title":{},"body":{"modules/SharedModule.html":{}}}],["maticonregistry",{"_index":670,"title":{},"body":{"components/HeaderComponent.html":{}}}],["matinputmodule",{"_index":914,"title":{},"body":{"modules/SharedModule.html":{}}}],["matmenumodule",{"_index":916,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressbarmodule",{"_index":918,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":903,"title":{},"body":{"modules/SharedModule.html":{}}}],["meeting",{"_index":1107,"title":{},"body":{"index.html":{}}}],["message",{"_index":331,"title":{},"body":{"interfaces/Chainable.html":{}}}],["metadata",{"_index":17,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"pipes/WeatherIconPipe.html":{}}}],["methods",{"_index":33,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["min",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":1202,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":115,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CitySearchComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["models",{"_index":791,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["models/iairpollution",{"_index":112,"title":{},"body":{"components/AirPollutionCardComponent.html":{}}}],["models/iopenweatherreport",{"_index":808,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["models/iplace",{"_index":113,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["models/iweatherdetail",{"_index":530,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["moderate",{"_index":204,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{}}}],["module",{"_index":223,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":225,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["monitor",{"_index":1041,"title":{},"body":{"index.html":{}}}],["monorepo",{"_index":1052,"title":{},"body":{"index.html":{}}}],["monorepos",{"_index":1158,"title":{},"body":{"index.html":{}}}],["more",{"_index":1088,"title":{},"body":{"index.html":{}}}],["multi",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["multiple",{"_index":1184,"title":{},"body":{"index.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IChart.html":{},"interfaces/IPlace.html":{},"interfaces/ISeries.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["namespace",{"_index":333,"title":{},"body":{"interfaces/Chainable.html":{}}}],["navigate",{"_index":76,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["navigating",{"_index":961,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["navigation.guard",{"_index":306,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["navigation.guard.ts",{"_index":953,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{}}}],["navigation.guard.ts:13",{"_index":955,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["navigation.guard.ts:26",{"_index":958,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["nest",{"_index":1177,"title":{},"body":{"index.html":{}}}],["netherland",{"_index":1042,"title":{},"body":{"index.html":{}}}],["netlify",{"_index":1115,"title":{},"body":{"index.html":{}}}],["new",{"_index":88,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"interfaces/Chainable.html":{},"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":337,"title":{},"body":{"interfaces/Chainable.html":{},"components/CountryFlagComponent.html":{},"interfaces/IWeatherDetail.html":{}}}],["ng",{"_index":480,"title":{},"body":{"components/CitySearchComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["ngonchanges",{"_index":36,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["ngonchanges(changes",{"_index":79,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["ngoninit",{"_index":354,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["ngxchartsmodule",{"_index":926,"title":{},"body":{"modules/SharedModule.html":{}}}],["nh3",{"_index":690,"title":{},"body":{"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{}}}],["no2",{"_index":687,"title":{},"body":{"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{}}}],["node",{"_index":1179,"title":{},"body":{"index.html":{}}}],["none",{"_index":471,"title":{},"body":{"components/CitySearchComponent.html":{},"components/HeaderComponent.html":{}}}],["normal",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["npm",{"_index":1061,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":1025,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nrwl/angular:app",{"_index":1182,"title":{},"body":{"index.html":{}}}],["nrwl/angular:lib",{"_index":1187,"title":{},"body":{"index.html":{}}}],["nrwl/nest",{"_index":1178,"title":{},"body":{"index.html":{}}}],["nrwl/node",{"_index":1180,"title":{},"body":{"index.html":{}}}],["nrwl/web",{"_index":1176,"title":{},"body":{"index.html":{}}}],["null",{"_index":84,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["number",{"_index":194,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{},"components/DashboardComponent.html":{},"interfaces/IChart.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{}}}],["numbers",{"_index":893,"title":{},"body":{"pipes/RoundoffPipe.html":{}}}],["nx",{"_index":1053,"title":{},"body":{"index.html":{}}}],["o3",{"_index":688,"title":{},"body":{"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{}}}],["object",{"_index":838,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":72,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["observer",{"_index":73,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["obtained",{"_index":1051,"title":{},"body":{"index.html":{}}}],["of(null))).subscribe((results",{"_index":389,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["oncecallapi",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onchanges",{"_index":16,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["one",{"_index":795,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["onecall",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onecallapiurl",{"_index":772,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["onfavoriteadd",{"_index":355,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["onfavoriteadd(place",{"_index":366,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["oninit",{"_index":350,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["open",{"_index":59,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CityDetailsContainerComponent.html":{},"interfaces/IWeatherSummary.html":{},"components/SmartPlaceCardComponent.html":{},"pipes/WeatherIconPipe.html":{},"index.html":{}}}],["openweather",{"_index":717,"title":{},"body":{"interfaces/IOpenWeatherReport.html":{},"injectables/OpenWeatherService.html":{}}}],["openweatherapikey",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["openweatherservice",{"_index":43,"title":{"injectables/OpenWeatherService.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["openweatherurl",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option",{"_index":485,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["option.name",{"_index":456,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["optional",{"_index":55,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["others",{"_index":1040,"title":{},"body":{"index.html":{}}}],["out",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["outline",{"_index":470,"title":{},"body":{"components/CitySearchComponent.html":{},"components/HeaderComponent.html":{}}}],["output",{"_index":104,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["outputs",{"_index":39,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["overflow",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{}}}],["overview",{"_index":1196,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.id",{"_index":618,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["package",{"_index":1015,"title":{"dependencies.html":{}},"body":{}}],["packs",{"_index":320,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["padding",{"_index":141,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["page",{"_index":77,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["palette($mat",{"_index":461,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/InfoCardComponent.html":{}}}],["panel",{"_index":483,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["param",{"_index":119,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["parent",{"_index":343,"title":{},"body":{"interfaces/Chainable.html":{}}}],["parts",{"_index":1044,"title":{},"body":{"index.html":{}}}],["party",{"_index":924,"title":{},"body":{"modules/SharedModule.html":{}}}],["passed",{"_index":878,"title":{},"body":{"injectables/PlacesService.html":{}}}],["path",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["pathmatch",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["per",{"_index":755,"title":{},"body":{"interfaces/IWeatherSummary.html":{}}}],["perception",{"_index":747,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["perform",{"_index":643,"title":{},"body":{"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{}}}],["photo",{"_index":648,"title":{},"body":{"injectables/GooglePlacesService.html":{},"interfaces/IPlace.html":{}}}],["photo_reference",{"_index":715,"title":{},"body":{"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{}}}],["photoreference=${googleplace.candidates[0].photos[0].photo_reference",{"_index":660,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["photos",{"_index":712,"title":{},"body":{"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{}}}],["photourl",{"_index":724,"title":{},"body":{"interfaces/IPlace.html":{}}}],["pink",{"_index":544,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["pipe",{"_index":185,"title":{"pipes/AirQualityIndexPipe.html":{},"pipes/RoundoffPipe.html":{},"pipes/WeatherIconPipe.html":{}},"body":{"pipes/AirQualityIndexPipe.html":{},"components/CitySearchComponent.html":{},"pipes/RoundoffPipe.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{}}}],["pipe(catcherror(_",{"_index":388,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["pipes",{"_index":187,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{},"pipes/RoundoffPipe.html":{},"pipes/WeatherIconPipe.html":{},"overview.html":{}}}],["pipes/air",{"_index":935,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/roundoff.pipe",{"_index":933,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/weather",{"_index":931,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":208,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{},"pipes/RoundoffPipe.html":{},"pipes/WeatherIconPipe.html":{}}}],["place",{"_index":38,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/IWeatherDetail.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{},"index.html":{}}}],["place.id",{"_index":125,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["place.name",{"_index":124,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CitySearchComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["place?.name",{"_index":135,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["placecardcomponent",{"_index":174,"title":{"components/PlaceCardComponent.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["placedetails",{"_index":386,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["placeholder",{"_index":476,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["placehourlyforecastcomponent",{"_index":175,"title":{"components/PlaceHourlyForecastComponent.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["places",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"injectables/PlacesService.html":{},"index.html":{}}}],["places'},{'name",{"_index":170,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["places.component",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["places.component.html",{"_index":625,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.component.scss",{"_index":624,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.component.ts",{"_index":623,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["places.component.ts:21",{"_index":632,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:23",{"_index":628,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:35",{"_index":630,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:44",{"_index":631,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.filter((p",{"_index":620,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["places.places",{"_index":886,"title":{},"body":{"injectables/PlacesService.html":{}}}],["places.service",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{}}}],["places.service.ts",{"_index":637,"title":{},"body":{"injectables/GooglePlacesService.html":{},"coverage.html":{}}}],["places.service.ts:21",{"_index":641,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["places.service.ts:36",{"_index":647,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["places/favorite",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["places/google",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"injectables/GooglePlacesService.html":{},"coverage.html":{}}}],["placesapiurl",{"_index":653,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["placesdetails",{"_index":558,"title":{},"body":{"components/DashboardComponent.html":{}}}],["placesservice",{"_index":241,"title":{"injectables/PlacesService.html":{}},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"injectables/PlacesService.html":{},"coverage.html":{},"overview.html":{}}}],["placesservice.getallplacesfromserver",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["platform",{"_index":1084,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":1164,"title":{},"body":{"index.html":{}}}],["point",{"_index":744,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["pointer",{"_index":147,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/HeaderComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["points",{"_index":727,"title":{},"body":{"interfaces/IPlace.html":{}}}],["pollution",{"_index":12,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAirPollution.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["poor",{"_index":205,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{}}}],["position",{"_index":815,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["preference",{"_index":681,"title":{},"body":{"components/HeaderComponent.html":{}}}],["present",{"_index":751,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["pressure",{"_index":738,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["prettier",{"_index":1093,"title":{},"body":{"index.html":{}}}],["private",{"_index":120,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/HeaderComponent.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["process",{"_index":1102,"title":{},"body":{"index.html":{}}}],["prod",{"_index":1138,"title":{},"body":{"index.html":{}}}],["production",{"_index":1139,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1037,"title":{},"body":{"index.html":{}}}],["project=my",{"_index":1119,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1126,"title":{},"body":{"index.html":{}}}],["promise",{"_index":873,"title":{},"body":{"injectables/PlacesService.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["properties",{"_index":28,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["provide",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"components/CountryFlagComponent.html":{}}}],["providedin",{"_index":607,"title":{},"body":{"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["providers",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["provides",{"_index":378,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["public",{"_index":30,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["published",{"_index":698,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{}}}],["push",{"_index":1109,"title":{},"body":{"index.html":{}}}],["pushed",{"_index":1110,"title":{},"body":{"index.html":{}}}],["quality",{"_index":189,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{},"components/DashboardComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["quality__information",{"_index":139,"title":{},"body":{"components/AirPollutionCardComponent.html":{}}}],["quick",{"_index":1159,"title":{},"body":{"index.html":{}}}],["radius",{"_index":468,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["reactiveformsmodule",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["readable",{"_index":197,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{}}}],["red",{"_index":550,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["redirectto",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register",{"_index":674,"title":{},"body":{"components/HeaderComponent.html":{}}}],["related",{"_index":1049,"title":{},"body":{"index.html":{}}}],["remote",{"_index":644,"title":{},"body":{"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{}}}],["remove",{"_index":600,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["removed",{"_index":601,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["removefavoriteplace",{"_index":586,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["removefavoriteplace(place",{"_index":598,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["reo",{"_index":1056,"title":{},"body":{"index.html":{}}}],["repo",{"_index":1127,"title":{},"body":{"index.html":{}}}],["report",{"_index":757,"title":{},"body":{"interfaces/IWeatherSummary.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["represents",{"_index":91,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["request",{"_index":57,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["requested",{"_index":68,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CitySearchComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"components/SmartPlaceCardComponent.html":{}}}],["required",{"_index":435,"title":{},"body":{"components/CitySearchComponent.html":{},"modules/SharedModule.html":{}}}],["res.length",{"_index":440,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["reset",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resides",{"_index":725,"title":{},"body":{"interfaces/IPlace.html":{}}}],["resolvable",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["resolver",{"_index":874,"title":{},"body":{"injectables/PlacesService.html":{}}}],["result",{"_index":182,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":184,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.placedetails",{"_index":393,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["results.weatherreport",{"_index":391,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["retrieved",{"_index":1050,"title":{},"body":{"index.html":{}}}],["return",{"_index":121,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["returns",{"_index":71,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"modules/AppModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["rgba($indigo",{"_index":765,"title":{},"body":{"components/InfoCardComponent.html":{}}}],["root",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["root'},{'name",{"_index":156,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["round",{"_index":891,"title":{},"body":{"pipes/RoundoffPipe.html":{}}}],["roundoff",{"_index":537,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{},"pipes/RoundoffPipe.html":{}}}],["roundoffpipe",{"_index":888,"title":{"pipes/RoundoffPipe.html":{}},"body":{"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["route",{"_index":321,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CityDetailsContainerComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["route.params.id",{"_index":963,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["route.params.name",{"_index":962,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["router",{"_index":44,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CitySearchComponent.html":{},"components/HeaderComponent.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["routermodule",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":319,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":302,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":488,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["rules",{"_index":1092,"title":{},"body":{"index.html":{}}}],["run",{"_index":1060,"title":{},"body":{"index.html":{}}}],["running",{"_index":1140,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":107,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":375,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/PlacesService.html":{}}}],["same",{"_index":1185,"title":{},"body":{"index.html":{}}}],["sanitize",{"_index":673,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sanity",{"_index":1131,"title":{},"body":{"index.html":{}}}],["save",{"_index":1095,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":1133,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1083,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":1103,"title":{},"body":{"index.html":{}}}],["search",{"_index":397,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search'},{'name",{"_index":160,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["search.component",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["search.component.html",{"_index":399,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.scss",{"_index":398,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.ts",{"_index":396,"title":{},"body":{"components/CitySearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:102",{"_index":417,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.ts:28",{"_index":425,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.ts:33",{"_index":421,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.ts:38",{"_index":428,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.ts:43",{"_index":408,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.ts:75",{"_index":411,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.ts:84",{"_index":419,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search.component.ts:95",{"_index":420,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["search/city",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"components/CitySearchComponent.html":{},"coverage.html":{}}}],["see",{"_index":1151,"title":{},"body":{"index.html":{}}}],["select",{"_index":1078,"title":{},"body":{"index.html":{}}}],["selected",{"_index":413,"title":{},"body":{"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{}}}],["selectedplace",{"_index":581,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["selector",{"_index":18,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["series",{"_index":695,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["service",{"_index":608,"title":{},"body":{"injectables/DataStoreService.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{}}}],["services",{"_index":497,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":429,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"injectables/DataStoreService.html":{},"index.html":{}}}],["setcountry(value",{"_index":515,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["setcurrentlyselectedplace",{"_index":587,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setcurrentlyselectedplace(place",{"_index":602,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["settings",{"_index":680,"title":{},"body":{"components/HeaderComponent.html":{}}}],["shareable",{"_index":1189,"title":{},"body":{"index.html":{}}}],["shared/models/iairpollution",{"_index":787,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["shared/models/igoogleplace",{"_index":652,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["shared/models/iopenweatherreport",{"_index":376,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{},"injectables/OpenWeatherService.html":{}}}],["shared/models/iplace",{"_index":377,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"injectables/OpenWeatherService.html":{},"injectables/PlacesService.html":{}}}],["shared/shared.module",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":238,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":634,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["simplechanges",{"_index":80,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["single",{"_index":498,"title":{},"body":{"modules/CoreModule.html":{}}}],["size",{"_index":474,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["small",{"_index":1082,"title":{},"body":{"index.html":{}}}],["smart",{"_index":179,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{}}}],["smartplacecardcomponent",{"_index":178,"title":{"components/SmartPlaceCardComponent.html":{}},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["snippets",{"_index":1098,"title":{},"body":{"index.html":{}}}],["so2",{"_index":689,"title":{},"body":{"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{}}}],["solid",{"_index":467,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"modules/CoreModule.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{}}}],["space",{"_index":491,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["specific",{"_index":322,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{}}}],["start",{"_index":1065,"title":{},"body":{"index.html":{}}}],["started",{"_index":1034,"title":{"index.html":{}},"body":{}}],["startwith",{"_index":430,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["state",{"_index":629,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"interfaces/IPlace.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["statements",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":101,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"components/SmartPlaceCardComponent.html":{}}}],["store",{"_index":362,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{}}}],["store.service",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["store.service.ts",{"_index":579,"title":{},"body":{"injectables/DataStoreService.html":{},"coverage.html":{}}}],["store.service.ts:19",{"_index":606,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:21",{"_index":588,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:35",{"_index":592,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:44",{"_index":591,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:53",{"_index":603,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:62",{"_index":590,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:77",{"_index":599,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:86",{"_index":596,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store/data",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["stored",{"_index":1135,"title":{},"body":{"index.html":{}}}],["string",{"_index":199,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{},"interfaces/Chainable.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherSummary.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/WeatherIconPipe.html":{}}}],["structure",{"_index":835,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{},"index.html":{}}}],["style",{"_index":478,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{},"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["styleurls",{"_index":23,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["subscribable",{"_index":594,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["subscribe",{"_index":1072,"title":{},"body":{"index.html":{}}}],["suitable",{"_index":1080,"title":{},"body":{"index.html":{}}}],["summary",{"_index":166,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["support",{"_index":1193,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1162,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1194,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":927,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["table",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["temp",{"_index":739,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["temperature",{"_index":545,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{},"interfaces/IWeatherDetail.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["templateurl",{"_index":25,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["test",{"_index":1104,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1141,"title":{},"body":{"index.html":{}}}],["text",{"_index":415,"title":{},"body":{"components/CitySearchComponent.html":{},"components/DashboardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["third",{"_index":923,"title":{},"body":{"modules/SharedModule.html":{}}}],["this._country",{"_index":518,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["this.activatedroute.params.subscribe((params",{"_index":382,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["this.addplacetofavorites.emit(this.place",{"_index":809,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["this.airpollutionreport",{"_index":132,"title":{},"body":{"components/AirPollutionCardComponent.html":{}}}],["this.airpollutionurl}lat=${city.coord.lat}&lon=${city.coord.lon",{"_index":801,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["this.airqualitycode[value",{"_index":209,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{}}}],["this.allcities",{"_index":451,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.allcities.slice",{"_index":448,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.citynamecontrol",{"_index":436,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.citynamecontrol.valuechanges",{"_index":438,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.datastoreservice.addfavoriteplace(place",{"_index":394,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.datastoreservice.getallfavoriteplaces",{"_index":635,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["this.datastoreservice.setcurrentlyselectedplace(place",{"_index":450,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/wb.svg",{"_index":678,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.favoriteplaces",{"_index":611,"title":{},"body":{"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.favoriteplaces.filter(p",{"_index":617,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.favoriteplaces.push(place",{"_index":614,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.filter(name",{"_index":447,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.filteredcities",{"_index":437,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.flagurl",{"_index":520,"title":{},"body":{"components/CountryFlagComponent.html":{}}}],["this.formatweatherreportforhourlydata(this.weather",{"_index":850,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["this.getairpollutionreport(this.place).subscribe((weather",{"_index":131,"title":{},"body":{"components/AirPollutionCardComponent.html":{}}}],["this.getweatherreport(this.place).subscribe((weather",{"_index":948,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["this.googleplacesservice.getplaceimage(this.place",{"_index":387,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["this.http.get('./assets/cities.json').pipe(map((places",{"_index":885,"title":{},"body":{"injectables/PlacesService.html":{}}}],["this.httpclient.get(finalurl",{"_index":800,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["this.httpclient.get(placesapiurl).pipe(map((googleplace",{"_index":658,"title":{},"body":{"injectables/GooglePlacesService.html":{}}}],["this.isduplicate(this.favoriteplaces",{"_index":613,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.loadingweather",{"_index":129,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["this.maticonregistry.addsvgicon",{"_index":677,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.onecallapiurl}lat=${city.coord.lat}&lon=${city.coord.lon",{"_index":798,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["this.openweatherservice.getairpollutiondetails(place",{"_index":122,"title":{},"body":{"components/AirPollutionCardComponent.html":{}}}],["this.openweatherservice.getcurrentweathercondition(place",{"_index":947,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["this.openweatherservice.getcurrentweathercondition(this.place",{"_index":385,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["this.place",{"_index":383,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["this.place.isfavorite",{"_index":810,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["this.place.name",{"_index":857,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["this.place.photourl",{"_index":392,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["this.places",{"_index":565,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/PlacesService.html":{}}}],["this.places.filter((city",{"_index":881,"title":{},"body":{"injectables/PlacesService.html":{}}}],["this.places.map((id",{"_index":573,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.placesdetails",{"_index":572,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.placesservice.getallplaces",{"_index":452,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.placesservice.getplacebyid(+params.id",{"_index":384,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["this.placesservice.getplacebyid(id",{"_index":574,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.placesservice.getplacesbyname(citylowercase",{"_index":455,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["this.router.navigate(['/city",{"_index":123,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CitySearchComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["this.router.navigate(['/home",{"_index":964,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["this.selectedplace",{"_index":609,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.selectedplace$.asobservable",{"_index":610,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.selectedplace$.next(place",{"_index":612,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.weather",{"_index":949,"title":{},"body":{"components/SmartPlaceCardComponent.html":{}}}],["this.weatherdata",{"_index":849,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["this.weatherreport",{"_index":390,"title":{},"body":{"components/CityDetailsContainerComponent.html":{}}}],["time",{"_index":93,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"interfaces/IWeatherDetail.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["title",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todo",{"_index":316,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["togglefavorite",{"_index":804,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["toggles",{"_index":807,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["tools",{"_index":1157,"title":{},"body":{"index.html":{}}}],["topromise",{"_index":887,"title":{},"body":{"injectables/PlacesService.html":{}}}],["transform",{"_index":192,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{},"pipes/RoundoffPipe.html":{},"pipes/WeatherIconPipe.html":{}}}],["transform(value",{"_index":193,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{},"pipes/RoundoffPipe.html":{},"pipes/WeatherIconPipe.html":{}}}],["transformed",{"_index":970,"title":{},"body":{"pipes/WeatherIconPipe.html":{}}}],["transforming",{"_index":972,"title":{},"body":{"pipes/WeatherIconPipe.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["true",{"_index":130,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"modules/AppModule.html":{},"injectables/PlacesService.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"interfaces/IChart.html":{},"interfaces/ICoordinate.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPhoto.html":{},"interfaces/IPlace.html":{},"interfaces/IPlaceCard.html":{},"interfaces/ISeries.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":444,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["types",{"_index":790,"title":{},"body":{"injectables/OpenWeatherService.html":{},"index.html":{}}}],["typescript",{"_index":339,"title":{},"body":{"interfaces/Chainable.html":{},"components/CountryFlagComponent.html":{},"interfaces/IWeatherDetail.html":{}}}],["ui",{"_index":412,"title":{},"body":{"components/CitySearchComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["understand",{"_index":1149,"title":{},"body":{"index.html":{}}}],["unique",{"_index":756,"title":{},"body":{"interfaces/IWeatherSummary.html":{}}}],["unit",{"_index":499,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["unix",{"_index":745,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["unknown",{"_index":968,"title":{},"body":{"pipes/WeatherIconPipe.html":{}}}],["unused",{"_index":341,"title":{},"body":{"interfaces/Chainable.html":{}}}],["update",{"_index":1128,"title":{},"body":{"index.html":{}}}],["url",{"_index":510,"title":{},"body":{"components/CountryFlagComponent.html":{},"injectables/GooglePlacesService.html":{},"components/HeaderComponent.html":{},"pipes/WeatherIconPipe.html":{}}}],["url(../../../assets/default",{"_index":819,"title":{},"body":{"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["urltree",{"_index":959,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["use",{"_index":1070,"title":{},"body":{"index.html":{}}}],["used",{"_index":672,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["usefactory",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["useful",{"_index":1117,"title":{},"body":{"index.html":{}}}],["uses",{"_index":720,"title":{},"body":{"interfaces/IPlace.html":{}}}],["using",{"_index":1047,"title":{},"body":{"index.html":{}}}],["utc",{"_index":746,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["validatedataforplacenavigationguard",{"_index":303,"title":{"guards/ValidateDataForPlaceNavigationGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{}}}],["validates",{"_index":960,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{}}}],["value",{"_index":86,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"pipes/AirQualityIndexPipe.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/IChart.html":{},"interfaces/ISeries.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"injectables/PlacesService.html":{},"pipes/RoundoffPipe.html":{},"components/SmartPlaceCardComponent.html":{},"pipes/WeatherIconPipe.html":{},"miscellaneous/variables.html":{}}}],["value.name",{"_index":445,"title":{},"body":{"components/CitySearchComponent.html":{}}}],["vapor",{"_index":750,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["var",{"_index":152,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/InfoCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["variable",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1203,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":342,"title":{},"body":{"interfaces/Chainable.html":{}}}],["version",{"_index":1129,"title":{},"body":{"index.html":{}}}],["very",{"_index":206,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{}}}],["via",{"_index":1143,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":740,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["visit",{"_index":1192,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":114,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/PlaceCardComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["void",{"_index":78,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/DashboardComponent.html":{},"injectables/DataStoreService.html":{},"components/FavoritePlacesComponent.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["water",{"_index":749,"title":{},"body":{"interfaces/IWeatherDetail.html":{}}}],["weather",{"_index":19,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IOpenWeatherReport.html":{},"interfaces/IPlaceCard.html":{},"interfaces/IWeatherDetail.html":{},"interfaces/IWeatherSummary.html":{},"components/InfoCardComponent.html":{},"injectables/OpenWeatherService.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"modules/SharedModule.html":{},"components/SmartPlaceCardComponent.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["weather.list[0",{"_index":133,"title":{},"body":{"components/AirPollutionCardComponent.html":{}}}],["weather.service",{"_index":110,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["weather.service.ts",{"_index":769,"title":{},"body":{"injectables/OpenWeatherService.html":{},"coverage.html":{}}}],["weather.service.ts:24",{"_index":784,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["weather.service.ts:26",{"_index":786,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["weather.service.ts:28",{"_index":775,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["weather.service.ts:47",{"_index":780,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["weather.service.ts:60",{"_index":778,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["weather/open",{"_index":109,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"modules/AppModule.html":{},"components/CityDetailsContainerComponent.html":{},"components/DashboardComponent.html":{},"components/FavoritePlacesComponent.html":{},"injectables/OpenWeatherService.html":{},"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["weather/src/app/app",{"_index":297,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["weather/src/app/app.component.ts",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["weather/src/app/app.module.ts",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["weather/src/app/city",{"_index":348,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"components/CitySearchComponent.html":{},"coverage.html":{}}}],["weather/src/app/core/core.module.ts",{"_index":496,"title":{},"body":{"modules/CoreModule.html":{}}}],["weather/src/app/core/data",{"_index":578,"title":{},"body":{"injectables/DataStoreService.html":{},"coverage.html":{}}}],["weather/src/app/core/google",{"_index":636,"title":{},"body":{"injectables/GooglePlacesService.html":{},"coverage.html":{}}}],["weather/src/app/core/open",{"_index":768,"title":{},"body":{"injectables/OpenWeatherService.html":{},"coverage.html":{}}}],["weather/src/app/core/places/places.service.ts",{"_index":862,"title":{},"body":{"injectables/PlacesService.html":{},"coverage.html":{}}}],["weather/src/app/core/places/places.service.ts:17",{"_index":868,"title":{},"body":{"injectables/PlacesService.html":{}}}],["weather/src/app/core/places/places.service.ts:34",{"_index":870,"title":{},"body":{"injectables/PlacesService.html":{}}}],["weather/src/app/core/places/places.service.ts:44",{"_index":880,"title":{},"body":{"injectables/PlacesService.html":{}}}],["weather/src/app/core/places/places.service.ts:56",{"_index":876,"title":{},"body":{"injectables/PlacesService.html":{}}}],["weather/src/app/core/places/places.service.ts:69",{"_index":872,"title":{},"body":{"injectables/PlacesService.html":{}}}],["weather/src/app/core/router",{"_index":952,"title":{},"body":{"guards/ValidateDataForPlaceNavigationGuard.html":{},"coverage.html":{}}}],["weather/src/app/dashboard/dashboard.component.ts",{"_index":554,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["weather/src/app/dashboard/dashboard.component.ts:18",{"_index":561,"title":{},"body":{"components/DashboardComponent.html":{}}}],["weather/src/app/dashboard/dashboard.component.ts:20",{"_index":559,"title":{},"body":{"components/DashboardComponent.html":{}}}],["weather/src/app/dashboard/dashboard.component.ts:40",{"_index":560,"title":{},"body":{"components/DashboardComponent.html":{}}}],["weather/src/app/favorite",{"_index":622,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["weather/src/app/header/header.component.ts",{"_index":664,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["weather/src/app/header/header.component.ts:16",{"_index":671,"title":{},"body":{"components/HeaderComponent.html":{}}}],["weather/src/app/shared/air",{"_index":11,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"coverage.html":{}}}],["weather/src/app/shared/country",{"_index":500,"title":{},"body":{"components/CountryFlagComponent.html":{},"coverage.html":{}}}],["weather/src/app/shared/current",{"_index":523,"title":{},"body":{"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"coverage.html":{}}}],["weather/src/app/shared/info",{"_index":758,"title":{},"body":{"components/InfoCardComponent.html":{},"coverage.html":{}}}],["weather/src/app/shared/models/iairpollution.ts",{"_index":684,"title":{},"body":{"interfaces/IAirPollution.html":{},"interfaces/IAirQuality.html":{},"coverage.html":{}}}],["weather/src/app/shared/models/icoordinate.ts",{"_index":702,"title":{},"body":{"interfaces/ICoordinate.html":{},"coverage.html":{}}}],["weather/src/app/shared/models/igoogleplace.ts",{"_index":710,"title":{},"body":{"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"coverage.html":{}}}],["weather/src/app/shared/models/iopenweatherreport.ts",{"_index":716,"title":{},"body":{"interfaces/IOpenWeatherReport.html":{},"coverage.html":{}}}],["weather/src/app/shared/models/iplace.ts",{"_index":719,"title":{},"body":{"interfaces/IPlace.html":{},"coverage.html":{}}}],["weather/src/app/shared/models/iplacecard.ts",{"_index":730,"title":{},"body":{"interfaces/IPlaceCard.html":{},"coverage.html":{}}}],["weather/src/app/shared/models/iweatherdetail.ts",{"_index":732,"title":{},"body":{"interfaces/IWeatherDetail.html":{},"coverage.html":{}}}],["weather/src/app/shared/models/iweathersummary.ts",{"_index":754,"title":{},"body":{"interfaces/IWeatherSummary.html":{},"coverage.html":{}}}],["weather/src/app/shared/pipes/air",{"_index":188,"title":{},"body":{"pipes/AirQualityIndexPipe.html":{},"coverage.html":{}}}],["weather/src/app/shared/pipes/roundoff.pipe.ts",{"_index":889,"title":{},"body":{"pipes/RoundoffPipe.html":{},"coverage.html":{}}}],["weather/src/app/shared/pipes/roundoff.pipe.ts:16",{"_index":890,"title":{},"body":{"pipes/RoundoffPipe.html":{}}}],["weather/src/app/shared/pipes/weather",{"_index":965,"title":{},"body":{"pipes/WeatherIconPipe.html":{},"coverage.html":{}}}],["weather/src/app/shared/place",{"_index":692,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"coverage.html":{}}}],["weather/src/app/shared/shared.module.ts",{"_index":900,"title":{},"body":{"modules/SharedModule.html":{}}}],["weather/src/app/shared/smart",{"_index":937,"title":{},"body":{"components/SmartPlaceCardComponent.html":{},"coverage.html":{}}}],["weather/src/environments/environment.prod.ts",{"_index":1011,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["weather/src/environments/environment.ts",{"_index":1012,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["weather?.feels_like",{"_index":540,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["weather?.temp",{"_index":536,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["weather?.weather[0].description",{"_index":541,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["weatherbase",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["weatherdata",{"_index":827,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["weatherdetail.temp",{"_index":856,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["weathericon",{"_index":967,"title":{},"body":{"pipes/WeatherIconPipe.html":{}}}],["weathericonpipe",{"_index":899,"title":{"pipes/WeatherIconPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/WeatherIconPipe.html":{},"coverage.html":{},"overview.html":{}}}],["weatherreport",{"_index":353,"title":{},"body":{"components/CityDetailsContainerComponent.html":{},"interfaces/IPlaceCard.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["weatherreport.hourly.slice(0",{"_index":852,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["web",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["weight",{"_index":547,"title":{},"body":{"components/CurrentWeatherSummaryContainerComponent.html":{}}}],["wel",{"_index":1079,"title":{},"body":{"index.html":{}}}],["well",{"_index":1171,"title":{},"body":{"index.html":{}}}],["white",{"_index":463,"title":{},"body":{"components/CitySearchComponent.html":{},"components/PlaceHourlyForecastComponent.html":{}}}],["whole",{"_index":1125,"title":{},"body":{"index.html":{}}}],["width",{"_index":137,"title":{},"body":{"components/AirPollutionCardComponent.html":{},"components/AppComponent.html":{},"components/CountryFlagComponent.html":{},"components/CurrentWeatherDetailsContainerComponent.html":{},"components/CurrentWeatherSummaryContainerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IGooglePlace.html":{},"interfaces/IPhoto.html":{},"components/PlaceCardComponent.html":{},"components/PlaceHourlyForecastComponent.html":{},"components/SmartPlaceCardComponent.html":{}}}],["wont",{"_index":1108,"title":{},"body":{"index.html":{}}}],["workspace",{"_index":1150,"title":{},"body":{"index.html":{}}}],["world",{"_index":1045,"title":{},"body":{"index.html":{}}}],["x",{"_index":700,"title":{},"body":{"interfaces/IChart.html":{},"interfaces/ISeries.html":{}}}],["xaxislabel",{"_index":828,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["y",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/CityDetailsContainerComponent.html":{},"interfaces/IChart.html":{},"interfaces/ISeries.html":{}}}],["yaxislabel",{"_index":829,"title":{},"body":{"components/PlaceHourlyForecastComponent.html":{}}}],["zone.js",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AirPollutionCardComponent.html":{"url":"components/AirPollutionCardComponent.html","title":"component - AirPollutionCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AirPollutionCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/shared/air-pollution-card/air-pollution-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-air-pollution-card\n            \n\n            \n                styleUrls\n                ./air-pollution-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./air-pollution-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                airPollutionReport\n                            \n                            \n                                    Public\n                                currentTime\n                            \n                            \n                                    Public\n                                loadingWeather\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAirPollutionReport\n                            \n                            \n                                    Public\n                                goToPlaceDetails\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                place\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addPlaceToFavorites\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(openWeatherService: OpenWeatherService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/shared/air-pollution-card/air-pollution-card.component.ts:31\n                            \n                        \n\n                \n                    \n                            Creates instance of FavoritePlacesComponent class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        openWeatherService\n                                                  \n                                                        \n                                                                        OpenWeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance to request weather details from open weather\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of angular router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        place\n                    \n                \n                \n                    \n                        Type :         IPlace\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/air-pollution-card/air-pollution-card.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addPlaceToFavorites\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/air-pollution-card/air-pollution-card.component.ts:31\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAirPollutionReport\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAirPollutionReport(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/air-pollution-card/air-pollution-card.component.ts:50\n                \n            \n\n\n            \n                \n                    Gets weather condition for the requested location\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        location details of the city\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        weather condition details observer\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goToPlaceDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goToPlaceDetails(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/air-pollution-card/air-pollution-card.component.ts:59\n                \n            \n\n\n            \n                \n                    Navigate to details page of place requested\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to navigate\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/air-pollution-card/air-pollution-card.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            airPollutionReport\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IAirQuality | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/air-pollution-card/air-pollution-card.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date().toISOString()\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/air-pollution-card/air-pollution-card.component.ts:29\n                            \n                        \n\n                \n                    \n                        Represents current time in ISO format \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadingWeather\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/air-pollution-card/air-pollution-card.component.ts:26\n                            \n                        \n\n                \n                    \n                        Flag to check loading status of weather \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, Output, SimpleChanges, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { OpenWeatherService } from '../../core/open-weather/open-weather.service';\nimport { IAirPollution, IAirQuality } from '../models/IAirPollution';\nimport { IPlace } from '../models/IPlace';\n\n@Component({\n  selector: 'weather-base-air-pollution-card',\n  templateUrl: './air-pollution-card.component.html',\n  styleUrls: ['./air-pollution-card.component.scss']\n})\n/**\n * Visualize air pollution model as material card element\n */\nexport class AirPollutionCardComponent implements OnChanges {\n\n  @Input() place!: IPlace;\n\n  airPollutionReport: IAirQuality | null = null;\n\n  /** Flag to check loading status of weather */\n  public loadingWeather = false;\n\n  /** Represents current time in ISO format */\n  public currentTime = new Date().toISOString();\n\n  @Output() addPlaceToFavorites: EventEmitter = new EventEmitter();\n\n  /**\n   * Creates instance of ``` FavoritePlacesComponent``` class\n   *\n   * @param openWeatherService instance to request weather details from open weather\n   * @param router instance of angular router\n   */\n  constructor(\n    private openWeatherService: OpenWeatherService,\n    private router: Router) { }\n\n\n  /**\n   * Gets weather condition for the requested location\n   *\n   * @param place location details of the city\n   * @returns weather condition details observer\n   */\n  public getAirPollutionReport(place: IPlace): Observable {\n    return this.openWeatherService.getAirPollutionDetails(place);\n  }\n\n  /**\n   * Navigate to details page of place requested\n   *\n   * @param place to navigate\n   */\n  public goToPlaceDetails(place: IPlace): void {\n    this.router.navigate(['/city', place.name, place.id]);\n  }\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.place && changes.place.currentValue) {\n      this.loadingWeather = true;\n      this.getAirPollutionReport(this.place).subscribe((weather: IAirPollution) => {\n        this.airPollutionReport = weather.list[0];\n        this.loadingWeather = false;\n      }, _ => {\n        this.airPollutionReport = null;\n        this.loadingWeather = false;\n      });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ place?.name }}\n    \n  \n  \n    \n    \n    \n  \n  \n    \n    \n    \n  \n  \n    \n    \n    \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./air-pollution-card.component.scss\n                \n                :host {\n    width: 100%;\n}\n\n.place-card {\n    .air-quality__information-container {\n        padding: 1rem;\n\n        div {\n            margin-bottom: 0.5rem;\n        }\n    }\n\n    .pointer {\n        cursor: pointer;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ place?.name }}                                                                  '\n    var COMPONENTS = [{'name': 'AirPollutionCardComponent', 'selector': 'weather-base-air-pollution-card'},{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AirPollutionCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/AirQualityIndexPipe.html":{"url":"pipes/AirQualityIndexPipe.html","title":"pipe - AirQualityIndexPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  AirQualityIndexPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/pipes/air-quality-index.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        airQualityIndex\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/pipes/air-quality-index.pipe.ts:21\n                \n            \n\n\n            \n                \n                    Convert air quality index into readable data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of air quality index\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        human readable air quality\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            airQualityCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Good', 'Fair', 'Moderate', 'Poor', 'Very poor']\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/pipes/air-quality-index.pipe.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'airQualityIndex'\n})\n/**\n * Convert air quality index into readable data\n */\nexport class AirQualityIndexPipe implements PipeTransform {\n\n  private airQualityCode = ['Good', 'Fair', 'Moderate', 'Poor', 'Very poor'];\n\n  /**\n   * Convert air quality index into readable data\n   *\n   * @param value of air quality index\n   * @returns human readable air quality\n   */\n  transform(value: number): string {\n\n    return this.airQualityCode[value];\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'weather-base-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\n/**\n * Acts as root container for the application\n */\nexport class AppComponent {\n}\n\n    \n\n    \n        \n\n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .main-container {\n    height: 100%;\n    min-height: 100%;\n    width: 100%;\n    padding: 0.5rem 0;\n    overflow-y: auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AirPollutionCardComponent', 'selector': 'weather-base-air-pollution-card'},{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCityDetailsContainerComponent\n\nCityDetailsContainerComponent\n\nAppModule -->\n\nCityDetailsContainerComponent->AppModule\n\n\n\n\n\nCitySearchComponent\n\nCitySearchComponent\n\nAppModule -->\n\nCitySearchComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFavoritePlacesComponent\n\nFavoritePlacesComponent\n\nAppModule -->\n\nFavoritePlacesComponent->AppModule\n\n\n\nAppModule -->\n\nFavoritePlacesComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nDataStoreService\n\nDataStoreService\n\nAppModule -->\n\nDataStoreService->AppModule\n\n\n\n\n\nGooglePlacesService\n\nGooglePlacesService\n\nAppModule -->\n\nGooglePlacesService->AppModule\n\n\n\n\n\nOpenWeatherService\n\nOpenWeatherService\n\nAppModule -->\n\nOpenWeatherService->AppModule\n\n\n\n\n\nPlacesService\n\nPlacesService\n\nAppModule -->\n\nPlacesService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/live-weather/src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CityDetailsContainerComponent\n                        \n                        \n                            CitySearchComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            FavoritePlacesComponent\n                        \n                        \n                            FavoritePlacesComponent\n                        \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DataStoreService\n                        \n                        \n                            GooglePlacesService\n                        \n                        \n                            OpenWeatherService\n                        \n                        \n                            PlacesService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Copyright WeatherBase 2021\n\nimport { NgModule } from '@angular/core';\nimport { APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientJsonpModule, HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedModule } from './shared/shared.module';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeaderComponent } from './header/header.component';\nimport { CoreModule } from './core/core.module';\nimport { PlacesService } from './core/places/places.service';\nimport { OpenWeatherService } from './core/open-weather/open-weather.service';\nimport { CitySearchComponent } from './city-search/city-search.component';\nimport { DataStoreService } from './core/data-store/data-store.service';\nimport { GooglePlacesService } from './core/google-places/google-places.service';\nimport { CityDetailsContainerComponent } from './city-details-container/city-details-container.component';\nimport { FavoritePlacesComponent } from './favorite-places/favorite-places.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    HeaderComponent,\n    FavoritePlacesComponent,\n    CitySearchComponent,\n    CityDetailsContainerComponent,\n    FavoritePlacesComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    FormsModule,\n    HttpClientModule,\n    HttpClientJsonpModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  providers: [PlacesService, OpenWeatherService, GooglePlacesService, DataStoreService, {\n    provide: APP_INITIALIZER,\n    /**\n     * Loads places data into app\n     *\n     * @param placesService instance to load data\n     * @returns resolvable places data\n     */\n    useFactory: (placesService: PlacesService) => () => {\n      return placesService.getAllPlacesFromServer();\n    },\n    deps: [PlacesService],\n    multi: true\n  }],\n  bootstrap: [AppComponent],\n})\n/**\n * Acts as Root Module, which is an normal convention in Enterprise Angular web Apps\n */\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/live-weather/src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        // Copyright WeatherBase 2021\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router'\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CityDetailsContainerComponent } from './city-details-container/city-details-container.component';\nimport { ValidateDataForPlaceNavigationGuard } from './core/router-guards/validate-data-for-place-navigation.guard';\nimport { FavoritePlacesComponent } from './favorite-places/favorite-places.component';\n\n\nconst routes: Routes = [\n  { path: 'home', component: DashboardComponent },\n  { path: 'favorites', component: FavoritePlacesComponent },\n  { path: 'city/:name/:id', component: CityDetailsContainerComponent, canActivate: [ValidateDataForPlaceNavigationGuard] },\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  //TODO: Map to page not found component\n  { path: '**', redirectTo: '/home' }]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\n/**\n * Packs Route specific configuration\n */\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather-e2e/src/support/commands.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    logger\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logger\n                        \n                        \n                    \n                \n            \n            \n                \nlogger(message: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather-e2e/src/support/commands.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        declare namespace Cypress {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Chainable {\n    logger(message: string): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('logger', (message) => {\n  console.log('Logger: ', new Date(), ' : ', message);\n});\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CityDetailsContainerComponent.html":{"url":"components/CityDetailsContainerComponent.html","title":"component - CityDetailsContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CityDetailsContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/city-details-container/city-details-container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-city-details-container\n            \n\n            \n                styleUrls\n                ./city-details-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./city-details-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                place\n                            \n                            \n                                    Public\n                                weatherReport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onFavoriteAdd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, dataStoreService: DataStoreService, googlePlacesService: GooglePlacesService, openWeatherService: OpenWeatherService, placesService: PlacesService)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/city-details-container/city-details-container.component.ts:27\n                            \n                        \n\n                \n                    \n                            Creates instance of CityDetailsContainerComponent class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                get access to information a route associated with component\n\n                                                        \n                                                \n                                                \n                                                        dataStoreService\n                                                  \n                                                        \n                                                                        DataStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance to store and access data\n\n                                                        \n                                                \n                                                \n                                                        googlePlacesService\n                                                  \n                                                        \n                                                                        GooglePlacesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance to request google place details from google places api\n\n                                                        \n                                                \n                                                \n                                                        openWeatherService\n                                                  \n                                                        \n                                                                        OpenWeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance to request weather details from open weather\n\n                                                        \n                                                \n                                                \n                                                        placesService\n                                                  \n                                                        \n                                                                        PlacesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance to request places information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/city-details-container/city-details-container.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onFavoriteAdd\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onFavoriteAdd(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/city-details-container/city-details-container.component.ts:80\n                \n            \n\n\n            \n                \n                    Add a place to favorite collection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be added to favorite collection\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            place\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPlace\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/city-details-container/city-details-container.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherReport\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IOpenWeatherReport\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/city-details-container/city-details-container.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { DataStoreService } from '../core/data-store/data-store.service';\n\nimport { GooglePlacesService } from '../core/google-places/google-places.service';\nimport { OpenWeatherService } from '../core/open-weather/open-weather.service';\nimport { PlacesService } from '../core/places/places.service';\nimport { IOpenWeatherReport } from '../shared/models/IOpenWeatherReport';\nimport { IPlace } from '../shared/models/IPlace';\n\n@Component({\n  selector: 'weather-base-city-details-container',\n  templateUrl: './city-details-container.component.html',\n  styleUrls: ['./city-details-container.component.scss']\n})\n/**\n * Provides smart container to display detailed place information\n */\nexport class CityDetailsContainerComponent implements OnInit {\n\n  public place!: IPlace;\n\n  public weatherReport!: IOpenWeatherReport;\n\n\n  /**\n   * Creates instance of ```CityDetailsContainerComponent``` class\n   *\n   * @param activatedRoute get access to information a route associated with component\n   * @param dataStoreService instance to store and access data\n   * @param googlePlacesService instance to request google place details from google places api\n   * @param openWeatherService instance to request weather details from open weather\n   * @param placesService instance to request places information\n   */\n  constructor(private activatedRoute: ActivatedRoute,\n\n    private dataStoreService: DataStoreService,\n    private googlePlacesService: GooglePlacesService,\n\n\n    private openWeatherService: OpenWeatherService,\n\n    private placesService: PlacesService\n  ) { }\n\n  /**\n   * @internal\n   */\n  ngOnInit(): void {\n\n    this.activatedRoute.params.subscribe((params) => {\n      this.place = this.placesService.getPlaceById(+params.id)\n\n      const weatherReport = this.openWeatherService.getCurrentWeatherCondition(this.place);\n      const placeDetails = this.googlePlacesService.getPlaceImage(this.place);\n\n      forkJoin({\n        weatherReport,\n        placeDetails\n      }).pipe(catchError(_ => of(null))).subscribe((results) => {\n        if (!results) {\n          return;\n        }\n        this.weatherReport = results.weatherReport || {};\n        this.place.photoUrl = results.placeDetails || '';\n      });\n    })\n\n  }\n\n  /**\n   * Add a place to favorite collection\n   *\n   * @param place to be added to favorite collection\n   */\n  public onFavoriteAdd(place: IPlace): void {\n    this.dataStoreService.addFavoritePlace(place)\n  }\n\n}\n\n    \n\n    \n        \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./city-details-container.component.scss\n                \n                .city-details-container {\n    padding: 0.25rem;\n    overflow-y: auto;\n    height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AirPollutionCardComponent', 'selector': 'weather-base-air-pollution-card'},{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CityDetailsContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CitySearchComponent.html":{"url":"components/CitySearchComponent.html","title":"component - CitySearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CitySearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/city-search/city-search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-city-search\n            \n\n            \n                styleUrls\n                ./city-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./city-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                allCities\n                            \n                            \n                                    Public\n                                cityName\n                            \n                            \n                                    Public\n                                cityNameControl\n                            \n                            \n                                    Public\n                                filteredCities$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayFn\n                            \n                            \n                                    Private\n                                filter\n                            \n                            \n                                    Public\n                                getWeatherCondition\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(placesService: PlacesService, dataStoreService: DataStoreService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/city-search/city-search.component.ts:43\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the DashboardComponent class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        placesService\n                                                  \n                                                        \n                                                                        PlacesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance to request places information\n\n                                                        \n                                                \n                                                \n                                                        dataStoreService\n                                                  \n                                                        \n                                                                        DataStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to store and access data\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of angular router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            displayFn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    displayFn(city: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/city-search/city-search.component.ts:75\n                \n            \n\n\n            \n                \n                    Creates a city model for UI\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected city\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        formatted city text to display\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(city: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/city-search/city-search.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IPlace[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWeatherCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherCondition(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/city-search/city-search.component.ts:84\n                \n            \n\n\n            \n                \n                    Gets Weather condition of the location\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        location details of city\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/city-search/city-search.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            allCities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPlace[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/city-search/city-search.component.ts:33\n                            \n                        \n\n                \n                    \n                        List of available cities\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cityName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/city-search/city-search.component.ts:28\n                            \n                        \n\n                \n                    \n                        Name of the requested city\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cityNameControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/city-search/city-search.component.ts:43\n                            \n                        \n\n                \n                    \n                        Controller for city name search\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredCities$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/city-search/city-search.component.ts:38\n                            \n                        \n\n                \n                    \n                        Represents set of cities after filter\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { Observable } from 'rxjs';\nimport { startWith, filter, debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { PlacesService } from '../core/places/places.service';\nimport { IPlace } from '../shared/models/IPlace';\nimport { DataStoreService } from '../core/data-store/data-store.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'weather-base-city-search',\n  templateUrl: './city-search.component.html',\n  styleUrls: ['./city-search.component.scss']\n})\n/**\n * Construct elements required for city search\n */\nexport class CitySearchComponent implements OnInit {\n\n\n  /**\n   * Name of the requested city\n   */\n  public cityName = '';\n\n  /**\n   * List of available cities\n   */\n  public allCities: IPlace[] = [];\n\n  /**\n   * Represents set of cities after filter\n   */\n  public filteredCities$: Observable;\n\n  /**\n   * Controller for city name search\n   */\n  public cityNameControl: FormControl;\n\n  /**\n   * Initializes a new instance of the ```DashboardComponent``` class.\n   *\n   * @param placesService instance to request places information\n   * @param dataStoreService to store and access data\n   * @param router instance of angular router\n   */\n  constructor(\n    private placesService: PlacesService,\n    private dataStoreService: DataStoreService,\n    private router: Router) {\n\n    this.cityNameControl = new FormControl();\n    this.filteredCities$ = this.cityNameControl.valueChanges\n      .pipe(\n        startWith(''),\n        filter(res => res.length > 2),\n        debounceTime(500),\n        distinctUntilChanged(),\n        map(value => typeof value === 'string' ? value : value.name),\n        map(name => name ? this.filter(name) : this.allCities.slice())\n      );\n  }\n\n  /**\n   * Creates a city model for UI\n   *\n   * @param city selected city\n   * @returns formatted city text to display\n   */\n  public displayFn(city: IPlace): string {\n    return city && city.name ? city.name : '';\n  }\n\n  /**\n   * Gets Weather condition of the location\n   *\n   * @param place location details of city\n   */\n  public getWeatherCondition(place: IPlace): void {\n\n    this.dataStoreService.setCurrentlySelectedPlace(place);\n\n    this.router.navigate(['/city', place.name, place.id]);\n\n  }\n\n  /**\n   * @internal\n   */\n  ngOnInit(): void {\n    this.allCities = this.placesService.getAllPlaces();\n  }\n\n  /**\n   * @private\n   */\n  private filter(city: string): IPlace[] {\n    const cityLowercase = city.toLowerCase();\n\n    return this.placesService.getPlacesByName(cityLowercase);\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          {{ option.name }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./city-search.component.scss\n                \n                @import \"~@angular/material/theming\";\n\n$indigo: mat-color(mat-palette($mat-indigo));\n\n.city-search {\n    background: white;\n\n    height: 48px;\n    border: 1px solid $indigo;\n    border-radius: 8px;\n    outline: none;\n    padding: 0 0 0 25px;\n    font-size: large;\n\n    &::placeholder {\n        color: $indigo;\n        font-style: italic;\n    }\n}\n\n\n\n::ng-deep.mat-autocomplete-panel {\n    padding: 0 25px 0 25px;\n    margin: 0 16px 0 16px;\n    border-radius: 0 0 16px 16px;\n\n    .mat-option-text {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ option.name }}                    '\n    var COMPONENTS = [{'name': 'AirPollutionCardComponent', 'selector': 'weather-base-air-pollution-card'},{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CitySearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/live-weather/src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        // Copyright WeatherBase 2021\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\n/**\n * Packs all services into a single unit\n */\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CountryFlagComponent.html":{"url":"components/CountryFlagComponent.html","title":"component - CountryFlagComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CountryFlagComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/shared/country-flag/country-flag.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-country-flag\n            \n\n            \n                styleUrls\n                ./country-flag.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./country-flag.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _country\n                            \n                            \n                                    Public\n                                flagUrl\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                country\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    country\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        country\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/country-flag/country-flag.component.ts:33\n                            \n                        \n                \n                    \n                        set country and create url to get flag\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/country-flag/country-flag.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flagUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/country-flag/country-flag.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        country\n                    \n                \n\n                \n                    \n                        getcountry()\n                    \n                \n                            \n                                \n                                    Defined in apps/live-weather/src/app/shared/country-flag/country-flag.component.ts:25\n                                \n                            \n                    \n                        \n                                Get Country\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setcountry(value: string)\n                    \n                \n                            \n                                \n                                    Defined in apps/live-weather/src/app/shared/country-flag/country-flag.component.ts:33\n                                \n                            \n                    \n                        \n                                set country and create url to get flag\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'weather-base-country-flag',\n  templateUrl: './country-flag.component.html',\n  styleUrls: ['./country-flag.component.scss']\n})\n/**\n * Provide icon for any country flag\n */\nexport class CountryFlagComponent {\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private _country = '';\n\n  public flagUrl = '';\n\n  /**\n   * Get Country\n   *\n   * @returns name of the country\n   */\n  get country(): string {\n    return this._country;\n  }\n\n  /**\n   * set country and create url to get flag\n   */\n  @Input()\n  set country(value: string) {\n    this.flagUrl = `https://www.countryflags.io/${value.toLowerCase()}/shiny/24.png`;\n    this._country = value;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./country-flag.component.scss\n                \n                .country-flag {\n    width: 24px;\n    height: 24px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AirPollutionCardComponent', 'selector': 'weather-base-air-pollution-card'},{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CountryFlagComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurrentWeatherDetailsContainerComponent.html":{"url":"components/CurrentWeatherDetailsContainerComponent.html","title":"component - CurrentWeatherDetailsContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CurrentWeatherDetailsContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/shared/current-weather-details-container/current-weather-details-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-current-weather-details-container\n            \n\n            \n                styleUrls\n                ./current-weather-details-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./current-weather-details-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                weather\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        weather\n                    \n                \n                \n                    \n                        Type :         IWeatherDetail\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/current-weather-details-container/current-weather-details-container.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IWeatherDetail } from '../models/IWeatherDetail';\n\n@Component({\n  selector: 'weather-base-current-weather-details-container',\n  templateUrl: './current-weather-details-container.component.html',\n  styleUrls: ['./current-weather-details-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * Create a ui container with current weather image along with summary.\n */\nexport class CurrentWeatherDetailsContainerComponent {\n  @Input() weather!: IWeatherDetail;\n\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./current-weather-details-container.component.scss\n                \n                .place-details {\n    padding: 1rem;\n}\n\n.weather-icon {\n    width: 5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AirPollutionCardComponent', 'selector': 'weather-base-air-pollution-card'},{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurrentWeatherDetailsContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CurrentWeatherSummaryContainerComponent.html":{"url":"components/CurrentWeatherSummaryContainerComponent.html","title":"component - CurrentWeatherSummaryContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CurrentWeatherSummaryContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/shared/current-weather-summary-container/current-weather-summary-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-current-weather-summary-container\n            \n\n            \n                styleUrls\n                ./current-weather-summary-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./current-weather-summary-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentTime\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                weather\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        weather\n                    \n                \n                \n                    \n                        Type :         IWeatherDetail\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/current-weather-summary-container/current-weather-summary-container.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date().toISOString()\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/current-weather-summary-container/current-weather-summary-container.component.ts:17\n                            \n                        \n\n                \n                    \n                        Represents current time \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IWeatherDetail } from '../models/IWeatherDetail';\n\n@Component({\n  selector: 'weather-base-current-weather-summary-container',\n  templateUrl: './current-weather-summary-container.component.html',\n  styleUrls: ['./current-weather-summary-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * Create a ui container with current weather image along with summary.\n */\nexport class CurrentWeatherSummaryContainerComponent {\n  /** Represents current time */\n  public currentTime = new Date().toISOString();\n\n  @Input() weather!: IWeatherDetail;\n\n}\n\n    \n\n    \n        \n  \n  \n    {{ weather?.temp | roundoff }} °C\n    Feels like {{ weather?.feels_like | roundoff }}°C,\n      {{ weather?.weather[0].description }}\n    {{ currentTime | date: 'longTime' }}\n  \n  \n     Live\n  \n\n\n    \n\n    \n                \n                    ./current-weather-summary-container.component.scss\n                \n                @import \"~@angular/material/theming\";\n\n$pink: mat-color(mat-palette($mat-pink));\n\n\n.temperature-card {\n    padding: 1rem;\n}\n\n.temperature {\n    font-size: larger;\n    font-weight: bold;\n    line-height: 2rem;\n}\n\n.red {\n    color: $pink\n}\n\n.live-icon {\n    display: inline-block;\n    height: 8px;\n    width: 8px;\n    border-radius: 50%;\n    background: $pink;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ weather?.temp | roundoff }} °C    Feels like {{ weather?.feels_like | roundoff }}°C,      {{ weather?.weather[0].description }}    {{ currentTime | date: \\'longTime\\' }}         Live  '\n    var COMPONENTS = [{'name': 'AirPollutionCardComponent', 'selector': 'weather-base-air-pollution-card'},{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurrentWeatherSummaryContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                places\n                            \n                            \n                                    Public\n                                placesDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(placesService: PlacesService)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/dashboard/dashboard.component.ts:20\n                            \n                        \n\n                \n                    \n                            Creates instance of CityDetailsContainerComponent class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        placesService\n                                                  \n                                                        \n                                                                        PlacesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance to request places information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/dashboard/dashboard.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            places\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/dashboard/dashboard.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placesDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPlace[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/dashboard/dashboard.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { OpenWeatherService } from '../core/open-weather/open-weather.service';\nimport { PlacesService } from '../core/places/places.service';\nimport { IPlace } from '../shared/models/IPlace';\n\n@Component({\n  selector: 'weather-base-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\n/**\n * Generates a dashboard page with high level information\n */\nexport class DashboardComponent implements OnInit {\n\n  private places: number[];\n\n  public placesDetails: IPlace[] = [];\n\n  /**\n   * Creates instance of ```CityDetailsContainerComponent``` class\n   *\n   * @param placesService instance to request places information\n   */\n  constructor(private placesService: PlacesService) {\n    this.places = [\n      2759793,\n      2756253,\n      2745912,\n      2747891,\n      2750053,\n      2746301,]\n  }\n\n  /**\n   * @internal\n   */\n  ngOnInit(): void {\n    this.placesDetails = this.places.map((id: number) => {\n      return this.placesService.getPlaceById(id);\n    })\n  }\n\n}\n\n\n\n    \n\n    \n        Air Quality Index\n\n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                :host {\n\n    h1 {\n        text-align: center;\n        padding: 2rem;\n    }\n\n    padding: 0 1rem;\n    display: block;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Air Quality Index  '\n    var COMPONENTS = [{'name': 'AirPollutionCardComponent', 'selector': 'weather-base-air-pollution-card'},{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataStoreService.html":{"url":"injectables/DataStoreService.html","title":"injectable - DataStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/core/data-store/data-store.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                favoritePlaces\n                            \n                            \n                                    Private\n                                selectedPlace$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addFavoritePlace\n                            \n                            \n                                    Public\n                                getAllFavoritePlaces\n                            \n                            \n                                    Public\n                                getSelectedPlace\n                            \n                            \n                                    Private\n                                isDuplicate\n                            \n                            \n                                    Public\n                                removeFavoritePlace\n                            \n                            \n                                    Public\n                                setCurrentlySelectedPlace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:21\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the DataStoreService class.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addFavoritePlace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addFavoritePlace(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:62\n                \n            \n\n\n            \n                \n                    Add a place to favorites list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllFavoritePlaces\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllFavoritePlaces()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:44\n                \n            \n\n\n            \n                \n                    Gets  all favorite places\n\n\n                    \n                    \n                    \n                        Returns :         IPlace[]\n\n                    \n                    \n                        list of places\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSelectedPlace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectedPlace()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:35\n                \n            \n\n\n            \n                \n                    Gets currently selected place information\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        subscribable place data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isDuplicate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicate(places: IPlace[], place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    places\n                                    \n                                                IPlace[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeFavoritePlace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFavoritePlace(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:77\n                \n            \n\n\n            \n                \n                    Remove a place from favorites list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCurrentlySelectedPlace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentlySelectedPlace(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:53\n                \n            \n\n\n            \n                \n                    Set place information\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        details of place\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            favoritePlaces\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPlace[]\n\n                        \n                    \n                    \n                        \n                            Default value : JSON.parse(localStorage.getItem('favorites') || '[]')\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedPlace$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/core/data-store/data-store.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { IPlace } from '../../shared/models/IPlace';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service to store and access data across app\n */\nexport class DataStoreService {\n\n\n  private selectedPlace$: BehaviorSubject;\n\n  private favoritePlaces: IPlace[] = JSON.parse(localStorage.getItem('favorites') || '[]');\n\n  /**\n   * Initializes a new instance of the ```DataStoreService``` class.\n   */\n  constructor() {\n    this.selectedPlace$ = new BehaviorSubject({} as IPlace);\n  }\n\n  /**\n   * Gets currently selected place information\n   *\n   * @returns subscribable place data\n   */\n  public getSelectedPlace(): Observable {\n    return this.selectedPlace$.asObservable();\n  }\n\n  /**\n   * Gets  all favorite places\n   *\n   * @returns list of places\n   */\n  public getAllFavoritePlaces(): IPlace[] {\n    return this.favoritePlaces;\n  }\n\n  /**\n   * Set place information\n   *\n   * @param place details of place\n   */\n  public setCurrentlySelectedPlace(place: IPlace): void {\n    this.selectedPlace$.next(place)\n  }\n\n  /**\n   * Add a place to favorites list\n   *\n   * @param place to be added\n   */\n  public addFavoritePlace(place: IPlace): void {\n    if (this.isDuplicate(this.favoritePlaces, place)) {\n      return;\n    }\n\n    this.favoritePlaces.push(place);\n\n    localStorage.setItem('favorites', JSON.stringify(this.favoritePlaces));\n  }\n\n  /**\n   * Remove a place from favorites list\n   *\n   * @param place to be removed\n   */\n  public removeFavoritePlace(place: IPlace): void {\n\n    this.favoritePlaces = this.favoritePlaces.filter(p => place.id === p.id);\n    localStorage.setItem('favorites', JSON.stringify(this.favoritePlaces));\n  }\n\n  /**\n   * @private\n   */\n  private isDuplicate(places: IPlace[], place: IPlace): boolean {\n    const duplicates = places.filter((p) => p.id === place.id);\n\n    return duplicates.length > 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritePlacesComponent.html":{"url":"components/FavoritePlacesComponent.html","title":"component - FavoritePlacesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritePlacesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/favorite-places/favorite-places.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-favorite-places\n            \n\n            \n                styleUrls\n                ./favorite-places.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./favorite-places.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                favoritePlaces\n                            \n                            \n                                    Public\n                                favoritePlacesAndWeather\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onFavoriteAdd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataStoreService: DataStoreService)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/favorite-places/favorite-places.component.ts:23\n                            \n                        \n\n                \n                    \n                            Creates instance of FavoritePlacesComponent class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataStoreService\n                                                  \n                                                        \n                                                                        DataStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance to request data state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/favorite-places/favorite-places.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onFavoriteAdd\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onFavoriteAdd(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/favorite-places/favorite-places.component.ts:44\n                \n            \n\n\n            \n                \n                    Add a place to favorite collection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be added to favorite collection\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            favoritePlaces\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPlace[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/favorite-places/favorite-places.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            favoritePlacesAndWeather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/favorite-places/favorite-places.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DataStoreService } from '../core/data-store/data-store.service';\nimport { OpenWeatherService } from '../core/open-weather/open-weather.service';\nimport { IOpenWeatherReport } from '../shared/models/IOpenWeatherReport';\nimport { IPlace } from '../shared/models/IPlace';\n\n@Component({\n  selector: 'weather-base-favorite-places',\n  templateUrl: './favorite-places.component.html',\n  styleUrls: ['./favorite-places.component.scss']\n})\n/**\n * Show favorite places in a container\n */\nexport class FavoritePlacesComponent implements OnInit {\n\n  public favoritePlaces: IPlace[] = [];\n\n  public favoritePlacesAndWeather: { place: IPlace; weather: IOpenWeatherReport }[] = [];\n\n  /**\n   * Creates instance of ``` FavoritePlacesComponent``` class\n   *\n   * @param dataStoreService instance to request data state\n   */\n  constructor(private dataStoreService: DataStoreService) { }\n\n  /**\n   * @internal\n   */\n  ngOnInit(): void {\n    this.favoritePlaces = this.dataStoreService.getAllFavoritePlaces();\n  }\n\n  /**\n   * Add a place to favorite collection\n   *\n   * @param place to be added to favorite collection\n   */\n  public onFavoriteAdd(place: IPlace): void {\n    this.dataStoreService.addFavoritePlace(place)\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./favorite-places.component.scss\n                \n                .favorites-container {\n    padding: 0.5rem;\n}\n\n.smart-place-container {\n    margin-bottom: 1rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AirPollutionCardComponent', 'selector': 'weather-base-air-pollution-card'},{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoritePlacesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GooglePlacesService.html":{"url":"injectables/GooglePlacesService.html","title":"injectable - GooglePlacesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GooglePlacesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/core/google-places/google-places.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPlaceImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/core/google-places/google-places.service.ts:21\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the OpenWeatherService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                client to perform remote service call\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlaceImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlaceImage(city: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/google-places/google-places.service.ts:36\n                \n            \n\n\n            \n                \n                    Gets photo of location requested\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        location details of the place\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        image url\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { IPlace } from '../../shared/models/IPlace';\nimport { IGooglePlace } from '../../shared/models/IGooglePlace';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Service for google places api\n */\nexport class GooglePlacesService {\n\n  /**\n   * Initializes a new instance of the ```OpenWeatherService``` class.\n   *\n   * @param httpClient client to perform remote service call\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Gets photo of location requested\n   *\n   * @param city location details of the place\n   * @returns image url\n   */\n  public getPlaceImage(city: IPlace): Observable {\n    let placesApiUrl;\n\n    if (environment.production) {\n      placesApiUrl = `https://maps.googleapis.com/maps/api/place` +\n        `/findplacefromtext/json?input=${city.name}`\n        + `&inputtype=textquery&fields=photos&key=${environment.googleKeyNetlify}`;\n\n      return this.httpClient.get(placesApiUrl).pipe(map((googlePlace: IGooglePlace) => {\n        return `https://maps.googleapis.com/maps/api/place/photo?maxwidth=320&&key=${environment.googleKeyNetlify}`\n          + `&photoreference=${googlePlace.candidates[0].photos[0].photo_reference}`\n      }));\n    } else {\n      placesApiUrl = `places-api?input=${city.name}`\n        + `&inputtype=textquery&fields=photos&key=${environment.googleKey}`;\n\n      return this.httpClient.get(placesApiUrl).pipe(map((googlePlace: IGooglePlace) => {\n        return `https://maps.googleapis.com/maps/api/place/photo?maxwidth=320&&key=${environment.googleKey}`\n          + `&photoreference=${googlePlace.candidates[0].photos[0].photo_reference}`\n      }));\n    }\n\n\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/header/header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(domSanitizer: DomSanitizer, matIconRegistry: MatIconRegistry, router: Router)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/header/header.component.ts:16\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the HeaderComponent class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                used to  sanitize the url\n\n                                                        \n                                                \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to register and display icons\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of angular router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'weather-base-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\n/**\n * Provides header for application\n */\nexport class HeaderComponent {\n  /**\n   * Initializes a new instance of the ```HeaderComponent``` class.\n   *\n   * @param domSanitizer used to  sanitize the url\n   * @param matIconRegistry to register and display icons\n   * @param router instance of angular router\n   */\n  constructor(private domSanitizer: DomSanitizer, private matIconRegistry: MatIconRegistry, private router: Router) {\n    this.matIconRegistry.addSvgIcon(\n      `weather-base-icon`,\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/wb.svg')\n    );\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n    Weather Base\n    \n    face\n    \n      \n        favorite\n        Favorites\n      \n      \n        settings\n        Preference\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                :host {\n    .header {\n        height: 56px;\n        width: 100%;\n    }\n\n    h2 {\n        outline: none;\n    }\n\n    .pointer {\n        cursor: pointer;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Weather Base        face                  favorite        Favorites                    settings        Preference            '\n    var COMPONENTS = [{'name': 'AirPollutionCardComponent', 'selector': 'weather-base-air-pollution-card'},{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAirPollution.html":{"url":"interfaces/IAirPollution.html","title":"interface - IAirPollution","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAirPollution\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/IAirPollution.ts\n        \n\n            \n                Description\n            \n            \n                Interface for Air pollution data model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:         IAirQuality[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAirQuality[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAirPollution {\n    list: IAirQuality[]\n}\n\n/**\n * Interface for Air quality model\n */\nexport interface IAirQuality {\n    main: {\n        aqi: string\n    },\n    components: {\n        co: string;\n        no: string;\n        no2: string;\n        o3: string;\n        so2: string;\n        nh3: string;\n    }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAirQuality.html":{"url":"interfaces/IAirQuality.html","title":"interface - IAirQuality","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAirQuality\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/IAirPollution.ts\n        \n\n            \n                Description\n            \n            \n                Interface for Air quality model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        components\n                                \n                                \n                                        main\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        components\n                                    \n                                \n                                \n                                    \n                                        components:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        main\n                                    \n                                \n                                \n                                    \n                                        main:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAirPollution {\n    list: IAirQuality[]\n}\n\n/**\n * Interface for Air quality model\n */\nexport interface IAirQuality {\n    main: {\n        aqi: string\n    },\n    components: {\n        co: string;\n        no: string;\n        no2: string;\n        o3: string;\n        so2: string;\n        nh3: string;\n    }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IChart.html":{"url":"interfaces/IChart.html","title":"interface - IChart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/place-hourly-forecast/IChart.ts\n        \n\n            \n                Description\n            \n            \n                Interface for chart data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        series\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of the chart category\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        series\n                                    \n                                \n                                \n                                    \n                                        series:         ISeries[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISeries[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Collection of detailed data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IChart {\n\n    /**\n     * name of the chart category\n     */\n    name: string;\n    /**\n     * Collection of detailed data\n     */\n    series: ISeries[]\n}\n\n/**\n * Interface for series data\n */\nexport interface ISeries {\n    /**\n     * Data to be published on y-axis\n     */\n    name: string;\n    /**\n     * Data to be published on x-axis\n     */\n    value: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICoordinate.html":{"url":"interfaces/ICoordinate.html","title":"interface - ICoordinate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICoordinate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/ICoordinate.ts\n        \n\n            \n                Description\n            \n            \n                Interface for classes that implements geological coordinates\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lat\n                                \n                                \n                                        lon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Latitude of the place\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                    \n                                \n                                \n                                    \n                                        lon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Longitude of the place\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICoordinate {\n\n    /**\n     * Longitude of the place\n     */\n    lon: string;\n    /**\n     * Latitude of the place\n     */\n    lat: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGooglePlace.html":{"url":"interfaces/IGooglePlace.html","title":"interface - IGooglePlace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGooglePlace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/IGooglePlace.ts\n        \n\n            \n                Description\n            \n            \n                Interface for Google place api model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        candidates\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        candidates\n                                    \n                                \n                                \n                                    \n                                        candidates:     [literal type]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [literal type]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IGooglePlace {\n    candidates: [{ photos: IPhoto[] }];\n    status: string;\n}\n\n/**\n * Interface represents places model of Google API\n */\ninterface IPhoto {\n    height: number;\n    html_attributions: string[];\n    photo_reference: string;\n    width: number;\n\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOpenWeatherReport.html":{"url":"interfaces/IOpenWeatherReport.html","title":"interface - IOpenWeatherReport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IOpenWeatherReport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/IOpenWeatherReport.ts\n        \n\n            \n                Description\n            \n            \n                Interface for OpenWeather API data model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        current\n                                \n                                \n                                        hourly\n                                \n                                \n                                        lat\n                                \n                                \n                                        lon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:         IWeatherDetail\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IWeatherDetail\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current weather data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hourly\n                                    \n                                \n                                \n                                    \n                                        hourly:         IWeatherDetail[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IWeatherDetail[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hourly forecast weather data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Latitude of the location\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                    \n                                \n                                \n                                    \n                                        lon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Longitude of the location\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IWeatherDetail } from './IWeatherDetail';\n\n/**\n * Interface for OpenWeather API data model\n */\nexport interface IOpenWeatherReport {\n    /**\n     * Latitude of the location\n     */\n    lat: number;\n\n    /**\n     * Longitude of the location\n     */\n    lon: number;\n\n    /**\n     * Current weather data\n     */\n    current: IWeatherDetail;\n\n    /**\n     * Hourly forecast weather data\n     */\n    hourly: IWeatherDetail[];\n\n}\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPhoto.html":{"url":"interfaces/IPhoto.html","title":"interface - IPhoto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPhoto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/IGooglePlace.ts\n        \n\n            \n                Description\n            \n            \n                Interface represents places model of Google API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        height\n                                \n                                \n                                        html_attributions\n                                \n                                \n                                        photo_reference\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html_attributions\n                                    \n                                \n                                \n                                    \n                                        html_attributions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo_reference\n                                    \n                                \n                                \n                                    \n                                        photo_reference:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IGooglePlace {\n    candidates: [{ photos: IPhoto[] }];\n    status: string;\n}\n\n/**\n * Interface represents places model of Google API\n */\ninterface IPhoto {\n    height: number;\n    html_attributions: string[];\n    photo_reference: string;\n    width: number;\n\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPlace.html":{"url":"interfaces/IPlace.html","title":"interface - IPlace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPlace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/IPlace.ts\n        \n\n            \n                Description\n            \n            \n                Interface for classes that uses city\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        coord\n                                \n                                \n                                        country\n                                \n                                \n                                        id\n                                \n                                \n                                        isFavorite\n                                \n                                \n                                        name\n                                \n                                \n                                        photoUrl\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coord\n                                    \n                                \n                                \n                                    \n                                        coord:         ICoordinate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICoordinate\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Coordinates of the city\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Country in which city resides\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier for the city\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFavorite\n                                    \n                                \n                                \n                                    \n                                        isFavorite:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gets current favorite state of location\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the city\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                    \n                                \n                                \n                                    \n                                        photoUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    points of locations photo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    State in which city resides\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ICoordinate } from './ICoordinate';\n\n/**\n * Interface for classes that uses city\n */\nexport interface IPlace {\n    /**\n     *  Identifier for the city\n     */\n    id: number;\n    /**\n     * Name of the city\n     */\n    name: string;\n\n    /**\n     * State in which city resides\n     */\n    state: string;\n    /**\n     * Country in which city resides\n     */\n    country: string;\n    /**\n     * Coordinates of the city\n     */\n    coord: ICoordinate\n\n    /**\n     * points of locations photo\n     */\n    photoUrl: string\n\n    /**\n     * Gets current favorite state of location\n     */\n    isFavorite: boolean\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPlaceCard.html":{"url":"interfaces/IPlaceCard.html","title":"interface - IPlaceCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPlaceCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/IPlaceCard.ts\n        \n\n            \n                Description\n            \n            \n                Interface for place and weather composition\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        place\n                                \n                                \n                                        weatherReport\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        place\n                                    \n                                \n                                \n                                    \n                                        place:         IPlace\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPlace\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weatherReport\n                                    \n                                \n                                \n                                    \n                                        weatherReport:         IOpenWeatherReport\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IOpenWeatherReport\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IOpenWeatherReport } from './IOpenWeatherReport';\nimport { IPlace } from './IPlace';\n\n/**\n * Interface for place and weather composition\n */\nexport interface IPlaceCard {\n    place: IPlace;\n    weatherReport: IOpenWeatherReport;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISeries.html":{"url":"interfaces/ISeries.html","title":"interface - ISeries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISeries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/place-hourly-forecast/IChart.ts\n        \n\n            \n                Description\n            \n            \n                Interface for series data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data to be published on y-axis\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data to be published on x-axis\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IChart {\n\n    /**\n     * name of the chart category\n     */\n    name: string;\n    /**\n     * Collection of detailed data\n     */\n    series: ISeries[]\n}\n\n/**\n * Interface for series data\n */\nexport interface ISeries {\n    /**\n     * Data to be published on y-axis\n     */\n    name: string;\n    /**\n     * Data to be published on x-axis\n     */\n    value: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeatherDetail.html":{"url":"interfaces/IWeatherDetail.html","title":"interface - IWeatherDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWeatherDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/IWeatherDetail.ts\n        \n\n            \n                Description\n            \n            \n                Interface for detailed weather data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clouds\n                                \n                                \n                                        dew_point\n                                \n                                \n                                        dt\n                                \n                                \n                                        feels_like\n                                \n                                \n                                        humidity\n                                \n                                \n                                        pressure\n                                \n                                \n                                        temp\n                                \n                                \n                                        visibility\n                                \n                                \n                                        weather\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clouds\n                                    \n                                \n                                \n                                    \n                                        clouds:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gets cloudiness in %\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dew_point\n                                    \n                                \n                                \n                                    \n                                        dew_point:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    accounts for the Dew point of weather\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dt\n                                    \n                                \n                                \n                                    \n                                        dt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current time, Unix, UTC\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        feels_like\n                                    \n                                \n                                \n                                    \n                                        feels_like:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    accounts for the human perception of weather\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidity\n                                    \n                                \n                                \n                                    \n                                        humidity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gets concentration of water vapor present in the air\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pressure\n                                    \n                                \n                                \n                                    \n                                        pressure:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gets atmospheric pressure\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temp\n                                    \n                                \n                                \n                                    \n                                        temp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Temperature in location\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                    \n                                \n                                \n                                    \n                                        visibility:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Visibility of the place\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weather\n                                    \n                                \n                                \n                                    \n                                        weather:         IWeatherSummary[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IWeatherSummary[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gets weather condition data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IWeatherSummary } from './IWeatherSummary';\n\n/**\n * Interface for detailed weather data\n */\nexport interface IWeatherDetail {\n\n    /**\n     * Gets cloudiness in %\n     */\n    clouds: number;\n\n    /**\n     * Current time, Unix, UTC\n     */\n    dt: number;\n    /**\n     * accounts for the Dew point of weather\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    dew_point: number;\n    /**\n     * accounts for the human perception of weather\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    feels_like: number;\n\n    /**\n     * Gets concentration of water vapor present in the air\n     */\n    humidity: number;\n    /**\n     * Gets atmospheric pressure\n     */\n    pressure: number;\n    /**\n     * Temperature in location\n     */\n    temp: number;\n\n    /**\n     * Visibility of the place\n     */\n    visibility: number\n    /**\n     * Gets weather condition data\n     */\n    weather: IWeatherSummary[]\n\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeatherSummary.html":{"url":"interfaces/IWeatherSummary.html","title":"interface - IWeatherSummary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWeatherSummary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/models/IWeatherSummary.ts\n        \n\n            \n                Description\n            \n            \n                Interface for weather as per open weather API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    description about weather\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Icon to display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    unique identifier for weather report\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IWeatherSummary {\n    /**\n     * unique identifier for weather report\n     */\n    id: number;\n    /**\n     * description about weather\n     */\n    description: string;\n    /**\n     * Icon to display\n     */\n    icon: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoCardComponent.html":{"url":"components/InfoCardComponent.html","title":"component - InfoCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/shared/info-card/info-card.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-info-card\n            \n\n            \n                styleUrls\n                ./info-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                direction\n                            \n                            \n                                label\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        direction\n                    \n                \n                \n                    \n                        Default value : 'column'\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/info-card/info-card.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/info-card/info-card.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/info-card/info-card.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'weather-base-info-card',\n  templateUrl: './info-card.component.html',\n  styleUrls: ['./info-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * Creates a information card with label and value\n */\nexport class InfoCardComponent {\n\n  @Input() label = '';\n\n  @Input() value = '';\n\n  @Input() direction = 'column'\n\n}\n\n    \n\n    \n        \n  {{ label }} \n  {{ value }}\n\n\n    \n\n    \n                \n                    ./info-card.component.scss\n                \n                @import \"~@angular/material/theming\";\n\n$indigo: mat-color(mat-palette($mat-indigo));\n\n.label {\n    color: rgba($indigo, 0.9)\n}\n\n.value {\n    color: #2b2525\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}   {{ value }}'\n    var COMPONENTS = [{'name': 'AirPollutionCardComponent', 'selector': 'weather-base-air-pollution-card'},{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpenWeatherService.html":{"url":"injectables/OpenWeatherService.html","title":"injectable - OpenWeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OpenWeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/core/open-weather/open-weather.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                airPollutionUrl\n                            \n                            \n                                    Private\n                                currentWeatherApiUrl\n                            \n                            \n                                    Private\n                                oneCallApiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAirPollutionDetails\n                            \n                            \n                                    Public\n                                getCurrentWeatherCondition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/core/open-weather/open-weather.service.ts:28\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the OpenWeatherService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                client to perform remote api calls\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAirPollutionDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAirPollutionDetails(city: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/open-weather/open-weather.service.ts:60\n                \n            \n\n\n            \n                \n                    Gets weather condition for the requested location\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        location details of the city\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        weather condition details observer\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrentWeatherCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentWeatherCondition(city: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/open-weather/open-weather.service.ts:47\n                \n            \n\n\n            \n                \n                    Gets weather condition for the requested location\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        location details of the city\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        weather condition details observer\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            airPollutionUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.openWeatherURL + environment.airPollutionAPI\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/core/open-weather/open-weather.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentWeatherApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.openWeatherURL + environment.currentWeatherAPi\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/core/open-weather/open-weather.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oneCallApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.openWeatherURL + environment.onceCallAPI\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/core/open-weather/open-weather.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\nimport { IPlace } from '../../shared/models/IPlace';\nimport { IOpenWeatherReport } from '../../shared/models/IOpenWeatherReport';\nimport { IAirPollution } from '../../shared/models/IAirPollution';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service to fetch data from [OPenWeather API](https://openweathermap.org)\n * There are 2 types of API models\n * 1. [Current weather data API]{@link https://openweathermap.org/current}\n * 2. [One Call API]{@link https://openweathermap.org/api/one-call-api}\n */\nexport class OpenWeatherService {\n\n  private currentWeatherApiUrl = environment.openWeatherURL + environment.currentWeatherAPi;\n\n  private oneCallApiUrl = environment.openWeatherURL + environment.onceCallAPI;\n\n  private airPollutionUrl = environment.openWeatherURL + environment.airPollutionAPI;\n\n\n\n  /**\n   * Initializes a new instance of the ```OpenWeatherService``` class.\n   *\n   * @param httpClient client to perform remote api calls\n   */\n  constructor(private httpClient: HttpClient) {\n\n  }\n\n  /**\n   * Gets weather condition for the requested location\n   *\n   * @param city location details of the city\n   * @returns weather condition details observer\n   */\n  public getCurrentWeatherCondition(city: IPlace): Observable {\n    const finalUrl = `${this.oneCallApiUrl}lat=${city.coord.lat}&lon=${city.coord.lon}` +\n      `&exclude=minutely,daily&units=metric&appid=${environment.openWeatherAPIkey}`\n\n    return this.httpClient.get(finalUrl);\n  }\n\n  /**\n   * Gets weather condition for the requested location\n   *\n   * @param city location details of the city\n   * @returns weather condition details observer\n   */\n  public getAirPollutionDetails(city: IPlace): Observable {\n    const finalUrl = `${this.airPollutionUrl}lat=${city.coord.lat}&lon=${city.coord.lon}` +\n      `&appid=${environment.openWeatherAPIkey}`\n\n    return this.httpClient.get(finalUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaceCardComponent.html":{"url":"components/PlaceCardComponent.html","title":"component - PlaceCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlaceCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/shared/place-card/place-card.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-place-card\n            \n\n            \n                styleUrls\n                ./place-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./place-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleFavorite\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                place\n                            \n                            \n                                weather\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addPlaceToFavorites\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        place\n                    \n                \n                \n                    \n                        Type :         IPlace\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-card/place-card.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        weather\n                    \n                \n                \n                    \n                        Type :         IOpenWeatherReport\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-card/place-card.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addPlaceToFavorites\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-card/place-card.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleFavorite\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleFavorite()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/place-card/place-card.component.ts:31\n                \n            \n\n\n            \n                \n                    Toggles favorite state of a place\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date().toISOString()\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-card/place-card.component.ts:20\n                            \n                        \n\n                \n                    \n                        Represents current time \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { IOpenWeatherReport } from '../models/IOpenWeatherReport';\nimport { IPlace } from '../models/IPlace';\n\n@Component({\n  selector: 'weather-base-place-card',\n  templateUrl: './place-card.component.html',\n  styleUrls: ['./place-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * Visualize place model as material card element\n */\nexport class PlaceCardComponent {\n\n  /** Represents current time */\n  public currentTime = new Date().toISOString();\n\n  @Input() place!: IPlace;\n\n  @Input() weather!: IOpenWeatherReport;\n\n  @Output() addPlaceToFavorites: EventEmitter = new EventEmitter();\n\n  /**\n   * Toggles favorite state of a place\n   */\n  toggleFavorite(): void {\n    if (!this.place) {\n      return;\n    }\n    this.addPlaceToFavorites.emit(this.place);\n    this.place.isFavorite = !this.place.isFavorite;\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ place?.name }}\n\n    \n    favorite\n  \n  \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./place-card.component.scss\n                \n                :host {\n    width: 100%;\n}\n\n.place-card {\n    .place-card__image {\n        filter: brightness(80%);\n        height: 230px;\n\n        &:before {\n            content: 'Image not available';\n            display: block;\n            position: absolute;\n            height: 230px;\n            background-size: contain;\n            width: 100%;\n            text-align: center;\n            font-style: italic;\n            color: #b38f8f;\n            line-height: 230px;\n            background-image: url(../../../assets/default-image.png);\n        }\n    }\n\n    .place-card__fav-icon {\n        cursor: pointer;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ place?.name }}        favorite          '\n    var COMPONENTS = [{'name': 'AirPollutionCardComponent', 'selector': 'weather-base-air-pollution-card'},{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlaceCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaceHourlyForecastComponent.html":{"url":"components/PlaceHourlyForecastComponent.html","title":"component - PlaceHourlyForecastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlaceHourlyForecastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-place-hourly-forecast\n            \n\n            \n                styleUrls\n                ./place-hourly-forecast.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./place-hourly-forecast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colorScheme\n                            \n                            \n                                weatherData\n                            \n                            \n                                xAxisLabel\n                            \n                            \n                                yAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formatWeatherReportForHourlyData\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                place\n                            \n                            \n                                weather\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        place\n                    \n                \n                \n                    \n                        Type :         IPlace\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        weather\n                    \n                \n                \n                    \n                        Type :         IOpenWeatherReport\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            formatWeatherReportForHourlyData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formatWeatherReportForHourlyData(weatherReport: IOpenWeatherReport)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts:50\n                \n            \n\n\n            \n                \n                    Format weather report into chart specific data structure\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    weatherReport\n                                    \n                                                IOpenWeatherReport\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        which is formatted for charts\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IChart\n\n                    \n                    \n                        chart data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    domain: ['#5AA454']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weatherData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IChart[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xAxisLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Time'\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yAxisLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Temperature in (°C)'\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { IOpenWeatherReport } from '../models/IOpenWeatherReport';\nimport { IPlace } from '../models/IPlace';\nimport { IWeatherDetail } from '../models/IWeatherDetail';\nimport { IChart, ISeries } from './IChart';\n\n@Component({\n  selector: 'weather-base-place-hourly-forecast',\n  templateUrl: './place-hourly-forecast.component.html',\n  styleUrls: ['./place-hourly-forecast.component.scss']\n})\n/**\n * Build hourly based charts based on weather report\n */\nexport class PlaceHourlyForecastComponent implements OnChanges {\n\n  @Input() place!: IPlace;\n\n  @Input() weather!: IOpenWeatherReport;\n\n  weatherData: IChart[] = [];\n\n  xAxisLabel = 'Time';\n\n  yAxisLabel = 'Temperature in (°C)';\n\n  colorScheme = {\n    domain: ['#5AA454']\n  };\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n\n    if (changes.weather && changes.weather.currentValue) {\n      this.weatherData = [this.formatWeatherReportForHourlyData(this.weather)];\n      console.log(this.weatherData);\n    }\n  }\n\n  /**\n   * Format weather report into chart specific data structure\n   *\n   * @param weatherReport which is formatted for charts\n   * @returns chart data\n   */\n  public formatWeatherReportForHourlyData(weatherReport: IOpenWeatherReport): IChart {\n    const series = weatherReport.hourly.slice(0, 7).map((weatherDetail: IWeatherDetail): ISeries => {\n      return {\n        name: `${new Date(weatherDetail.dt * 1000).getHours()}:00`,\n        value: weatherDetail.temp\n      }\n    });\n\n    return {\n      name: this.place.name,\n      series: series\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    Hourly forecast\n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./place-hourly-forecast.component.scss\n                \n                :host {\n    width: 100%;\n    background: white;\n\n    .place-hourly-forecast-container {\n        width: 100%;\n        height: 300px;\n\n        .place-hourly-forecast-container__chart {\n            padding: 4px;\n            width: 300px;\n            height: 200px;\n        }\n    }\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Hourly forecast      '\n    var COMPONENTS = [{'name': 'AirPollutionCardComponent', 'selector': 'weather-base-air-pollution-card'},{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlaceHourlyForecastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlacesService.html":{"url":"injectables/PlacesService.html","title":"injectable - PlacesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlacesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/live-weather/src/app/core/places/places.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                places\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllPlaces\n                            \n                            \n                                    Public\n                                getAllPlacesFromServer\n                            \n                            \n                                    Public\n                                getPlaceById\n                            \n                            \n                                    Public\n                                getPlacesByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/core/places/places.service.ts:17\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the PlacesService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                client to perform http request\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllPlaces\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPlaces()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/places/places.service.ts:34\n                \n            \n\n\n            \n                \n                    Get All places from json\n\n\n                    \n                    \n                    \n                        Returns :         IPlace[]\n\n                    \n                    \n                        All the places in json\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllPlacesFromServer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPlacesFromServer()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/places/places.service.ts:69\n                \n            \n\n\n            \n                \n                    Get All places from json\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        promise resolver for place data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlaceById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlaceById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/places/places.service.ts:56\n                \n            \n\n\n            \n                \n                    Get place by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of the place\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IPlace\n\n                    \n                    \n                        Place which is matched with passed param\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlacesByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlacesByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/places/places.service.ts:44\n                \n            \n\n\n            \n                \n                    Get all places by name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of the city\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IPlace[]\n\n                    \n                    \n                        All the places which were matched with passed param\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            places\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPlace[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/core/places/places.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IPlace } from './../../shared/models/IPlace';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service to get details about available cities\n */\nexport class PlacesService {\n\n  private places: IPlace[] = [];\n\n  /**\n   * Initializes a new instance of the ```PlacesService``` class.\n   *\n   * @param http client to perform http request\n   */\n  constructor(private http: HttpClient) {\n\n  }\n\n\n  /**\n   * Get All places from json\n   *\n   * @returns All the places in json\n   */\n  public getAllPlaces(): IPlace[] {\n    return this.places;\n  }\n\n  /**\n   * Get all places by name\n   *\n   * @param name of the city\n   * @returns All the places which were matched with passed param\n   */\n  public getPlacesByName(name: string): IPlace[] {\n\n    return this.places.filter((city: IPlace) => city.name.toLowerCase().indexOf(name) > -1);\n\n  }\n\n  /**\n   * Get place by id\n   *\n   * @param id of the place\n   * @returns Place which is matched with passed param\n   */\n  public getPlaceById(id: number): IPlace {\n\n    const city = this.places.filter((city: IPlace) => city.id === id);\n\n    return city[0];\n\n  }\n\n  /**\n   * Get All places from json\n   *\n   * @returns promise resolver for place data\n   */\n  public getAllPlacesFromServer(): Promise {\n    return this.http.get('./assets/cities.json').pipe(map((places: { places: IPlace[] }) => {\n      this.places = places.places;\n\n      return true;\n    })).toPromise();\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/RoundoffPipe.html":{"url":"pipes/RoundoffPipe.html","title":"pipe - RoundoffPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  RoundoffPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/pipes/roundoff.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        roundoff\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/pipes/roundoff.pipe.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'roundoff'\n})\n/**\n * Perform a round off approach for numbers\n */\nexport class RoundoffPipe implements PipeTransform {\n\n  /**\n   * @internal\n   */\n  transform(value: number): number {\n    if (isNaN(value)) {\n      return value;\n    }\n\n    return Math.round(value);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAirPollutionCardComponent\n\nAirPollutionCardComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAirPollutionCardComponent->SharedModule\n\n\n\n\n\nAirQualityIndexPipe\n\nAirQualityIndexPipe\n\nSharedModule -->\n\nAirQualityIndexPipe->SharedModule\n\n\n\n\n\nCountryFlagComponent\n\nCountryFlagComponent\n\nSharedModule -->\n\nCountryFlagComponent->SharedModule\n\n\n\n\n\nCurrentWeatherDetailsContainerComponent\n\nCurrentWeatherDetailsContainerComponent\n\nSharedModule -->\n\nCurrentWeatherDetailsContainerComponent->SharedModule\n\n\n\n\n\nCurrentWeatherSummaryContainerComponent\n\nCurrentWeatherSummaryContainerComponent\n\nSharedModule -->\n\nCurrentWeatherSummaryContainerComponent->SharedModule\n\n\n\n\n\nInfoCardComponent\n\nInfoCardComponent\n\nSharedModule -->\n\nInfoCardComponent->SharedModule\n\n\n\n\n\nPlaceCardComponent\n\nPlaceCardComponent\n\nSharedModule -->\n\nPlaceCardComponent->SharedModule\n\n\n\n\n\nPlaceHourlyForecastComponent\n\nPlaceHourlyForecastComponent\n\nSharedModule -->\n\nPlaceHourlyForecastComponent->SharedModule\n\n\n\n\n\nRoundoffPipe\n\nRoundoffPipe\n\nSharedModule -->\n\nRoundoffPipe->SharedModule\n\n\n\n\n\nSmartPlaceCardComponent\n\nSmartPlaceCardComponent\n\nSharedModule -->\n\nSmartPlaceCardComponent->SharedModule\n\n\n\n\n\nWeatherIconPipe\n\nWeatherIconPipe\n\nSharedModule -->\n\nWeatherIconPipe->SharedModule\n\n\n\n\n\nAirPollutionCardComponent \n\nAirPollutionCardComponent \n\nAirPollutionCardComponent  -->\n\nSharedModule->AirPollutionCardComponent \n\n\n\n\n\nCountryFlagComponent \n\nCountryFlagComponent \n\nCountryFlagComponent  -->\n\nSharedModule->CountryFlagComponent \n\n\n\n\n\nPlaceCardComponent \n\nPlaceCardComponent \n\nPlaceCardComponent  -->\n\nSharedModule->PlaceCardComponent \n\n\n\n\n\nPlaceHourlyForecastComponent \n\nPlaceHourlyForecastComponent \n\nPlaceHourlyForecastComponent  -->\n\nSharedModule->PlaceHourlyForecastComponent \n\n\n\n\n\nSmartPlaceCardComponent \n\nSmartPlaceCardComponent \n\nSmartPlaceCardComponent  -->\n\nSharedModule->SmartPlaceCardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AirPollutionCardComponent\n                        \n                        \n                            AirQualityIndexPipe\n                        \n                        \n                            CountryFlagComponent\n                        \n                        \n                            CurrentWeatherDetailsContainerComponent\n                        \n                        \n                            CurrentWeatherSummaryContainerComponent\n                        \n                        \n                            InfoCardComponent\n                        \n                        \n                            PlaceCardComponent\n                        \n                        \n                            PlaceHourlyForecastComponent\n                        \n                        \n                            RoundoffPipe\n                        \n                        \n                            SmartPlaceCardComponent\n                        \n                        \n                            WeatherIconPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AirPollutionCardComponent\n                        \n                        \n                            CountryFlagComponent\n                        \n                        \n                            PlaceCardComponent\n                        \n                        \n                            PlaceHourlyForecastComponent\n                        \n                        \n                            SmartPlaceCardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Copyright WeatherBase 2021\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Material specific modules\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatBadgeModule } from '@angular/material/badge';\n// third party libs\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n// App specific modules\nimport { PlaceCardComponent } from './place-card/place-card.component';\nimport { PlaceHourlyForecastComponent } from './place-hourly-forecast/place-hourly-forecast.component';\nimport { CountryFlagComponent } from './country-flag/country-flag.component';\nimport { WeatherIconPipe } from './pipes/weather-icon.pipe';\nimport { RoundoffPipe } from './pipes/roundoff.pipe';\nimport { SmartPlaceCardComponent } from './smart-place-card/smart-place-card.component';\nimport { InfoCardComponent } from './info-card/info-card.component';\nimport { CurrentWeatherSummaryContainerComponent } from './current-weather-summary-container/current-weather-summary-container.component';\nimport { CurrentWeatherDetailsContainerComponent } from './current-weather-details-container/current-weather-details-container.component';\nimport { AirPollutionCardComponent } from './air-pollution-card/air-pollution-card.component';\nimport { AirQualityIndexPipe } from './pipes/air-quality-index.pipe';\n\n@NgModule({\n  declarations: [\n\n    AirPollutionCardComponent,\n    AirQualityIndexPipe,\n    CurrentWeatherSummaryContainerComponent,\n    CurrentWeatherDetailsContainerComponent,\n    CountryFlagComponent,\n    InfoCardComponent,\n    PlaceCardComponent,\n    PlaceHourlyForecastComponent,\n    RoundoffPipe,\n    SmartPlaceCardComponent,\n    WeatherIconPipe,\n  ],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatProgressBarModule,\n    MatToolbarModule,\n    NgxChartsModule\n  ],\n  exports: [\n    AirPollutionCardComponent,\n    CountryFlagComponent,\n    FlexLayoutModule,\n    MatAutocompleteModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatProgressBarModule,\n    MatToolbarModule,\n    PlaceCardComponent,\n    PlaceHourlyForecastComponent,\n    SmartPlaceCardComponent\n  ]\n})\n/**\n * Packs all components required for the application\n */\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SmartPlaceCardComponent.html":{"url":"components/SmartPlaceCardComponent.html","title":"component - SmartPlaceCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SmartPlaceCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                weather-base-smart-place-card\n            \n\n            \n                styleUrls\n                ./smart-place-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./smart-place-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentTime\n                            \n                            \n                                    Public\n                                loadingWeather\n                            \n                            \n                                weather\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getWeatherReport\n                            \n                            \n                                    Public\n                                goToPlaceDetails\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                toggleFavorite\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                place\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addPlaceToFavorites\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(openWeatherService: OpenWeatherService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:32\n                            \n                        \n\n                \n                    \n                            Creates instance of FavoritePlacesComponent class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        openWeatherService\n                                                  \n                                                        \n                                                                        OpenWeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance to request weather details from open weather\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of angular router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        place\n                    \n                \n                \n                    \n                        Type :         IPlace\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addPlaceToFavorites\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWeatherReport\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherReport(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:62\n                \n            \n\n\n            \n                \n                    Gets weather condition for the requested location\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        location details of the city\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        weather condition details observer\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goToPlaceDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goToPlaceDetails(place: IPlace)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:71\n                \n            \n\n\n            \n                \n                    Navigate to details page of place requested\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                                IPlace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to navigate\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleFavorite\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleFavorite()\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:47\n                \n            \n\n\n            \n                \n                    Toggles favorite state of a place\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date().toISOString()\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:30\n                            \n                        \n\n                \n                    \n                        Represents current time in ISO format \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadingWeather\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:27\n                            \n                        \n\n                \n                    \n                        Flag to check loading status of weather \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IOpenWeatherReport | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, Output, SimpleChanges, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { OpenWeatherService } from '../../core/open-weather/open-weather.service';\nimport { IOpenWeatherReport } from '../models/IOpenWeatherReport';\nimport { IPlace } from '../models/IPlace';\n\n@Component({\n  selector: 'weather-base-smart-place-card',\n  templateUrl: './smart-place-card.component.html',\n  styleUrls: ['./smart-place-card.component.scss']\n})\n/**\n * Visualize place model as material card element\n */\nexport class SmartPlaceCardComponent implements OnChanges {\n\n\n  @Input() place!: IPlace;\n\n  weather: IOpenWeatherReport | null = null;\n\n  /** Flag to check loading status of weather */\n  public loadingWeather = false;\n\n  /** Represents current time in ISO format */\n  public currentTime = new Date().toISOString();\n\n  @Output() addPlaceToFavorites: EventEmitter = new EventEmitter();\n\n  /**\n   * Creates instance of ``` FavoritePlacesComponent``` class\n   *\n   * @param openWeatherService instance to request weather details from open weather\n   * @param router instance of angular router\n   */\n  constructor(\n    private openWeatherService: OpenWeatherService,\n    private router: Router) { }\n\n  /**\n   * Toggles favorite state of a place\n   */\n  public toggleFavorite(): void {\n    if (!this.place) {\n      return;\n    }\n    this.place.isFavorite = !this.place.isFavorite;\n    this.addPlaceToFavorites.emit(this.place);\n\n  }\n\n  /**\n   * Gets weather condition for the requested location\n   *\n   * @param place location details of the city\n   * @returns weather condition details observer\n   */\n  public getWeatherReport(place: IPlace): Observable {\n    return this.openWeatherService.getCurrentWeatherCondition(place);\n  }\n\n  /**\n   * Navigate to details page of place requested\n   *\n   * @param place to navigate\n   */\n  public goToPlaceDetails(place: IPlace): void {\n    this.router.navigate(['/city', place.name, place.id]);\n  }\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.place && changes.place.currentValue) {\n      this.loadingWeather = true;\n      this.getWeatherReport(this.place).subscribe((weather: IOpenWeatherReport) => {\n        this.weather = weather;\n        this.loadingWeather = false;\n      }, _ => {\n        this.weather = null;\n        this.loadingWeather = false;\n      });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ place?.name }}\n    \n    favorite\n  \n  \n\n  \n  \n    \n    Loading weather details\n    Not able to load weather details\n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./smart-place-card.component.scss\n                \n                :host {\n    width: 100%;\n}\n\n.place-card {\n    .place-card__image {\n        filter: brightness(80%);\n        width: 100%;\n        height: 230px;\n\n        &:before {\n            content: 'Image not available';\n            display: block;\n            position: absolute;\n            height: 230px;\n            background-size: contain;\n            width: 100%;\n            text-align: center;\n            font-style: italic;\n            color: #b38f8f;\n            line-height: 230px;\n            background-image: url(../../../assets/default-image.png);\n        }\n    }\n\n    .pointer {\n        cursor: pointer;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ place?.name }}        favorite                Loading weather details    Not able to load weather details      '\n    var COMPONENTS = [{'name': 'AirPollutionCardComponent', 'selector': 'weather-base-air-pollution-card'},{'name': 'AppComponent', 'selector': 'weather-base-root'},{'name': 'CityDetailsContainerComponent', 'selector': 'weather-base-city-details-container'},{'name': 'CitySearchComponent', 'selector': 'weather-base-city-search'},{'name': 'CountryFlagComponent', 'selector': 'weather-base-country-flag'},{'name': 'CurrentWeatherDetailsContainerComponent', 'selector': 'weather-base-current-weather-details-container'},{'name': 'CurrentWeatherSummaryContainerComponent', 'selector': 'weather-base-current-weather-summary-container'},{'name': 'DashboardComponent', 'selector': 'weather-base-dashboard'},{'name': 'FavoritePlacesComponent', 'selector': 'weather-base-favorite-places'},{'name': 'HeaderComponent', 'selector': 'weather-base-header'},{'name': 'InfoCardComponent', 'selector': 'weather-base-info-card'},{'name': 'PlaceCardComponent', 'selector': 'weather-base-place-card'},{'name': 'PlaceHourlyForecastComponent', 'selector': 'weather-base-place-hourly-forecast'},{'name': 'SmartPlaceCardComponent', 'selector': 'weather-base-smart-place-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SmartPlaceCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ValidateDataForPlaceNavigationGuard.html":{"url":"guards/ValidateDataForPlaceNavigationGuard.html","title":"guard - ValidateDataForPlaceNavigationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ValidateDataForPlaceNavigationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/live-weather/src/app/core/router-guards/validate-data-for-place-navigation.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in apps/live-weather/src/app/core/router-guards/validate-data-for-place-navigation.guard.ts:13\n                            \n                        \n\n                \n                    \n                            Creates instance of CityDetailsContainerComponent class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of angular router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/core/router-guards/validate-data-for-place-navigation.guard.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Validates the path before navigating to Place details\n */\nexport class ValidateDataForPlaceNavigationGuard implements CanActivate {\n  /**\n   * Creates instance of ```CityDetailsContainerComponent``` class\n   *\n   * @param router instance of angular router\n   */\n  constructor(private router: Router) {\n\n  }\n\n  /**\n   * @internal\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot): Observable | Promise | boolean | UrlTree {\n    if (!route.params.name || !route.params.id) {\n      this.router.navigate(['/home']);\n\n      return false;\n    }\n\n    return true;\n\n  }\n\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/WeatherIconPipe.html":{"url":"pipes/WeatherIconPipe.html","title":"pipe - WeatherIconPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  WeatherIconPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/live-weather/src/app/shared/pipes/weather-icon.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        weatherIcon\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: unknown)\n                \n            \n\n\n            \n                \n                    Defined in apps/live-weather/src/app/shared/pipes/weather-icon.pipe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        value to be transformed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'weatherIcon'\n})\n/**\n * Helps in transforming icon string to open weather icon URL\n */\nexport class WeatherIconPipe implements PipeTransform {\n\n  /**\n   * @internal\n   * @param value value to be transformed\n   */\n  transform(value: unknown): unknown {\n    return `http://openweathermap.org/img/w/${value}.png`;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/live-weather-e2e/src/support/app.po.ts\n            \n            variable\n            getGreeting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/live-weather-e2e/src/support/commands.ts\n            \n            interface\n            Chainable\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/city-details-container/city-details-container.component.ts\n            \n            component\n            CityDetailsContainerComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/city-search/city-search.component.ts\n            \n            component\n            CitySearchComponent\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/core/data-store/data-store.service.ts\n            \n            injectable\n            DataStoreService\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/core/google-places/google-places.service.ts\n            \n            injectable\n            GooglePlacesService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/core/open-weather/open-weather.service.ts\n            \n            injectable\n            OpenWeatherService\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/core/places/places.service.ts\n            \n            injectable\n            PlacesService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/core/router-guards/validate-data-for-place-navigation.guard.ts\n            \n            guard\n            ValidateDataForPlaceNavigationGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/favorite-places/favorite-places.component.ts\n            \n            component\n            FavoritePlacesComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/air-pollution-card/air-pollution-card.component.ts\n            \n            component\n            AirPollutionCardComponent\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/country-flag/country-flag.component.ts\n            \n            component\n            CountryFlagComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/current-weather-details-container/current-weather-details-container.component.ts\n            \n            component\n            CurrentWeatherDetailsContainerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/current-weather-summary-container/current-weather-summary-container.component.ts\n            \n            component\n            CurrentWeatherSummaryContainerComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/info-card/info-card.component.ts\n            \n            component\n            InfoCardComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/IAirPollution.ts\n            \n            interface\n            IAirPollution\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/IAirPollution.ts\n            \n            interface\n            IAirQuality\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/ICoordinate.ts\n            \n            interface\n            ICoordinate\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/IGooglePlace.ts\n            \n            interface\n            IGooglePlace\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/IGooglePlace.ts\n            \n            interface\n            IPhoto\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/IOpenWeatherReport.ts\n            \n            interface\n            IOpenWeatherReport\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/IPlace.ts\n            \n            interface\n            IPlace\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/IPlaceCard.ts\n            \n            interface\n            IPlaceCard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/IWeatherDetail.ts\n            \n            interface\n            IWeatherDetail\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/models/IWeatherSummary.ts\n            \n            interface\n            IWeatherSummary\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/pipes/air-quality-index.pipe.ts\n            \n            pipe\n            AirQualityIndexPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/pipes/roundoff.pipe.ts\n            \n            pipe\n            RoundoffPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/pipes/weather-icon.pipe.ts\n            \n            pipe\n            WeatherIconPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/place-card/place-card.component.ts\n            \n            component\n            PlaceCardComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/place-hourly-forecast/IChart.ts\n            \n            interface\n            IChart\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/place-hourly-forecast/IChart.ts\n            \n            interface\n            ISeries\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/place-hourly-forecast/place-hourly-forecast.component.ts\n            \n            component\n            PlaceHourlyForecastComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/live-weather/src/app/shared/smart-place-card/smart-place-card.component.ts\n            \n            component\n            SmartPlaceCardComponent\n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                apps/live-weather/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/live-weather/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.2.0\n        \n            @angular/cdk : ^11.2.2\n        \n            @angular/common : ^11.2.0\n        \n            @angular/compiler : ^11.2.0\n        \n            @angular/core : ^11.2.0\n        \n            @angular/flex-layout : ^11.0.0-beta.33\n        \n            @angular/forms : ^11.2.0\n        \n            @angular/material : ^11.2.2\n        \n            @angular/platform-browser : ^11.2.0\n        \n            @angular/platform-browser-dynamic : ^11.2.0\n        \n            @angular/router : ^11.2.0\n        \n            @nrwl/angular : 11.4.0\n        \n            @swimlane/ngx-charts : ^17.0.1\n        \n            rxjs : ~6.6.3\n        \n            tslib : ^2.0.0\n        \n            zone.js : ^0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWeatherBase\nContent\n\nIntroduction\nInstallation\nAPI\nProject Structure\nDeployment\nDocumentation\nCommands\nOthers\n\nIntroduction\nWeather Base is an web application to Monitor weather in your favorite cities across Netherland.\nIt can be extendable to the other parts of world.\n\nApp is built using Angular framework\nWeather related data is retrieved from Open weather API\nPlaces related data is obtained from google places API\nProject structure is based on monorepo style. (Used Nx)\n\nInstallation\nLocal installation\n\nClone this reo using git clone https://github.com/bharathmuppa/weather-base.git\nRun npm ci for a clean install.\nRun npm start to start application in your local machine .\nOpen chrome and navigate to http://localhost:4200\n\nAPI\nThis project makes use of\n\nOpen Weather API (Weather Data)\n\nGo to Open weather\nSubscribe to corresponding api\nAdd a new API key\nPlace the new key in angular environment file\n\n\nGoogle API (Images of places)\n\nGo to Google cloud console\nSelect a project\nSubscribe to places API\nAdd an API key\nPlace the new key in angular environment file\n\n\n\nProject Structure\n\nThis project structure is wel suitable for enterprise level applications to small scale applications.\nIt is platform agnostic architecture\nLearn more about Nx here\nConfigured with latest eslint rules\nPrettier is in place to format the files on Save and on Request\nEquipped with code snippets to help developers to ease the process of documentation\n\nDeployment\nBefore deployment, scripts check for any unit test or e2e test anomalies. Not meeting the check wont let you to push the code\nAfter check code will be pushed to the corresponding branch in github and automatic scripts are in place to deploy it to netlify\nDocumentation\nLatest Documents will be available here\nUseful Commands\nRun ng g component my-component --project=my-app to generate a new component.\nRun npm run generate:Docs to generate docs.\nRun npm run dep-graph to check whole dependencies between projects and libs in this repo.\nRun npm run update to update to latest version.\nRun npm run affected:apps to run sanity check on affected apps\nOthers\nCode scaffolding\nRun ng g component my-component --project=my-app to generate a new component.\nBuild\nRun ng build my-app to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test my-app to execute the unit tests via Jest.\nRun nx affected:test to execute the unit tests affected by a change.\nRunning end-to-end tests\nRun ng e2e my-app to execute the end-to-end tests via Cypress.\nRun nx affected:e2e to execute the end-to-end tests affected by a change.\nUnderstand your workspace\nRun nx dep-graph to see a diagram of the dependencies of your projects.\nFurther help\nThis project was generated using Nx.\n🔎 Nx is a set of Extensible Dev Tools for Monorepos.\nQuick Start & Documentation\nNx Documentation\nAdding capabilities to your workspace\nNx supports many plugins which add capabilities for developing different types of applications and different tools.\nThese capabilities include generating applications, libraries, etc as well as the devtools to test, and build projects as well.\nBelow are our core plugins:\n\nAngular\nng add @nrwl/angular\n\n\nWeb (no framework frontends)\nng add @nrwl/web\n\n\nNest\nng add @nrwl/nest\n\n\nNode\nng add @nrwl/node\n\n\n\nThere are also many community plugins you could add.\nGenerate an application\nRun ng g @nrwl/angular:app my-app to generate an application.\n\nYou can use any of the plugins above to generate applications as well.\n\nWhen using Nx, you can create multiple applications and libraries in the same workspace.\nGenerate a library\nRun ng g @nrwl/angular:lib my-lib to generate a library.\n\nYou can also use any of the plugins above to generate libraries as well.\n\nLibraries are shareable across libraries and applications. They can be imported from @weather-base/mylib.\nVisit the Nx Documentation to learn more.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCityDetailsContainerComponent\n\nCityDetailsContainerComponent\n\nAppModule -->\n\nCityDetailsContainerComponent->AppModule\n\n\n\n\n\nCitySearchComponent\n\nCitySearchComponent\n\nAppModule -->\n\nCitySearchComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFavoritePlacesComponent\n\nFavoritePlacesComponent\n\nAppModule -->\n\nFavoritePlacesComponent->AppModule\n\n\n\nAppModule -->\n\nFavoritePlacesComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAirPollutionCardComponent \n\nAirPollutionCardComponent \n\nAirPollutionCardComponent  -->\n\nSharedModule->AirPollutionCardComponent \n\n\n\n\n\nCountryFlagComponent \n\nCountryFlagComponent \n\nCountryFlagComponent  -->\n\nSharedModule->CountryFlagComponent \n\n\n\n\n\nPlaceCardComponent \n\nPlaceCardComponent \n\nPlaceCardComponent  -->\n\nSharedModule->PlaceCardComponent \n\n\n\n\n\nPlaceHourlyForecastComponent \n\nPlaceHourlyForecastComponent \n\nPlaceHourlyForecastComponent  -->\n\nSharedModule->PlaceHourlyForecastComponent \n\n\n\n\n\nSmartPlaceCardComponent \n\nSmartPlaceCardComponent \n\nSmartPlaceCardComponent  -->\n\nSharedModule->SmartPlaceCardComponent \n\n\n\n\n\nDataStoreService\n\nDataStoreService\n\nAppModule -->\n\nDataStoreService->AppModule\n\n\n\n\n\nGooglePlacesService\n\nGooglePlacesService\n\nAppModule -->\n\nGooglePlacesService->AppModule\n\n\n\n\n\nOpenWeatherService\n\nOpenWeatherService\n\nAppModule -->\n\nOpenWeatherService->AppModule\n\n\n\n\n\nPlacesService\n\nPlacesService\n\nAppModule -->\n\nPlacesService->AppModule\n\n\n\n\n\nAirPollutionCardComponent\n\nAirPollutionCardComponent\n\nSharedModule -->\n\nAirPollutionCardComponent->SharedModule\n\n\n\n\n\nAirQualityIndexPipe\n\nAirQualityIndexPipe\n\nSharedModule -->\n\nAirQualityIndexPipe->SharedModule\n\n\n\n\n\nCountryFlagComponent\n\nCountryFlagComponent\n\nSharedModule -->\n\nCountryFlagComponent->SharedModule\n\n\n\n\n\nCurrentWeatherDetailsContainerComponent\n\nCurrentWeatherDetailsContainerComponent\n\nSharedModule -->\n\nCurrentWeatherDetailsContainerComponent->SharedModule\n\n\n\n\n\nCurrentWeatherSummaryContainerComponent\n\nCurrentWeatherSummaryContainerComponent\n\nSharedModule -->\n\nCurrentWeatherSummaryContainerComponent->SharedModule\n\n\n\n\n\nInfoCardComponent\n\nInfoCardComponent\n\nSharedModule -->\n\nInfoCardComponent->SharedModule\n\n\n\n\n\nPlaceCardComponent\n\nPlaceCardComponent\n\nSharedModule -->\n\nPlaceCardComponent->SharedModule\n\n\n\n\n\nPlaceHourlyForecastComponent\n\nPlaceHourlyForecastComponent\n\nSharedModule -->\n\nPlaceHourlyForecastComponent->SharedModule\n\n\n\n\n\nRoundoffPipe\n\nRoundoffPipe\n\nSharedModule -->\n\nRoundoffPipe->SharedModule\n\n\n\n\n\nSmartPlaceCardComponent\n\nSmartPlaceCardComponent\n\nSharedModule -->\n\nSmartPlaceCardComponent->SharedModule\n\n\n\n\n\nWeatherIconPipe\n\nWeatherIconPipe\n\nSharedModule -->\n\nWeatherIconPipe->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            getGreeting   (apps/.../app.po.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/live-weather/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  openWeatherURL: 'https://api.openweathermap.org/data/2.5/',\n  currentWeatherAPi: 'weather?',\n  onceCallAPI: 'onecall?',\n  airPollutionAPI: 'air_pollution?',\n  iconsApi: 'http://openweathermap.org/img/w/',\n  openWeatherAPIkey: 'd5d148fa23f7958ae9ad9fa0b2aaf860',\n  googleKey: 'AIzaSyC1fENFHQQodb4AbjhzXdR_ECL2ITbsajo',\n  googleKeyNetlify: 'AIzaSyDZ8KVhh1_xdcGreKuhkanR5-KiAt6zoV0'\n}\n                        \n                    \n\n\n            \n        \n\n    apps/live-weather/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  openWeatherURL: 'https://api.openweathermap.org/data/2.5/',\n  currentWeatherAPi: 'weather?',\n  onceCallAPI: 'onecall?',\n  airPollutionAPI: 'air_pollution?',\n  iconsApi: 'http://openweathermap.org/img/w/',\n  openWeatherAPIkey: 'd5d148fa23f7958ae9ad9fa0b2aaf860',\n  googleKey: 'AIzaSyC1fENFHQQodb4AbjhzXdR_ECL2ITbsajo',\n  googleKeyNetlify: 'AIzaSyDZ8KVhh1_xdcGreKuhkanR5-KiAt6zoV0'\n}\n                        \n                    \n\n\n            \n        \n\n    apps/live-weather-e2e/src/support/app.po.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getGreeting\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => cy.get('#header-title')\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
